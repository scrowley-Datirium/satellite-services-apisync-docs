var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/APISyncComplete.html",[0,0.355,1,1.55]],["body/interfaces/APISyncComplete.html",[0,0.703,1,1.812,2,0.712,3,0.092,4,0.092,5,0.092,6,1.291,7,2.559,8,1.131,9,0.53,10,0.48,11,3.252,12,0.218,13,0.014,14,1.268,15,1.461,16,2.798,17,1.113,18,2.35,19,1.957,20,1.342,21,1.555,22,1.6,23,1.342,24,0.25,25,1.243,26,1.342,27,1.342,28,1.342,29,0.968,30,1.812,31,1.15,32,0.816,33,1.317,34,1.243,35,2.06,36,1.411,37,1.683,38,1.882,39,1.346,40,1.683,41,2.139,42,1.623,43,1.812,44,1.154,45,1.833,46,1.113,47,1.746,48,1.512,49,2.309,50,1.849,51,1.342,52,2.221,53,1.342,54,1.342,55,1.291,56,2.596,57,2.183,58,1.746,59,0.903,60,2.221,61,1.957,62,1.273,63,2.139,64,2.16,65,1.231,66,1.555,67,1.812,68,0.841,69,1.812,70,1.882,71,1.567,72,1.567,73,0.935,74,0.935,75,1.342,76,0.935,77,1.623,78,1.037,79,1.074,80,1.957,81,2.309,82,1.452,83,1.916,84,1.957,85,2.309,86,1.957,87,0.699,88,1.957,89,1.957,90,1.291,91,1.957,92,2.221,93,1.342,94,1.291,95,1.342,96,1.243,97,1.104,98,1.291,99,1.342,100,1.342,101,1.342,102,1.342,103,1.342,104,1.342,105,1.882,106,1.291,107,1.291,108,1.291,109,1.342,110,1.291,111,1.342,112,1.342,113,1.037,114,1.342,115,0.151,116,1.342,117,1.002,118,1.342,119,1.291,120,1.154,121,1.291,122,1.243,123,1.342,124,1.342,125,1.197,126,1.342,127,1.197,128,1.243,129,1.154,130,1.461,131,0.968,132,1.074,133,0.903,134,1.074,135,1.342,136,1.342,137,0.007,138,0.007]],["title/interfaces/APISyncMessage.html",[0,0.355,29,1.207]],["body/interfaces/APISyncMessage.html",[0,0.697,1,1.173,2,0.672,3,0.087,4,0.087,5,0.087,6,1.218,8,1.105,9,0.529,12,0.212,13,0.014,14,1.226,15,1.4,16,2.747,17,1.051,18,2.286,19,1.875,20,1.266,21,1.503,22,1.567,23,1.266,24,0.248,25,1.173,26,1.266,27,1.266,28,1.266,29,1.352,30,2.44,31,1.548,32,1.5,33,1.662,34,2.286,35,2.351,36,1.9,37,2.123,38,2.535,39,1.359,40,1.613,41,2.068,42,1.556,43,1.736,44,1.089,45,1.795,46,1.051,47,1.673,48,1.449,49,2.233,50,1.788,51,1.266,52,2.148,53,1.266,54,1.266,55,1.218,56,2.535,57,2.123,58,1.673,59,0.853,60,2.148,61,1.875,62,1.22,63,2.068,64,2.11,65,1.179,66,1.503,67,1.736,68,0.806,69,1.736,70,1.804,71,1.501,72,1.501,73,0.882,74,0.882,75,1.266,76,0.882,77,1.556,78,0.979,79,1.014,80,1.875,81,2.233,82,1.404,83,1.852,84,1.875,85,2.233,86,1.875,87,0.67,88,1.875,89,1.875,90,1.218,91,1.875,92,2.148,93,1.266,94,1.218,95,1.266,96,1.173,97,1.068,98,1.218,99,1.266,100,1.266,101,1.266,102,1.266,103,1.266,104,1.266,105,1.804,106,1.218,107,1.218,108,1.218,109,1.266,110,1.218,111,1.266,112,1.266,113,0.979,114,1.266,115,0.226,116,1.266,117,0.945,118,1.266,119,1.218,120,1.089,121,1.218,122,1.173,123,1.266,124,1.266,125,1.13,126,1.266,127,1.13,128,1.173,129,1.089,130,1.4,131,0.913,132,1.014,133,0.853,134,1.014,135,1.266,136,1.266,137,0.007,138,0.007,139,0.131,140,0.46,141,1.161]],["title/interfaces/APISyncService.html",[0,0.355,25,1.55]],["body/interfaces/APISyncService.html",[0,0.697,1,1.175,2,0.673,3,0.087,4,0.087,5,0.087,6,1.221,8,1.105,9,0.529,10,0.799,12,0.212,13,0.014,14,1.568,15,1.402,16,3.114,17,1.053,18,2.288,19,1.878,20,1.269,21,1.505,22,1.568,23,1.269,24,0.248,25,1.739,26,1.878,27,1.878,28,1.878,29,0.915,30,1.739,31,1.104,32,0.771,33,1.264,34,1.175,35,1.995,36,1.354,37,1.615,38,1.807,39,1.33,40,1.615,41,2.07,42,1.558,43,1.739,44,1.092,45,1.797,46,1.053,47,1.676,48,1.452,49,2.236,50,1.79,51,1.269,52,2.151,53,1.269,54,1.269,55,1.221,56,2.537,57,2.125,58,1.676,59,0.854,60,2.151,61,1.878,62,1.222,63,2.07,64,2.112,65,1.181,66,1.505,67,1.739,68,1.134,69,1.739,70,1.807,71,1.504,72,1.504,73,0.884,74,0.884,75,1.269,76,0.884,77,1.558,78,0.981,79,1.016,80,1.878,81,2.236,82,1.406,83,1.855,84,1.878,85,2.236,86,1.878,87,0.671,88,1.878,89,1.878,90,1.221,91,1.878,92,2.151,93,1.269,94,1.221,95,1.269,96,1.175,97,1.069,98,1.221,99,1.269,100,1.269,101,1.269,102,1.269,103,1.269,104,1.269,105,1.807,106,1.221,107,1.221,108,1.221,109,1.269,110,1.221,111,1.269,112,1.269,113,0.981,114,1.269,115,0.203,116,1.269,117,0.947,118,1.269,119,1.221,120,1.092,121,1.221,122,1.175,123,1.269,124,1.269,125,1.132,126,1.269,127,1.132,128,1.175,129,1.092,130,1.402,131,0.915,132,1.016,133,0.854,134,1.016,135,1.269,136,1.269,137,0.007,138,0.007,139,0.131,141,0.83,142,1.878,143,3.966,144,3.966,145,3.966,146,3.075,147,2.236,148,3.054,149,2.236,150,3.075,151,3.075]],["title/interfaces/APISyncStateMachineObject.html",[0,0.355,152,2.415]],["body/interfaces/APISyncStateMachineObject.html",[0,0.674,2,1.144,3,0.148,4,0.148,5,0.148,8,0.771,9,0.488,12,0.265,13,0.013,14,1.618,15,1.61,24,0.245,29,1.947,31,1.267,32,1.311,39,1.268,68,0.928,77,2.241,78,1.667,79,1.727,87,0.771,97,1.291,115,0.208,117,1.61,137,0.01,138,0.01,139,0.223,140,0.662,152,4.252,153,3.299,154,4.457,155,3.652,156,3.823,157,4.406,158,3.519,159,2.549,160,2.669,161,2.339,162,3.111,163,3.689,164,3.111,165,3.111,166,3.111,167,3.299,168,3.519,169,4.406,170,3.519,171,3.519,172,2.947,173,2.947,174,3.519,175,1.184,176,1.79]],["title/classes/AbsoluteUrlSettings.html",[177,0.073,178,2.415]],["body/classes/AbsoluteUrlSettings.html",[0,0.36,3,0.116,4,0.116,5,0.116,8,0.938,9,0.517,10,1.087,12,0.198,13,0.013,24,0.202,39,1.307,48,1.313,83,1.41,87,1.007,97,1.256,115,0.261,137,0.009,138,0.009,139,0.176,140,0.567,141,1.175,161,1.842,175,0.933,176,1.41,177,0.114,178,4.065,179,1.069,180,2.451,181,4.016,182,4.605,183,4.284,184,4.284,185,4.605,186,1.786,187,2.285,188,4.117,189,4.117,190,4.117,191,4.117,192,4.117,193,4.117,194,1.453,195,1.106,196,0.757,197,1.504,198,0.812,199,2.599,200,3.534,201,2.772,202,3.534,203,2.98,204,2.98,205,2.98,206,2.131,207,2.98,208,2.772,209,2.98,210,2.98,211,2.008,212,2.98,213,2.772,214,2.98,215,2.98,216,2.599,217,2.772,218,2.98,219,3.77,220,2.599,221,2.772,222,2.98,223,2.599,224,2.98,225,2.98,226,2.451,227,2.599,228,0.965,229,2.98,230,2.321,231,2.599,232,2.599,233,2.772,234,2.599,235,2.772,236,2.98,237,2.772,238,0.784,239,2.451,240,2.772]],["title/classes/ApiSyncMachine.html",[177,0.073,241,2.071]],["body/classes/ApiSyncMachine.html",[3,0.116,4,0.116,5,0.116,8,1.11,9,0.524,10,1.13,12,0.197,13,0.013,21,2.043,22,1.724,24,0.234,36,1.888,39,0.99,45,1.498,62,1.099,65,1.062,66,1.55,73,1.177,74,1.177,76,1.177,82,1.062,115,0.262,130,1.954,131,1.888,133,1.137,134,1.352,137,0.009,138,0.009,139,0.175,140,0.564,141,0.854,175,0.927,177,0.132,179,1.062,186,1.857,187,2.251,194,1.448,195,1.099,196,0.753,197,1.498,198,0.808,206,2.128,228,1.487,238,0.78,241,3.239,242,2.193,243,4.004,244,2.518,245,4.093,246,4.093,247,4.093,248,4.093,249,4.093,250,4.093,251,1.625,252,2.82,253,4.093,254,4.093,255,2.308,256,2.838,257,1.758,258,2.584,259,2.193,260,2.584,261,1.997,262,1.564,263,2.193,264,2.437]],["title/injectables/ApiSyncMachinesService.html",[265,1.294,266,2.561]],["body/injectables/ApiSyncMachinesService.html",[3,0.158,4,0.158,5,0.158,10,1.007,12,0.271,13,0.013,24,0.178,59,1.556,68,0.994,115,0.178,137,0.011,138,0.011,139,0.239,141,0.858,142,2.818,147,2.311,149,2.311,177,0.1,196,1.03,198,1.105,241,2.859,244,2.223,255,3.156,265,2.178,266,4.31,267,2.731,268,4.879,269,3.04,270,6.684,271,3.055,272,5.599,273,4.324,274,5.599,275,6.828,276,5.599,277,3.187,278,1.987,279,3.156,280,4.879,281,5.599,282,2.613,283,2.311,284,3.055,285,5.599,286,4.406,287,4.406]],["title/controllers/AppController.html",[288,2.731,289,2.936]],["body/controllers/AppController.html",[2,0.319,3,0.041,4,0.041,5,0.041,8,0.793,9,0.392,10,0.703,12,0.245,13,0.014,14,1.155,15,0.448,17,0.498,21,0.404,22,0.585,24,0.046,31,1.742,32,1.349,34,1.67,36,0.743,38,0.991,45,1.043,46,2.058,47,2.069,48,1.394,50,1.283,58,0.919,59,1.494,65,0.378,68,1.067,71,1.082,78,0.464,79,0.481,82,0.378,87,0.368,94,1.3,96,0.556,97,1.15,110,1.892,113,1.969,115,0.196,117,0.769,120,1.995,125,0.919,131,0.743,132,2.167,137,0.004,138,0.005,139,0.062,141,0.73,142,1.03,143,3.384,144,2.175,145,3.384,147,1.967,149,1.967,154,0.866,155,1.217,160,2.747,161,0.651,162,0.866,163,2.189,164,0.866,165,0.866,166,0.866,167,2.068,172,0.82,176,0.498,177,0.026,181,2.451,186,0.794,216,2.068,220,2.068,226,1.95,232,2.068,233,2.205,234,2.068,235,2.941,237,2.614,238,1.503,256,1.737,257,1.407,262,0.556,266,1.575,269,2.405,271,0.651,278,0.517,282,2.881,283,1.03,284,3.261,288,1.68,289,1.806,290,0.98,291,1.145,292,2.495,293,2.495,294,2.495,295,2.495,296,2.495,297,3.276,298,1.455,299,3.69,300,2.495,301,2.495,302,1.455,303,3.883,304,2.495,305,1.455,306,2.495,307,4.154,308,1.455,309,2.495,310,2.175,311,3.384,312,2.855,313,0.886,314,3.276,315,4.586,316,2.371,317,2.495,318,2.81,319,2.855,320,4.422,321,2.495,322,1.455,323,2.495,324,3.276,325,2.495,326,2.495,327,2.495,328,2.495,329,2.175,330,2.495,331,1.455,332,1.455,333,1.455,334,1.455,335,1.455,336,1.053,337,1.964,338,1.053,339,2.175,340,0.98,341,1.455,342,1.455,343,1.455,344,1.68,345,1.455,346,3.276,347,3.883,348,1.455,349,1.455,350,1.053,351,1.053,352,1.268,353,1.053,354,1.053,355,1.455,356,1.407,357,1.053,358,1.053,359,1.268,360,1.455,361,1.485,362,1.268,363,1.337,364,1.053,365,1.485,366,1.268,367,1.455,368,0.919,369,0.866,370,1.575,371,1.455,372,1.575,373,1.455,374,1.145,375,1.145,376,1.964,377,1.268,378,1.455,379,2.495,380,1.964,381,1.268,382,2.371,383,1.455,384,1.455,385,1.455,386,1.455,387,1.268,388,1.268,389,1.145,390,1.268,391,1.053,392,1.268,393,1.268,394,1.268,395,1.455,396,1.455,397,1.455,398,1.145,399,1.455,400,3.276,401,1.575,402,1.455,403,1.455,404,1.455,405,2.869,406,1.964,407,1.455,408,2.495,409,2.741,410,2.902,411,1.455,412,1.455,413,1.455,414,1.455,415,1.455,416,1.455,417,1.145,418,1.455,419,1.455,420,1.455,421,1.455,422,1.455,423,4.154,424,1.455,425,1.455,426,3.276,427,3.009,428,4.767,429,3.276,430,1.455,431,2.495,432,3.276,433,2.081,434,1.455,435,2.175,436,1.455,437,2.495,438,1.455,439,1.268,440,1.964,441,2.175,442,1.455,443,0.919,444,1.455,445,0.98,446,1.455,447,1.455,448,4.012,449,1.455,450,1.268,451,1.455,452,1.455,453,1.268,454,1.337,455,1.268,456,1.455,457,1.455,458,1.455,459,3.276,460,2.855,461,2.855,462,3.276,463,3.276,464,1.053,465,1.455,466,2.495,467,1.455,468,1.455,469,1.455,470,1.455,471,1.455,472,3.883,473,1.268,474,1.455,475,1.455,476,1.268,477,1.268,478,1.455,479,1.268,480,1.455,481,1.455,482,1.455,483,2.175,484,2.855,485,1.455,486,1.455,487,1.455,488,1.455,489,1.455,490,1.455,491,1.455,492,1.455,493,2.614,494,2.614,495,1.455,496,1.455,497,1.455,498,2.495,499,1.455,500,1.455,501,1.455,502,1.455,503,1.455,504,1.455,505,1.268,506,1.455,507,1.455,508,1.455,509,1.455,510,1.455,511,1.455,512,3.276,513,3.276,514,2.495,515,1.455,516,1.455,517,1.455,518,1.455,519,1.455,520,1.455,521,1.268,522,2.495,523,1.053,524,1.455,525,1.455,526,2.495,527,1.455,528,2.175,529,1.455,530,1.455,531,1.455,532,2.371,533,2.175,534,1.455,535,1.455,536,1.455,537,1.455,538,1.455,539,2.495,540,1.455,541,2.495,542,1.455,543,3.276,544,1.455,545,2.495,546,1.455,547,3.056,548,1.455,549,1.455,550,2.495,551,2.495,552,2.495,553,1.145,554,1.455,555,1.455,556,2.495,557,1.455,558,3.276,559,1.806,560,1.268,561,1.268,562,2.495,563,1.964,564,2.495,565,1.145,566,1.455,567,3.276,568,1.455,569,1.455,570,1.455,571,1.455,572,1.455,573,1.145,574,1.455,575,1.455,576,1.455,577,1.455,578,1.455,579,1.455,580,1.455,581,1.455,582,1.455,583,1.455,584,1.455,585,3.276,586,1.455,587,1.455,588,1.455,589,2.175,590,1.455,591,1.268,592,1.455,593,1.455,594,1.455,595,1.455,596,1.455,597,0.98,598,1.455,599,1.455,600,1.455,601,1.455,602,2.341,603,1.455,604,1.455,605,1.455,606,1.455,607,1.455,608,1.455,609,1.268,610,1.455,611,1.455,612,3.883,613,1.455,614,3.883,615,1.455,616,2.175,617,1.455,618,2.495,619,1.268,620,1.455,621,2.495,622,1.455,623,1.455,624,1.455,625,1.455,626,1.455,627,1.455,628,2.495,629,1.455,630,1.268,631,1.145,632,1.145,633,1.455,634,1.455,635,1.455,636,1.455,637,1.455,638,2.495,639,1.455,640,1.455,641,1.455,642,1.455,643,1.455,644,1.455,645,1.455,646,1.455,647,1.455,648,1.455,649,1.455,650,1.455,651,1.455,652,1.455,653,1.145,654,1.268,655,2.175,656,1.455,657,1.455,658,1.455,659,1.455,660,1.268,661,1.455,662,1.455,663,1.455,664,2.495,665,1.268,666,1.455,667,1.455,668,1.455,669,1.455,670,1.455,671,1.455,672,1.455,673,1.455,674,2.495,675,1.455,676,2.175]],["title/modules/AppModule.html",[677,2.287,678,2.561]],["body/modules/AppModule.html",[3,0.14,4,0.14,5,0.14,12,0.289,13,0.014,24,0.158,59,1.378,137,0.01,138,0.01,177,0.089,196,0.912,269,2.047,278,1.761,289,5.047,290,4.263,337,5.781,338,3.59,340,3.34,356,4.637,357,3.59,677,3.57,678,5.091,679,2.953,680,3.997,681,4.324,682,4.324,683,4.324,684,4.324,685,4.899,686,4.582,687,3.59,688,3.34,689,4.961,690,4.982,691,5.047,692,4.982,693,4.151,694,5.518,695,6.331,696,4.324,697,4.961,698,3.904,699,4.961,700,4.582,701,4.961,702,4.263,703,4.961,704,4.324,705,6.974,706,4.961,707,4.961,708,4.961,709,4.961,710,4.961,711,4.961,712,4.961,713,4.961,714,3.34]],["title/injectables/AppService.html",[265,1.294,356,2.287]],["body/injectables/AppService.html",[2,0.57,3,0.074,4,0.074,5,0.113,8,0.592,9,0.342,10,1.044,12,0.25,13,0.014,17,0.892,21,0.724,22,1.29,24,0.083,29,0.775,31,1.335,32,1.576,46,1.375,47,1.478,48,1.281,59,0.724,62,0.7,68,0.713,71,1.327,97,1.239,98,1.034,115,0.175,129,0.925,131,1.638,137,0.006,138,0.006,139,0.111,140,0.406,141,0.615,142,1.657,147,1.657,149,2.022,154,2.39,160,2.05,161,1.797,176,0.892,177,0.047,186,0.632,227,2.535,230,4.491,238,1.499,251,1.034,262,1.535,265,1.281,267,1.271,269,2.861,271,1.797,277,1.874,278,0.925,282,2.569,283,2.272,284,2.192,299,2.906,307,2.271,316,1.886,344,1.754,350,1.886,353,1.886,356,2.264,361,3.539,362,2.271,363,2.949,364,1.886,368,1.645,369,1.551,390,3.499,391,3.545,405,1.33,409,1.271,410,2.364,417,2.05,433,3.968,440,2.05,448,2.05,454,3.365,493,1.754,494,2.703,523,1.886,532,4.545,533,2.271,559,4.545,609,2.271,616,2.271,653,3.16,676,2.271,688,1.754,693,1.551,698,2.05,714,1.754,715,2.05,716,4.899,717,4.899,718,4.899,719,4.899,720,4.899,721,3.103,722,5.504,723,5.504,724,4.015,725,2.605,726,4.269,727,3.276,728,4.899,729,3.474,730,4.015,731,4.015,732,2.605,733,4.899,734,5.474,735,6.042,736,4.015,737,5.669,738,3.855,739,2.605,740,4.015,741,2.605,742,2.05,743,6.279,744,2.605,745,2.605,746,2.605,747,2.605,748,2.605,749,2.605,750,1.396,751,2.271,752,2.271,753,3.298,754,2.605,755,1.886,756,2.605,757,2.605,758,2.271,759,2.605,760,2.605,761,2.605,762,2.605,763,2.605,764,2.605,765,2.605,766,2.605,767,2.605,768,2.605,769,2.605,770,2.605,771,2.605,772,2.605,773,2.605,774,2.605,775,4.015,776,2.605,777,2.605,778,2.605,779,4.015,780,5.15,781,3.499,782,2.605,783,2.605,784,2.605,785,2.605,786,2.605,787,2.605,788,2.605,789,2.605,790,5.504,791,4.015,792,2.605,793,4.015,794,2.605,795,2.271,796,2.605,797,2.605,798,2.605,799,2.605,800,5.504,801,4.899,802,2.605,803,5.504,804,6.28,805,4.015,806,4.015,807,4.015,808,4.015,809,4.015,810,4.015,811,4.015,812,2.605,813,4.899,814,2.605,815,2.05,816,2.605,817,3.499,818,4.015,819,4.015,820,5.945,821,2.605,822,2.605,823,4.015,824,2.271,825,2.605,826,2.271,827,2.605,828,2.605,829,2.605,830,4.015,831,2.605,832,2.605,833,2.271,834,2.605,835,2.605,836,2.271,837,2.605,838,2.605,839,2.605,840,2.605]],["title/guards/AuthGuard.html",[354,2.936,841,2.731]],["body/guards/AuthGuard.html",[3,0.143,4,0.143,5,0.143,10,0.946,12,0.262,13,0.013,14,1.452,24,0.161,59,1.405,65,1.313,68,1.138,97,1.265,115,0.204,122,1.933,137,0.01,138,0.01,139,0.216,141,0.982,142,2.646,147,2.646,149,2.088,177,0.091,232,3.193,238,0.964,259,3.435,265,2.045,269,2.904,271,2.868,277,2.992,278,1.796,282,2.361,283,2.088,284,2.868,313,1.796,336,3.661,354,4.639,363,3.965,364,3.661,368,3.193,369,3.011,391,4.639,405,2.583,409,2.467,410,2.173,433,2.71,443,3.193,464,3.661,523,4.639,573,3.981,602,2.71,734,4.409,817,4.409,842,4.409,843,7.399,844,5.058,845,5.058,846,6.41,847,7.399,848,5.058,849,6.41,850,5.587,851,4.409,852,4.409,853,5.058,854,5.058,855,3.981,856,4.409,857,5.058,858,4.409,859,5.058,860,5.058,861,5.058,862,5.058]],["title/classes/CWL.html",[177,0.073,863,2.174]],["body/classes/CWL.html",[3,0.162,4,0.21,5,0.121,9,0.518,10,1.156,12,0.203,13,0.013,14,1.688,24,0.206,87,0.631,113,1.365,115,0.259,133,1.189,137,0.009,138,0.009,139,0.183,140,0.581,148,3.658,175,0.969,176,1.968,177,0.13,179,1.111,186,1.901,187,2.27,194,1.492,195,1.149,196,0.787,197,1.543,198,0.844,206,1.927,211,2.087,228,1.521,238,0.815,251,1.699,252,2.389,313,2.702,863,3.717,864,2.412,865,3.462,866,4.435,867,3.863,868,4.369,869,4.279,870,4.279,871,4.279,872,4.279,873,4.279,874,4.279,875,4.279,876,4.279,877,4.279,878,2.547,879,2.185,880,2.547,881,2.881,882,2.701,883,2.881,884,2.881,885,2.881,886,2.881,887,2.412,888,2.701]],["title/injectables/CWLService.html",[265,1.294,889,2.561]],["body/injectables/CWLService.html",[3,0.15,4,0.15,5,0.219,9,0.447,10,0.975,12,0.266,13,0.013,24,0.169,68,1.174,115,0.21,137,0.01,138,0.01,139,0.227,141,1.013,142,2.729,147,2.729,149,2.193,177,0.095,196,0.977,198,1.049,228,1.687,257,3.235,265,2.109,267,2.592,269,2.971,271,2.959,273,4.246,277,3.087,278,1.887,279,2.996,282,2.481,283,2.193,313,1.887,602,2.848,863,4.151,878,3.164,889,4.174,890,4.632,891,4.786,892,5.315,893,5.315,894,6.612,895,5.203,896,5.315,897,5.763,898,5.203,899,4.632,900,5.315,901,5.315,902,3.578]],["title/classes/Config.html",[21,1.127,177,0.073]],["body/classes/Config.html",[3,0.12,4,0.12,5,0.12,8,1.122,9,0.524,10,1.066,12,0.203,13,0.013,21,1.924,22,1.517,24,0.237,36,1.268,39,0.756,45,1.539,62,1.739,65,1.106,66,1.592,73,1.225,74,1.225,76,1.225,82,1.106,115,0.261,130,1.765,131,1.268,133,1.183,134,1.407,137,0.009,138,0.009,139,0.182,140,0.58,141,0.878,175,0.965,177,0.133,179,1.106,186,1.752,187,2.237,194,1.487,195,1.144,196,0.783,197,1.539,198,0.841,206,2.199,228,0.998,238,0.812,241,2.926,242,2.282,243,2.689,244,1.691,251,2.57,252,2.914,255,2.401,256,3.098,257,2.781,258,4.087,259,3.469,260,2.689,261,2.078,262,1.628,263,2.282,264,2.535,903,4.259,904,4.259,905,4.259,906,4.259,907,4.259]],["title/interfaces/CreateAPIMachine.html",[0,0.355,129,1.44]],["body/interfaces/CreateAPIMachine.html",[0,0.698,1,1.178,2,0.675,3,0.087,4,0.087,5,0.087,6,1.223,8,1.106,9,0.529,12,0.212,13,0.014,14,1.229,15,1.404,16,2.751,17,1.055,18,2.291,19,1.881,20,1.272,21,1.976,22,1.757,23,1.272,24,0.248,25,1.178,26,1.272,27,1.272,28,1.272,29,0.917,30,1.742,31,1.551,32,0.773,33,1.266,34,1.178,35,1.997,36,1.903,37,1.618,38,1.809,39,1.33,40,1.618,41,2.073,42,1.561,43,1.742,44,1.094,45,1.798,46,1.055,47,1.678,48,1.454,49,2.239,50,1.792,51,1.272,52,2.153,53,1.272,54,1.272,55,1.223,56,2.539,57,2.128,58,1.678,59,0.856,60,2.153,61,1.881,62,1.224,63,2.073,64,2.114,65,1.183,66,1.507,67,1.742,68,0.809,69,1.742,70,1.809,71,1.506,72,1.506,73,0.886,74,0.886,75,1.272,76,0.886,77,1.561,78,0.983,79,1.018,80,1.881,81,2.239,82,1.408,83,1.857,84,1.881,85,2.239,86,1.881,87,0.672,88,1.881,89,1.881,90,1.223,91,1.881,92,2.153,93,1.272,94,1.223,95,1.272,96,1.178,97,1.07,98,1.223,99,1.272,100,1.272,101,1.272,102,1.272,103,1.272,104,1.272,105,1.809,106,1.223,107,1.223,108,1.223,109,1.272,110,1.223,111,1.272,112,1.272,113,0.983,114,1.272,115,0.235,116,1.272,117,0.949,118,1.272,119,1.223,120,1.094,121,1.223,122,1.178,123,1.272,124,1.272,125,1.135,126,1.272,127,1.135,128,1.178,129,1.618,130,1.846,131,1.784,132,1.98,133,0.856,134,1.018,135,1.272,136,1.272,137,0.007,138,0.007,139,0.132,140,0.461,141,1.026,251,1.809,318,3.299]],["title/interfaces/CustomPm2StartOptions.html",[0,0.355,41,1.55]],["body/interfaces/CustomPm2StartOptions.html",[0,0.692,1,1.116,2,0.639,3,0.082,4,0.082,5,0.082,6,1.159,8,1.092,9,0.53,12,0.206,13,0.014,14,1.19,15,1.349,16,2.702,17,1,18,2.39,19,1.807,20,1.205,21,1.46,22,1.539,23,1.205,24,0.245,25,1.116,26,1.205,27,1.205,28,1.205,29,0.869,30,1.673,31,1.062,32,0.732,33,1.216,34,1.116,35,1.934,36,1.303,37,1.554,38,1.738,39,1.37,40,1.554,41,2.23,42,1.499,43,1.673,44,1.036,45,1.763,46,1,47,1.612,48,1.397,49,2.168,50,1.736,51,1.205,52,2.085,53,1.205,54,1.205,55,1.159,56,2.482,57,2.072,58,1.612,59,0.811,60,2.085,61,1.807,62,1.176,63,2.008,64,2.066,65,1.136,66,1.46,67,1.673,68,0.777,69,1.673,70,1.738,71,1.447,72,1.447,73,0.839,74,0.839,75,1.205,76,0.839,77,1.799,78,0.931,79,0.965,80,2.58,81,2.168,82,1.704,83,1.799,84,1.807,85,2.168,86,2.58,87,0.861,88,2.58,89,1.807,90,1.159,91,1.807,92,2.606,93,2.409,94,1.159,95,1.205,96,1.116,97,1.037,98,2.317,99,2.409,100,2.409,101,2.409,102,2.409,103,1.205,104,1.205,105,1.738,106,1.159,107,1.159,108,1.159,109,1.205,110,1.159,111,1.205,112,1.205,113,0.931,114,1.205,115,0.241,116,1.205,117,0.899,118,1.205,119,1.159,120,1.036,121,1.159,122,1.116,123,1.205,124,1.205,125,1.075,126,1.205,127,1.075,128,1.116,129,1.036,130,1.349,131,0.869,132,0.965,133,0.811,134,0.965,135,1.205,136,1.205,137,0.007,138,0.007,139,0.125,140,0.443,141,1.229]],["title/classes/Date.html",[177,0.073,865,1.815]],["body/classes/Date.html",[3,0.177,4,0.206,5,0.138,9,0.521,10,0.722,12,0.222,13,0.013,14,1.569,24,0.22,87,0.926,113,1.561,115,0.24,133,1.359,137,0.01,138,0.01,139,0.209,140,0.635,148,2.758,175,1.108,176,2.149,177,0.135,179,1.27,186,1.186,187,2.277,194,1.629,195,1.314,196,0.9,197,1.685,198,0.965,206,1.744,211,2.386,228,1.147,238,0.932,313,2.594,863,3.712,864,2.758,865,3.381,866,4.124,867,2.912,868,3.294,878,2.912,879,3.538,880,2.912,881,3.294,882,3.088,883,3.294,884,3.294,885,3.294,886,3.294,887,2.758,888,3.088,908,4.892]],["title/classes/Date-1.html",[177,0.061,382,2.449,865,1.514]],["body/classes/Date-1.html",[3,0.145,4,0.145,5,0.145,9,0.499,10,0.758,12,0.229,13,0.013,14,1.165,24,0.225,87,0.955,115,0.26,137,0.01,138,0.01,139,0.22,140,0.655,148,2.899,175,1.165,177,0.116,179,1.334,186,1.247,187,2.266,194,1.681,195,1.381,196,0.946,197,1.739,198,1.015,206,2.209,228,1.205,238,0.98,865,3.433,867,3.06,879,3.621,909,3.461,910,5.141,911,4.046,912,3.855,913,4.481,914,4.481,915,4.481,916,4.481,917,4.481,918,4.481,919,4.046,920,4.481,921,4.481,922,2.899,923,4.481,924,4.046,925,3.461,926,4.046]],["title/classes/Date-2.html",[177,0.061,815,2.663,865,1.514]],["body/classes/Date-2.html",[3,0.155,4,0.155,5,0.155,9,0.453,10,0.994,12,0.238,13,0.013,24,0.232,87,1.123,115,0.242,120,1.945,137,0.011,138,0.011,139,0.234,140,0.682,175,1.241,177,0.121,179,1.422,186,1.634,187,2.217,194,1.749,195,1.471,196,1.008,197,1.809,198,1.081,228,1.284,238,1.044,753,3.689,865,3.497,879,3.726,922,3.089,927,3.689,928,5.742,929,5.479,930,5.479,931,4.254,932,4.775,933,4.775,934,4.312,935,3.689,936,4.312]],["title/interfaces/DependencyTree.html",[0,0.355,35,1.494]],["body/interfaces/DependencyTree.html",[0,0.696,1,1.153,2,0.66,3,0.085,4,0.085,5,0.085,6,1.197,8,1.1,9,0.53,12,0.21,13,0.014,14,1.213,15,1.382,16,2.731,17,1.033,18,2.267,19,1.851,20,1.245,21,1.488,22,1.693,23,1.245,24,0.247,25,1.153,26,1.245,27,1.245,28,1.245,29,0.898,30,1.714,31,1.088,32,0.757,33,1.246,34,1.153,35,2.446,36,1.335,37,1.592,38,1.781,39,1.355,40,2.25,41,2.423,42,2.171,43,2.267,44,2.105,45,1.784,46,1.033,47,1.652,48,1.431,49,2.742,50,1.77,51,1.245,52,2.638,53,1.245,54,1.245,55,1.197,56,2.517,57,2.105,58,1.652,59,0.838,60,2.638,61,2.616,62,1.205,63,2.047,64,2.095,65,1.164,66,1.488,67,1.714,68,0.796,69,1.714,70,1.781,71,1.482,72,1.482,73,0.867,74,0.867,75,1.245,76,0.867,77,1.536,78,0.962,79,0.997,80,1.851,81,2.21,82,1.39,83,1.834,84,1.851,85,2.21,86,1.851,87,0.662,88,1.851,89,1.851,90,1.197,91,1.851,92,2.126,93,1.245,94,1.197,95,1.245,96,1.153,97,1.057,98,1.197,99,1.245,100,1.245,101,1.245,102,1.245,103,1.245,104,1.245,105,1.781,106,1.197,107,1.197,108,1.197,109,1.245,110,1.197,111,1.245,112,1.245,113,0.962,114,1.245,115,0.234,116,1.245,117,0.929,118,1.245,119,1.197,120,1.071,121,1.197,122,1.153,123,1.245,124,1.245,125,1.111,126,1.245,127,1.111,128,1.153,129,1.071,130,1.382,131,0.898,132,0.997,133,0.838,134,0.997,135,1.245,136,1.245,137,0.007,138,0.007,139,0.129,140,0.454,141,1.18]],["title/classes/Description.html",[177,0.073,313,1.44]],["body/classes/Description.html",[3,0.2,4,0.2,5,0.127,9,0.523,10,1.115,12,0.21,13,0.013,14,1.508,24,0.212,87,0.664,113,1.437,115,0.254,133,1.85,137,0.009,138,0.009,139,0.192,140,0.602,148,2.539,175,1.02,176,2.036,177,0.132,179,1.169,186,1.833,187,2.278,194,1.543,195,1.209,196,0.828,197,1.597,198,0.889,206,1.652,211,3.247,228,1.055,238,0.858,313,2.737,863,3.567,864,2.539,865,3.168,866,3.963,867,2.681,868,3.032,878,2.681,879,2.3,880,3.963,881,4.482,882,2.843,883,3.032,884,3.032,885,3.032,886,3.032,887,2.539,888,2.843,937,4.503,938,4.503,939,4.503,940,4.503,941,4.503,942,4.503]],["title/classes/ExceptionFilter.html",[177,0.073,358,2.936]],["body/classes/ExceptionFilter.html",[3,0.154,4,0.154,5,0.154,10,0.807,12,0.258,13,0.013,16,2.894,17,1.873,24,0.174,58,2.478,68,0.971,115,0.174,137,0.011,138,0.011,139,0.234,141,0.838,142,2.778,147,2.257,149,2.257,177,0.098,179,1.419,238,1.042,278,1.941,283,2.257,313,1.941,336,3.958,358,4.871,359,5.866,409,3.556,433,2.93,460,5.866,461,5.866,851,6.631,852,5.866,943,5.866,944,4.766,945,6.73,946,5.866,947,7.291,948,6.73,949,7.291,950,7.608,951,5.469,952,5.469,953,5.469,954,5.469,955,5.469,956,5.469,957,5.469,958,5.469,959,5.469]],["title/interfaces/FileFromClient.html",[0,0.355,128,1.55]],["body/interfaces/FileFromClient.html",[0,0.703,1,1.243,2,0.712,3,0.092,4,0.092,5,0.092,6,1.291,7,2.559,8,1.131,9,0.53,10,0.48,12,0.218,13,0.014,14,1.268,15,1.461,16,2.798,17,1.113,18,2.35,19,1.957,20,1.342,21,1.555,22,1.6,23,1.342,24,0.25,25,1.243,26,1.342,27,1.342,28,1.342,29,0.968,30,1.812,31,1.15,32,0.816,33,1.317,34,1.243,35,2.06,36,1.411,37,1.683,38,1.882,39,1.346,40,1.683,41,2.139,42,1.623,43,1.812,44,1.154,45,1.833,46,1.113,47,1.746,48,1.512,49,2.309,50,1.849,51,1.342,52,2.221,53,1.342,54,1.342,55,1.291,56,2.596,57,2.183,58,1.746,59,0.903,60,2.221,61,1.957,62,1.273,63,2.139,64,2.16,65,1.231,66,1.555,67,1.812,68,0.841,69,1.812,70,1.882,71,1.567,72,1.567,73,0.935,74,0.935,75,1.342,76,0.935,77,1.623,78,1.037,79,1.074,80,1.957,81,2.309,82,1.452,83,1.916,84,1.957,85,2.309,86,1.957,87,0.699,88,1.957,89,1.957,90,1.291,91,1.957,92,2.221,93,1.342,94,1.291,95,1.342,96,1.243,97,1.104,98,1.291,99,1.342,100,1.342,101,1.342,102,1.342,103,1.342,104,1.342,105,1.882,106,1.291,107,1.291,108,1.291,109,1.342,110,1.291,111,1.342,112,1.342,113,1.037,114,1.342,115,0.151,116,1.342,117,1.002,118,1.342,119,1.291,120,1.154,121,1.291,122,1.243,123,1.342,124,1.342,125,1.197,126,1.342,127,1.197,128,1.812,129,1.154,130,1.461,131,0.968,132,1.074,133,0.903,134,1.074,135,1.342,136,1.342,137,0.007,138,0.007,960,3.252]],["title/classes/Lab.html",[177,0.073,961,2.731]],["body/classes/Lab.html",[3,0.131,4,0.131,5,0.131,9,0.489,10,1.186,12,0.215,13,0.013,24,0.215,68,1.2,83,2.612,87,0.896,115,0.264,137,0.01,138,0.01,139,0.199,140,0.615,175,1.054,177,0.083,179,1.207,186,1.95,187,2.227,194,1.576,195,1.249,196,0.855,197,1.631,198,0.918,206,1.992,219,4.553,228,1.585,238,0.886,252,2.739,313,2.401,879,3.453,922,3.813,924,5.322,961,4.553,962,3.366,963,6.763,964,6.763,965,6.763,966,4.651,967,4.651,968,4.651,969,4.651,970,4.651,971,4.651,972,4.651,973,4.651,974,4.651,975,4.651,976,3.66,977,4.651,978,3.366,979,4.054]],["title/injectables/LabService.html",[265,1.294,980,2.561]],["body/injectables/LabService.html",[3,0.129,4,0.129,5,0.129,9,0.471,10,0.988,12,0.252,13,0.014,24,0.145,57,1.619,58,2.208,68,1.189,115,0.213,137,0.009,138,0.009,139,0.195,141,1.026,142,2.475,147,2.765,149,2.765,177,0.082,196,0.839,198,0.9,206,1.666,228,1.778,230,3.777,238,0.869,257,3.371,265,1.913,267,2.225,269,3.132,271,2.683,273,4.012,277,2.799,278,1.619,279,2.572,282,2.129,283,2.765,284,2.041,313,2.129,405,2.329,409,2.225,410,2.575,597,4.791,602,3.589,742,3.589,833,6.201,891,4.34,895,4.719,897,5.226,898,4.719,902,3.071,961,5.395,976,3.589,980,3.785,981,3.975,982,5.226,983,4.561,984,4.561,985,5.996,986,4.561,987,5.226,988,6.442,989,4.561,990,5.996,991,5.838,992,3.975,993,4.561,994,4.561,995,4.561,996,4.561]],["title/interfaces/LocalFiles.html",[0,0.355,173,2.287]],["body/interfaces/LocalFiles.html",[0,0.673,2,1.136,3,0.147,4,0.147,5,0.147,8,0.765,9,0.487,12,0.264,13,0.013,14,1.613,15,1.598,24,0.245,29,1.938,31,1.258,32,1.302,39,1.365,68,0.921,77,2.23,78,1.655,79,1.714,87,0.765,97,1.285,115,0.237,117,1.598,137,0.01,138,0.01,139,0.222,140,0.659,152,3.877,153,3.275,154,3.088,155,2.531,156,3.326,157,4.385,158,3.493,159,2.531,160,2.649,161,2.321,162,3.088,163,3.672,164,3.088,165,3.088,166,3.088,167,3.275,168,3.493,169,4.385,170,3.493,171,3.493,172,2.925,173,3.672,174,5.028,175,1.692,176,1.776,251,2.586]],["title/classes/MachineCommand.html",[130,1.25,177,0.073]],["body/classes/MachineCommand.html",[3,0.123,4,0.123,5,0.123,8,1.128,9,0.526,10,1.03,12,0.206,13,0.013,21,1.818,22,1.534,24,0.238,36,1.295,39,0.772,45,1.875,62,1.168,65,1.129,66,1.615,73,1.251,74,1.251,76,1.251,82,1.698,115,0.255,130,2.016,131,1.295,133,1.818,134,2.162,137,0.009,138,0.009,139,0.186,140,0.588,141,1.07,175,0.986,177,0.134,179,1.129,186,1.694,187,2.25,194,1.508,195,1.168,196,0.8,197,1.561,198,0.859,206,2.124,228,1.02,238,0.829,241,2.968,242,2.331,243,2.747,244,1.727,252,2.815,255,2.453,256,2.928,257,1.869,258,2.747,259,2.331,260,2.747,261,2.122,262,1.663,263,2.331,264,2.59,997,4.351,998,4.351,999,4.351,1000,4.351]],["title/interfaces/MessageToSatellite.html",[0,0.355,172,2.287]],["body/interfaces/MessageToSatellite.html",[0,0.675,2,1.15,3,0.148,4,0.148,5,0.148,8,0.775,9,0.501,12,0.265,13,0.013,14,1.622,15,1.619,24,0.245,29,2.131,31,1.819,32,1.319,39,1.271,68,0.933,77,2.452,78,1.677,79,1.737,87,0.775,97,1.296,115,0.167,117,1.619,137,0.01,138,0.01,139,0.225,140,0.664,152,3.909,153,3.318,154,3.128,155,2.564,156,3.353,157,4.421,158,3.538,159,2.564,160,2.684,161,2.352,162,3.128,163,3.702,164,3.128,165,3.128,166,3.128,167,3.318,168,3.538,169,4.421,170,3.538,171,3.538,172,3.702,173,2.963,174,3.538,175,1.191,176,1.8]],["title/classes/Metadata.html",[14,0.919,177,0.073]],["body/classes/Metadata.html",[3,0.175,4,0.217,5,0.136,9,0.523,10,0.915,12,0.22,13,0.013,14,1.645,24,0.218,87,0.709,113,1.534,115,0.245,133,1.336,137,0.01,138,0.01,139,0.205,140,0.628,148,2.711,175,1.089,176,2.486,177,0.135,179,1.248,186,1.505,187,2.278,194,1.611,195,1.291,196,0.885,197,1.667,198,0.949,206,1.724,211,2.346,228,1.127,238,0.916,313,2.578,863,3.682,864,2.711,865,3.249,866,4.091,867,2.863,868,3.238,878,2.863,879,2.456,880,2.863,881,3.238,882,3.036,883,3.238,884,3.238,885,3.238,886,3.238,887,2.711,888,3.036,1001,4.809,1002,4.809]],["title/modules/MongoConnectionModule.html",[677,2.287,685,2.561]],["body/modules/MongoConnectionModule.html",[3,0.103,4,0.103,5,0.103,12,0.29,13,0.014,24,0.116,33,1.012,68,1.362,97,0.718,137,0.008,138,0.008,177,0.065,194,1.991,196,0.67,239,3.061,241,1.859,263,2.755,266,4.944,278,1.292,280,3.173,363,4.197,365,4.663,370,4.944,372,4.944,677,2.899,679,2.167,680,3.246,685,5.283,686,3.721,687,2.635,688,2.451,690,4.046,691,2.635,692,4.046,696,3.173,727,4.663,729,4.944,863,1.951,887,2.899,889,4.944,899,3.173,912,2.167,925,3.462,931,2.298,935,3.462,961,2.451,978,3.721,980,4.944,992,3.173,1003,3.173,1004,3.173,1005,3.173,1006,3.641,1007,3.641,1008,3.173,1009,3.641,1010,3.641,1011,3.173,1012,2.451,1013,3.721,1014,3.173,1015,3.173,1016,2.451,1017,3.721,1018,3.173,1019,3.641,1020,3.641,1021,3.641,1022,2.053,1023,3.061,1024,3.173,1025,3.641,1026,3.721,1027,3.173,1028,3.641,1029,3.641,1030,3.641,1031,3.641,1032,3.641,1033,3.641,1034,3.641,1035,3.641,1036,3.641,1037,3.641,1038,3.641,1039,3.641,1040,3.641]],["title/classes/OnOptions.html",[64,1.34,177,0.073]],["body/classes/OnOptions.html",[3,0.132,4,0.132,5,0.132,8,1.099,9,0.518,10,1.001,12,0.216,13,0.013,22,1.097,24,0.216,39,1.083,40,1.662,42,1.603,44,1.662,45,1.822,62,1.257,64,2.525,65,1.215,66,1.997,72,2.242,73,1.346,74,1.346,76,1.951,115,0.254,137,0.01,138,0.01,139,0.2,140,0.617,141,1.171,175,1.061,177,0.129,179,1.215,186,1.645,187,2.247,194,1.583,195,1.257,196,0.861,197,1.638,198,0.924,206,2.123,228,1.097,238,0.892,244,1.859,252,1.724,261,2.284,262,1.789,1022,3.825,1023,2.787,1041,2.787,1042,4.682,1043,4.682,1044,4.682,1045,2.956,1046,3.85,1047,3.388,1048,3.152]],["title/interfaces/OptionTypes.html",[0,0.355,63,1.55]],["body/interfaces/OptionTypes.html",[0,0.703,1,1.241,2,0.711,3,0.092,4,0.092,5,0.092,6,1.289,7,2.556,8,1.131,9,0.53,10,0.479,12,0.217,13,0.014,14,1.267,15,1.459,16,2.797,17,1.112,18,2.349,19,1.955,20,1.34,21,1.554,22,1.599,23,1.34,24,0.25,25,1.241,26,1.34,27,1.34,28,1.34,29,0.967,30,1.811,31,1.149,32,0.815,33,1.316,34,1.241,35,2.059,36,1.41,37,1.682,38,1.881,39,1.345,40,1.682,41,2.137,42,1.622,43,1.811,44,1.153,45,1.832,46,1.112,47,1.744,48,1.511,49,2.308,50,1.848,51,1.34,52,2.22,53,1.34,54,1.34,55,1.289,56,2.594,57,2.182,58,1.744,59,0.902,60,2.22,61,1.955,62,1.272,63,2.349,64,2.159,65,1.23,66,1.554,67,1.811,68,0.841,69,1.811,70,1.881,71,1.565,72,1.848,73,0.934,74,0.934,75,1.34,76,0.934,77,1.622,78,1.036,79,1.073,80,1.955,81,2.308,82,1.451,83,1.915,84,1.955,85,2.308,86,1.955,87,0.699,88,1.955,89,1.955,90,1.289,91,1.955,92,2.22,93,1.34,94,1.289,95,1.34,96,1.241,97,1.103,98,1.289,99,1.34,100,1.34,101,1.34,102,1.34,103,1.34,104,1.34,105,1.881,106,1.289,107,1.289,108,1.289,109,1.34,110,1.289,111,1.34,112,1.34,113,1.036,114,1.34,115,0.151,116,1.34,117,1.001,118,1.34,119,1.289,120,1.153,121,1.289,122,1.241,123,1.34,124,1.34,125,1.196,126,1.34,127,1.196,128,1.241,129,1.153,130,1.459,131,0.967,132,1.073,133,0.902,134,1.073,135,1.34,136,1.34,137,0.007,138,0.007,1049,3.248]],["title/classes/Options.html",[22,0.951,177,0.073]],["body/classes/Options.html",[3,0.126,4,0.126,5,0.126,8,1.134,9,0.526,10,0.87,12,0.209,13,0.013,21,1.838,22,1.651,24,0.239,36,1.323,39,0.789,45,1.583,62,1.194,65,1.717,66,1.957,73,1.279,74,1.279,76,1.279,82,1.154,115,0.256,130,1.816,131,1.323,133,1.236,134,1.469,137,0.009,138,0.009,139,0.19,140,0.597,141,1.079,175,1.007,177,0.135,179,1.154,186,1.43,187,2.235,194,1.53,195,1.194,196,0.818,197,1.583,198,0.877,206,2.195,228,1.042,238,0.847,241,3.011,242,2.383,243,2.807,244,1.765,251,2.341,252,2.909,255,2.507,256,2.96,257,1.91,258,2.807,259,2.383,260,2.807,261,2.169,262,1.7,263,2.383,264,2.647,1050,4.447,1051,4.447]],["title/interfaces/Output.html",[0,0.355,127,1.494]],["body/interfaces/Output.html",[0,0.469,2,1.174,3,0.152,4,0.152,5,0.152,9,0.525,13,0.013,24,0.171,87,1.066,115,0.26,127,2.986,137,0.01,138,0.01,139,0.229,140,0.673,141,1.213,177,0.135,1052,4.676,1053,7.557,1054,7.557,1055,7.557,1056,7.557,1057,7.557,1058,7.557,1059,7.557,1060,7.557]],["title/interfaces/ProcessedStateMachine.html",[0,0.355,1061,2.415]],["body/interfaces/ProcessedStateMachine.html",[0,0.682,2,1.193,3,0.154,4,0.154,5,0.154,8,0.804,9,0.515,12,0.238,13,0.013,24,0.248,31,1.842,32,1.367,33,1.866,50,1.8,71,1.8,82,1.414,87,0.804,115,0.231,132,1.8,137,0.011,138,0.011,139,0.233,140,0.679,155,3.706,156,3.88,159,2.657,401,4.796,410,2.34,427,3.439,454,2.919,721,3.071,750,2.919,1061,3.997,1062,3.668,1063,3.943,1064,3.943,1065,3.243]],["title/interfaces/ProcessedTree.html",[0,0.355,67,1.55]],["body/interfaces/ProcessedTree.html",[0,0.696,1,1.158,2,0.663,3,0.086,4,0.086,5,0.086,6,1.203,8,1.101,9,0.53,12,0.21,13,0.014,14,1.216,15,1.386,16,2.735,17,1.037,18,2.543,19,1.857,20,1.25,21,1.492,22,1.695,23,1.25,24,0.247,25,1.158,26,1.25,27,1.25,28,1.25,29,0.901,30,1.72,31,1.091,32,0.76,33,1.25,34,1.158,35,1.977,36,1.339,37,1.597,38,1.786,39,1.325,40,2.254,41,2.052,42,2.174,43,1.72,44,1.075,45,1.787,46,1.037,47,1.657,48,1.435,49,2.746,50,1.774,51,1.25,52,2.642,53,1.25,54,1.25,55,1.203,56,2.521,57,2.11,58,1.657,59,0.842,60,2.642,61,2.621,62,1.208,63,2.052,64,2.098,65,1.168,66,1.492,67,2.427,68,1.127,69,2.271,70,1.786,71,1.487,72,1.487,73,0.871,74,0.871,75,1.25,76,0.871,77,1.541,78,0.966,79,1.001,80,1.857,81,2.216,82,1.394,83,1.838,84,1.857,85,2.216,86,1.857,87,0.664,88,1.857,89,1.857,90,1.203,91,1.857,92,2.132,93,1.25,94,1.203,95,1.25,96,1.158,97,1.06,98,1.203,99,1.25,100,1.25,101,1.25,102,1.25,103,1.25,104,1.25,105,1.786,106,1.203,107,1.203,108,1.203,109,1.25,110,1.203,111,1.25,112,1.25,113,0.966,114,1.25,115,0.234,116,1.25,117,0.933,118,1.25,119,1.203,120,1.075,121,1.203,122,1.158,123,1.25,124,1.25,125,1.115,126,1.25,127,1.115,128,1.158,129,1.075,130,1.386,131,0.901,132,1.001,133,0.842,134,1.001,135,1.25,136,1.25,137,0.007,138,0.007,139,0.129,140,0.455,141,1.127]],["title/classes/PublicInformation.html",[177,0.073,202,2.561]],["body/classes/PublicInformation.html",[0,0.321,3,0.104,4,0.104,5,0.104,8,0.542,9,0.518,10,1.174,12,0.183,13,0.013,24,0.19,39,1.262,48,1.172,83,1.258,87,1.011,97,1.182,115,0.264,137,0.008,138,0.008,139,0.157,140,0.524,141,1.178,161,2.68,175,0.832,176,1.258,177,0.107,178,3.566,179,0.953,180,2.187,181,2.319,182,2.659,183,2.473,184,2.473,185,2.659,186,1.931,187,2.282,194,1.343,195,0.986,196,0.676,197,1.389,198,0.725,199,2.319,200,3.781,201,2.473,202,3.781,203,4.335,204,4.335,205,4.335,206,2.107,207,4.335,208,4.033,209,4.335,210,4.335,211,2.922,212,4.335,213,4.033,214,4.335,215,4.335,216,3.781,217,2.473,218,2.659,219,3.484,220,2.319,221,2.473,222,2.659,223,2.319,224,2.659,225,2.659,226,2.187,227,2.319,228,0.861,229,2.659,230,2.071,231,2.319,232,2.319,233,2.473,234,2.319,235,2.473,236,2.659,237,2.473,238,0.7,239,2.187,240,2.473,252,1.353,1066,3.674,1067,3.674,1068,3.674,1069,3.674,1070,3.674,1071,3.674,1072,3.674,1073,3.674,1074,3.674,1075,3.674,1076,3.674,1077,3.674,1078,3.674,1079,3.674]],["title/interfaces/RemoteModule.html",[0,0.355,200,2.561]],["body/interfaces/RemoteModule.html",[0,0.391,2,0.978,3,0.126,4,0.126,5,0.126,8,0.659,9,0.521,12,0.209,13,0.013,24,0.211,39,1.253,48,1.425,83,1.53,87,0.978,97,1.308,115,0.259,137,0.009,138,0.009,139,0.191,140,0.598,161,1.999,175,1.012,176,2.417,177,0.119,178,3.947,180,2.66,181,2.82,182,3.233,183,3.008,184,3.008,185,3.233,187,2.285,194,1.535,195,1.2,196,0.822,197,1.588,198,0.882,199,2.82,200,4.186,201,4.752,202,3.734,203,3.233,204,3.233,205,3.233,206,2.171,207,3.233,208,3.008,209,3.233,210,3.233,211,2.179,212,3.233,213,3.008,214,3.233,215,3.233,216,2.82,217,3.008,218,3.233,219,3.982,220,2.82,221,3.008,222,3.233,223,2.82,224,3.233,225,3.233,226,2.66,227,2.82,228,1.047,229,3.233,230,2.519,231,2.82,232,2.82,233,3.008,234,2.82,235,3.008,236,3.233,237,3.008,238,0.851,239,2.66,240,3.008]],["title/classes/Sample.html",[177,0.073,912,2.415]],["body/classes/Sample.html",[3,0.114,4,0.114,5,0.114,9,0.506,10,1.202,12,0.195,13,0.013,14,1.424,24,0.2,87,0.593,115,0.266,137,0.009,138,0.009,139,0.172,140,0.558,141,0.844,148,3.545,175,0.911,177,0.099,179,1.044,186,1.976,187,2.248,194,1.431,195,1.08,196,0.74,197,1.48,198,0.794,206,2.243,228,1.474,238,0.767,252,2.809,865,3.413,867,3.743,879,2.055,909,2.709,911,3.166,912,3.743,913,3.507,914,5.48,915,5.48,916,5.48,917,5.48,918,5.48,919,4.948,920,5.48,921,5.48,922,3.545,923,5.48,924,4.948,925,2.709,926,3.166,1080,4.023,1081,4.023,1082,4.023,1083,4.023,1084,4.023,1085,4.023,1086,4.023,1087,4.023,1088,4.023,1089,4.023,1090,4.023,1091,4.023,1092,4.023,1093,4.023,1094,4.023,1095,4.023]],["title/controllers/SatInterfaceController.html",[288,2.731,1096,2.936]],["body/controllers/SatInterfaceController.html",[2,0.429,3,0.055,4,0.055,5,0.055,8,0.599,9,0.498,10,0.863,12,0.183,13,0.014,24,0.062,30,1.974,31,1.253,32,1.823,33,1.302,34,2.594,35,1.726,36,1.741,37,1.664,39,1.083,46,2.488,47,2.543,48,1.947,50,2.243,56,1.271,59,1.302,68,1.261,82,1.519,97,1.589,113,1.769,115,0.201,121,0.777,129,1.664,132,1.549,137,0.005,138,0.005,139,0.084,141,0.935,142,1.321,147,2.288,149,2.894,160,1.634,161,1.816,164,2.416,165,2.416,166,2.416,177,0.035,186,1.419,223,2.958,227,2.02,238,1.316,251,1.271,256,1.816,257,3.458,259,1.049,262,1.974,269,2.607,271,0.876,277,2.588,278,0.695,282,0.914,283,2.745,284,1.816,288,1.319,290,1.319,299,5.354,310,2.789,313,1.968,315,4.97,320,4.97,356,2.288,357,1.417,368,1.236,369,1.166,388,5.099,389,1.541,398,2.518,405,1.634,406,1.541,409,1.561,410,3.121,417,2.518,433,3.564,435,1.707,439,4.503,440,3.194,443,3.853,445,2.732,448,1.541,450,1.707,494,4.784,521,5.319,547,4.604,553,2.518,560,1.707,561,1.707,563,1.541,565,3.194,573,4.363,602,3.853,654,1.707,665,4.832,693,1.166,714,1.319,721,1.804,737,3.688,738,4.803,750,1.715,755,1.417,826,2.789,928,3.688,1096,2.316,1097,1.707,1098,1.958,1099,3.2,1100,3.2,1101,4.686,1102,3.2,1103,3.2,1104,1.958,1105,5.545,1106,3.2,1107,1.958,1108,1.958,1109,4.686,1110,3.2,1111,1.958,1112,1.958,1113,3.2,1114,3.2,1115,1.958,1116,7.336,1117,3.2,1118,3.2,1119,1.958,1120,4.058,1121,4.686,1122,1.958,1123,6.496,1124,3.2,1125,1.958,1126,1.958,1127,3.2,1128,3.2,1129,1.958,1130,3.2,1131,1.958,1132,3.2,1133,1.958,1134,5.166,1135,1.958,1136,1.958,1137,1.958,1138,1.958,1139,3.2,1140,1.707,1141,1.958,1142,1.958,1143,1.958,1144,1.958,1145,1.958,1146,6.103,1147,4.058,1148,5.166,1149,4.058,1150,4.058,1151,1.958,1152,1.958,1153,1.958,1154,1.958,1155,1.958,1156,1.958,1157,1.958,1158,1.958,1159,1.958,1160,1.958,1161,3.2,1162,3.2,1163,3.2,1164,1.958,1165,1.958,1166,1.958,1167,1.958,1168,3.2,1169,3.2,1170,4.686,1171,1.958,1172,1.958,1173,1.958,1174,1.958,1175,1.958,1176,1.958,1177,4.058,1178,1.958,1179,1.958,1180,1.958,1181,1.958,1182,1.958,1183,1.958,1184,1.958,1185,1.958,1186,1.958]],["title/modules/SatInterfaceModule.html",[677,2.287,700,2.936]],["body/modules/SatInterfaceModule.html",[3,0.173,4,0.173,5,0.173,12,0.271,13,0.013,24,0.195,137,0.011,138,0.011,177,0.11,278,2.172,290,4.848,677,4.06,678,4.546,679,3.642,691,4.428,693,4.287,700,5.212,1096,5.538,1187,6.119,1188,5.333,1189,6.119]],["title/classes/Satellite.html",[97,0.8,177,0.073]],["body/classes/Satellite.html",[0,0.329,3,0.106,4,0.106,5,0.106,8,0.556,9,0.515,10,1.171,12,0.186,13,0.013,24,0.193,39,1.167,48,1.937,83,1.803,87,0.896,97,1.297,115,0.265,137,0.008,138,0.008,139,0.161,140,0.533,161,1.685,175,0.853,176,1.29,177,0.109,178,4.267,179,0.978,180,2.242,181,2.378,182,2.726,183,2.536,184,2.536,185,2.726,186,1.926,187,2.272,194,1.367,195,1.011,196,0.693,197,1.414,198,0.743,199,2.378,200,3.324,201,2.536,202,3.833,203,2.726,204,2.726,205,2.726,206,2.234,207,2.726,208,2.536,209,2.726,210,2.726,211,1.837,212,2.726,213,2.536,214,2.726,215,2.726,216,2.378,217,2.536,218,2.726,219,3.545,220,2.378,221,2.536,222,2.726,223,2.378,224,2.726,225,2.726,226,2.242,227,2.378,228,1.423,229,4.394,230,3.423,231,3.833,232,3.833,233,4.088,234,3.833,235,4.088,236,4.394,237,4.088,238,0.718,239,2.242,240,2.536,252,2.764,1190,3.766,1191,3.766,1192,3.766,1193,3.766,1194,3.766,1195,3.766,1196,3.766,1197,3.766,1198,3.766,1199,3.766,1200,3.766,1201,3.766,1202,3.766]],["title/interfaces/SatelliteConnection.html",[0,0.355,160,2.071]],["body/interfaces/SatelliteConnection.html",[0,0.651,2,1.02,3,0.132,4,0.132,5,0.132,8,0.687,9,0.499,12,0.254,13,0.013,14,1.533,15,1.435,24,0.237,29,1.809,31,1.13,32,1.8,39,1.38,68,0.827,77,2.082,78,1.486,79,1.539,87,0.998,97,1.416,115,0.259,117,1.435,137,0.01,138,0.01,139,0.199,140,0.615,141,1.169,152,3.619,153,2.941,154,2.773,155,2.273,156,3.105,157,4.093,158,3.137,159,2.273,160,3.105,161,3.21,162,4.271,163,4.045,164,4.271,165,4.271,166,4.271,167,4.529,168,4.83,169,5.138,170,4.83,171,4.83,172,2.627,173,2.627,174,3.137,175,1.055,176,1.595,251,2.414]],["title/classes/SatelliteMachine.html",[177,0.073,1022,2.287]],["body/classes/SatelliteMachine.html",[3,0.126,4,0.126,5,0.126,8,1.081,9,0.512,10,1.111,12,0.209,13,0.014,22,1.551,24,0.21,39,1.25,40,2.348,42,2.265,44,2.348,45,1.194,62,1.194,64,2.422,65,1.154,66,1.638,72,2.186,73,1.279,74,1.279,76,1.279,115,0.257,137,0.009,138,0.009,139,0.19,140,0.597,141,1.196,175,1.007,177,0.126,179,1.154,186,1.827,187,2.246,194,1.53,195,1.194,196,0.818,197,1.583,198,0.877,206,2.136,228,1.551,238,0.847,244,2.626,252,2.171,261,2.169,262,1.7,1022,4.133,1023,2.647,1041,2.647,1045,2.807,1046,4.176,1047,3.218,1048,2.994,1203,4.447,1204,4.447,1205,4.447,1206,4.447,1207,4.447,1208,4.447]],["title/injectables/SatelliteMachineService.html",[265,1.294,370,2.561]],["body/injectables/SatelliteMachineService.html",[3,0.158,4,0.158,5,0.158,10,1.007,12,0.271,13,0.013,24,0.178,59,1.556,68,0.994,115,0.178,137,0.011,138,0.011,139,0.239,141,0.858,142,2.818,147,2.311,149,2.311,177,0.1,196,1.03,198,1.105,244,2.223,265,2.178,267,2.731,269,3.04,270,6.684,271,3.055,273,4.324,277,3.187,278,1.987,279,3.156,282,2.613,283,2.311,284,3.055,286,4.406,287,4.406,370,4.31,1022,3.156,1024,4.879,1045,3.534,1209,4.879,1210,5.599,1211,5.599,1212,6.828,1213,5.599,1214,5.599,1215,5.599]],["title/interfaces/SatelliteMessage.html",[0,0.355,117,1.25]],["body/interfaces/SatelliteMessage.html",[0,0.699,1,1.19,2,0.681,3,0.088,4,0.088,5,0.088,6,1.236,8,1.108,9,0.53,12,0.213,13,0.014,14,1.236,15,1.414,16,2.759,17,1.066,18,2.302,19,1.895,20,1.284,21,1.516,22,1.575,23,1.284,24,0.248,25,1.19,26,1.284,27,1.284,28,1.284,29,0.926,30,2.455,31,1.113,32,0.781,33,1.276,34,1.19,35,2.009,36,1.366,37,1.63,38,2.55,39,1.363,40,1.63,41,2.085,42,1.572,43,1.755,44,1.105,45,1.956,46,1.066,47,1.691,48,1.465,49,2.252,50,1.803,51,1.284,52,2.166,53,1.284,54,1.284,55,1.236,56,2.55,57,2.138,58,1.691,59,0.865,60,2.166,61,1.895,62,1.233,63,2.085,64,2.122,65,1.192,66,1.516,67,1.755,68,0.815,69,1.755,70,1.823,71,1.517,72,1.517,73,0.895,74,0.895,75,1.284,76,0.895,77,1.572,78,0.993,79,1.028,80,1.895,81,2.252,82,1.416,83,1.868,84,1.895,85,2.252,86,1.895,87,0.677,88,1.895,89,1.895,90,1.236,91,1.895,92,2.166,93,1.284,94,1.236,95,1.284,96,1.19,97,1.077,98,1.236,99,1.284,100,1.284,101,1.284,102,1.284,103,1.284,104,1.284,105,1.823,106,1.236,107,1.236,108,1.236,109,1.284,110,1.236,111,1.284,112,1.284,113,0.993,114,1.284,115,0.232,116,1.284,117,1.414,118,2.485,119,2.391,120,1.105,121,1.236,122,1.19,123,1.284,124,1.284,125,1.146,126,1.284,127,1.146,128,1.19,129,1.105,130,1.414,131,0.926,132,1.028,133,0.865,134,1.028,135,1.284,136,1.284,137,0.007,138,0.007,139,0.133,140,0.465,141,0.923,251,1.823]],["title/interfaces/SatelliteOutput.html",[0,0.355,125,1.494]],["body/interfaces/SatelliteOutput.html",[0,0.699,1,1.195,2,0.684,3,0.088,4,0.088,5,0.088,6,1.241,8,1.109,9,0.53,12,0.214,13,0.014,14,1.239,15,1.419,16,2.763,17,1.07,18,2.307,19,1.901,20,1.29,21,1.52,22,1.578,23,1.29,24,0.248,25,1.195,26,1.29,27,1.29,28,1.29,29,0.93,30,1.76,31,1.117,32,0.784,33,1.28,34,1.195,35,2.014,36,1.371,37,1.635,38,1.829,39,1.364,40,1.635,41,2.09,42,1.577,43,1.76,44,1.11,45,1.807,46,1.07,47,1.696,48,1.469,49,2.257,50,2.224,51,1.29,52,2.171,53,1.29,54,1.29,55,1.241,56,2.554,57,2.142,58,2.369,59,0.869,60,2.171,61,1.901,62,1.237,63,2.09,64,2.126,65,1.196,66,1.52,67,1.76,68,0.817,69,1.76,70,1.829,71,1.522,72,1.522,73,0.899,74,0.899,75,1.29,76,0.899,77,1.577,78,0.997,79,1.033,80,1.901,81,2.257,82,1.42,83,1.873,84,1.901,85,2.257,86,1.901,87,0.679,88,1.901,89,1.901,90,1.241,91,1.901,92,2.171,93,1.29,94,1.241,95,1.29,96,1.195,97,1.328,98,1.241,99,1.29,100,1.29,101,1.29,102,1.29,103,1.29,104,1.29,105,1.829,106,1.241,107,1.241,108,1.241,109,1.29,110,1.241,111,1.29,112,1.29,113,0.997,114,1.29,115,0.221,116,1.29,117,0.963,118,1.29,119,1.241,120,1.11,121,1.241,122,1.195,123,1.29,124,1.29,125,1.696,126,2.491,127,2.222,128,1.195,129,1.11,130,1.419,131,0.93,132,1.033,133,0.869,134,1.033,135,1.29,136,1.29,137,0.007,138,0.007,139,0.134,140,0.466,141,0.706]],["title/injectables/SatelliteService.html",[265,1.294,363,2.174]],["body/injectables/SatelliteService.html",[2,0.421,3,0.054,4,0.054,5,0.054,9,0.501,10,1.014,12,0.195,13,0.014,15,0.972,24,0.061,39,1.076,57,2.228,59,1.289,68,1.174,78,1.48,87,0.755,97,1.603,115,0.215,122,0.736,137,0.005,138,0.005,139,0.082,140,0.319,141,1.014,142,1.302,147,2.731,149,2.837,161,2.89,173,3.539,176,0.659,177,0.034,178,1.146,183,1.296,184,1.296,186,0.467,196,0.354,198,0.38,199,1.215,201,1.296,211,3.151,213,2.125,216,3.472,217,1.296,220,2.928,221,2.125,228,1.636,230,3.642,231,4.077,238,1.261,257,2.362,262,2.469,265,1.007,267,0.939,269,3.26,271,1.412,273,2.886,277,2.83,278,0.683,279,1.085,283,2.921,284,2.809,313,2.062,320,1.515,363,1.691,368,1.215,369,1.146,405,3.298,409,3.151,410,3.192,423,1.678,433,2.947,443,4.077,445,2.125,464,3.357,476,4.793,477,4.793,479,4.462,484,2.75,494,3.91,505,2.75,523,3.98,528,2.75,547,1.515,589,4.793,591,4.043,597,4.226,602,3.741,631,2.483,632,3.156,653,4.029,738,3.65,742,4.57,758,4.043,841,2.125,882,1.215,891,2.284,895,2.483,902,1.296,912,1.146,982,2.75,987,2.75,988,4.043,991,1.678,1011,1.678,1216,1.678,1217,4.638,1218,3.156,1219,3.156,1220,4.638,1221,3.156,1222,3.156,1223,3.156,1224,3.156,1225,3.156,1226,3.156,1227,1.925,1228,1.925,1229,3.156,1230,1.925,1231,3.156,1232,3.156,1233,3.156,1234,3.156,1235,4.043,1236,1.925,1237,3.156,1238,1.925,1239,1.925,1240,3.156,1241,1.925,1242,4.638,1243,3.156,1244,3.156,1245,3.156,1246,3.156,1247,3.156,1248,3.156,1249,1.925,1250,3.156,1251,3.156,1252,3.156,1253,3.156,1254,3.156,1255,3.156,1256,1.925,1257,3.156,1258,5.5,1259,1.925,1260,1.925,1261,3.156,1262,5.119,1263,1.925,1264,3.156,1265,3.156,1266,3.156,1267,3.156,1268,3.156,1269,3.156,1270,3.156,1271,1.925,1272,3.156,1273,1.925,1274,1.925,1275,1.925,1276,4.01,1277,1.925,1278,3.156,1279,3.156,1280,3.156,1281,4.638,1282,3.156,1283,1.925,1284,4.771,1285,1.925,1286,1.925,1287,1.925,1288,4.638,1289,1.925,1290,1.925,1291,1.925,1292,1.925,1293,1.925,1294,3.156,1295,1.925,1296,3.156,1297,1.925,1298,1.925,1299,3.156,1300,1.925,1301,1.925,1302,1.925,1303,1.925,1304,1.925,1305,4.01,1306,3.156,1307,3.156,1308,3.156,1309,1.925,1310,1.925,1311,3.156,1312,1.925,1313,1.925,1314,1.925,1315,4.01,1316,3.156,1317,1.925,1318,1.925,1319,1.925,1320,1.925]],["title/classes/SatelliteTask.html",[33,1.127,177,0.073]],["body/classes/SatelliteTask.html",[3,0.13,4,0.13,5,0.13,9,0.505,10,1.184,12,0.214,13,0.013,22,1.578,24,0.214,33,1.87,39,1.35,52,2.672,60,2.672,68,1.194,105,2.672,106,2.672,107,2.672,108,2.672,115,0.259,137,0.01,138,0.01,139,0.197,140,0.611,141,1.247,175,1.043,177,0.082,179,1.195,186,1.946,187,2.248,194,1.566,195,1.237,196,0.847,197,1.62,198,0.909,206,1.677,228,1.578,238,0.878,244,2.672,252,1.696,261,2.247,262,1.76,1026,3.333,1321,3.333,1322,4.606,1323,4.606,1324,4.606,1325,4.606,1326,4.606,1327,4.606,1328,4.606,1329,4.606,1330,4.606,1331,4.606,1332,3.624,1333,4.606,1334,4.014]],["title/injectables/SatelliteTasksService.html",[265,1.294,372,2.561]],["body/injectables/SatelliteTasksService.html",[3,0.158,4,0.158,5,0.158,10,1.007,12,0.271,13,0.013,24,0.178,33,1.556,59,1.556,68,0.994,115,0.178,137,0.011,138,0.011,139,0.239,141,0.858,142,2.818,147,2.311,149,2.311,177,0.1,196,1.03,198,1.105,244,2.223,265,2.178,267,2.731,269,3.04,271,3.055,273,4.324,277,3.187,278,1.987,279,3.156,282,2.613,283,2.311,284,3.055,286,4.406,287,4.406,372,4.31,1027,4.879,1332,4.406,1335,4.879,1336,7.67,1337,5.599,1338,5.599,1339,6.828,1340,5.599,1341,5.599,1342,5.599]],["title/interfaces/SciDapDuplexStream.html",[0,0.355,163,2.287]],["body/interfaces/SciDapDuplexStream.html",[0,0.675,2,1.15,3,0.148,4,0.148,5,0.148,8,0.775,9,0.489,12,0.265,13,0.013,14,1.83,15,1.619,24,0.245,29,1.954,31,1.274,32,1.319,39,1.271,68,0.933,77,2.452,78,1.677,79,1.737,87,0.775,97,1.296,115,0.167,117,1.619,137,0.01,138,0.01,139,0.225,140,0.664,152,3.909,153,3.318,154,3.128,155,2.564,156,3.353,157,4.822,158,3.538,159,2.564,160,2.684,161,2.352,162,3.128,163,4.038,164,3.128,165,3.128,166,3.128,167,3.318,168,3.538,169,4.421,170,3.538,171,3.538,172,2.963,173,2.963,174,3.538,175,1.191,176,1.8]],["title/interfaces/SendEvent.html",[0,0.355,750,2.174]],["body/interfaces/SendEvent.html",[0,0.677,2,1.159,3,0.15,4,0.15,5,0.15,8,0.781,9,0.523,12,0.233,13,0.013,24,0.246,31,1.941,32,1.328,33,1.833,50,1.75,71,1.75,82,1.374,87,1.06,115,0.257,132,1.75,137,0.01,138,0.01,139,0.226,140,0.667,141,1.011,155,2.583,156,3.369,159,2.583,401,3.342,410,2.274,427,4.748,454,2.837,721,2.985,750,3.535,1061,3.152,1062,3.565,1063,3.832,1064,3.832,1065,3.152]],["title/interfaces/ServiceCommand.html",[0,0.355,37,1.44]],["body/interfaces/ServiceCommand.html",[0,0.699,1,1.199,2,0.687,3,0.089,4,0.089,5,0.089,6,1.245,8,1.11,9,0.53,12,0.214,13,0.014,14,1.241,15,1.422,16,2.766,17,1.074,18,2.31,19,1.906,20,1.294,21,1.523,22,1.579,23,1.294,24,0.248,25,1.199,26,1.294,27,1.294,28,1.294,29,0.933,30,1.765,31,1.12,32,0.787,33,1.283,34,1.199,35,2.018,36,1.374,37,1.945,38,1.833,39,1.335,40,1.639,41,2.094,42,1.581,43,1.765,44,1.113,45,1.96,46,1.074,47,1.7,48,1.473,49,2.262,50,1.811,51,1.294,52,2.176,53,1.294,54,1.294,55,1.245,56,2.558,57,2.146,58,1.7,59,0.871,60,2.176,61,1.906,62,1.24,63,2.094,64,2.129,65,1.198,66,1.523,67,1.765,68,0.819,69,1.765,70,1.833,71,1.526,72,1.526,73,0.902,74,0.902,75,1.294,76,0.902,77,1.581,78,1.001,79,1.036,80,1.906,81,2.262,82,1.422,83,1.876,84,1.906,85,2.262,86,1.906,87,0.681,88,1.906,89,1.906,90,1.245,91,1.906,92,2.176,93,1.294,94,1.245,95,1.294,96,1.199,97,1.081,98,1.245,99,1.294,100,1.294,101,1.294,102,1.294,103,1.294,104,1.294,105,2.558,106,1.245,107,1.245,108,1.245,109,1.294,110,1.245,111,1.294,112,1.294,113,1.001,114,1.294,115,0.214,116,1.294,117,0.966,118,1.294,119,1.245,120,1.113,121,1.245,122,1.199,123,1.294,124,1.294,125,1.155,126,1.294,127,1.155,128,1.199,129,1.113,130,1.422,131,0.933,132,1.036,133,0.871,134,1.036,135,2.495,136,2.495,137,0.007,138,0.007,139,0.134,140,0.467,141,1.032]],["title/classes/ServiceTag.html",[177,0.073,1016,2.731]],["body/classes/ServiceTag.html",[3,0.154,4,0.154,5,0.154,9,0.493,10,1.12,12,0.237,13,0.013,24,0.231,39,1.19,68,1.291,115,0.248,137,0.011,138,0.011,139,0.232,140,0.679,175,1.232,177,0.097,179,1.411,186,1.841,187,2.2,194,1.741,195,1.46,196,1,197,1.801,198,1.073,228,1.704,238,1.036,780,5.723,1016,4.896,1017,3.935,1343,3.935,1344,7.272,1345,5.437,1346,5.437,1347,5.437,1348,5.437,1349,4.279,1350,4.739,1351,4.739]],["title/interfaces/StartOptions.html",[0,0.355,18,1.55]],["body/interfaces/StartOptions.html",[0,0.7,1,1.205,2,0.69,3,0.089,4,0.089,5,0.089,6,1.252,8,1.111,9,0.529,12,0.214,13,0.014,14,1.245,15,1.428,16,2.771,17,1.08,18,2.468,19,2.269,20,1.302,21,1.528,22,1.583,23,1.302,24,0.249,25,1.205,26,1.302,27,1.302,28,1.302,29,0.939,30,1.772,31,1.124,32,0.791,33,1.288,34,1.205,35,2.024,36,1.38,37,1.646,38,1.841,39,1.388,40,1.646,41,2.101,42,1.588,43,1.772,44,1.12,45,1.813,46,1.08,47,1.707,48,1.479,49,2.269,50,1.817,51,1.302,52,2.183,53,1.302,54,1.302,55,1.252,56,2.564,57,2.151,58,1.707,59,0.876,60,2.183,61,1.913,62,1.245,63,2.101,64,2.134,65,1.203,66,1.528,67,1.772,68,0.823,69,1.772,70,1.841,71,1.532,72,1.532,73,0.907,74,0.907,75,1.302,76,0.907,77,1.882,78,1.006,79,1.042,80,2.665,81,2.269,82,1.427,83,1.882,84,1.913,85,2.269,86,1.913,87,0.684,88,1.913,89,1.913,90,1.252,91,1.913,92,2.183,93,1.302,94,1.252,95,1.302,96,1.205,97,1.085,98,1.252,99,1.302,100,1.302,101,1.302,102,1.302,103,2.501,104,2.501,105,1.841,106,1.252,107,1.252,108,1.252,109,1.302,110,1.252,111,1.302,112,1.302,113,1.006,114,1.302,115,0.205,116,1.302,117,0.972,118,1.302,119,1.252,120,1.12,121,1.252,122,1.205,123,1.302,124,1.302,125,1.161,126,1.302,127,1.161,128,1.205,129,1.12,130,1.428,131,0.939,132,1.042,133,0.876,134,1.042,135,1.302,136,1.302,137,0.007,138,0.007,139,0.135,140,0.469,141,1.035]],["title/classes/State.html",[177,0.073,256,1.815]],["body/classes/State.html",[3,0.124,4,0.124,5,0.124,8,1.131,9,0.525,10,0.97,12,0.207,13,0.013,21,1.828,22,1.542,24,0.239,36,1.309,39,0.781,45,1.572,62,1.181,65,1.142,66,1.626,73,1.892,74,1.892,76,1.265,82,1.142,115,0.257,130,1.803,131,1.309,133,1.222,134,1.453,137,0.009,138,0.009,139,0.188,140,0.592,141,1.151,175,0.996,177,0.135,179,1.142,186,1.595,187,2.244,194,1.519,195,1.181,196,0.809,197,1.572,198,0.868,206,2.163,228,1.031,238,0.838,241,2.989,242,2.357,243,2.776,244,1.746,251,1.746,252,2.867,255,2.48,256,3.139,257,1.889,258,2.776,259,2.357,260,2.776,261,2.145,262,1.681,263,2.357,264,2.618,1352,4.398,1353,4.398,1354,4.398]],["title/modules/StateMachineModules.html",[677,2.287,702,2.731]],["body/modules/StateMachineModules.html",[3,0.156,4,0.156,5,0.156,12,0.277,13,0.013,24,0.176,137,0.011,138,0.011,177,0.099,278,1.96,340,3.718,361,4.966,677,3.817,678,4.274,679,3.287,680,4.274,685,5.032,686,4.9,687,3.996,688,3.718,690,5.328,691,4.9,692,5.328,693,4.03,694,5.901,702,5.531,704,4.813,1188,4.813,1355,4.813,1356,4.813,1357,5.522,1358,4.813,1359,5.522,1360,5.522]],["title/interfaces/StateMachineOptions.html",[0,0.355,69,1.55]],["body/interfaces/StateMachineOptions.html",[0,0.699,1,1.197,2,0.686,3,0.088,4,0.088,5,0.088,6,1.244,8,1.11,9,0.529,12,0.214,13,0.014,14,1.241,15,1.421,16,2.765,17,1.073,18,2.309,19,1.904,20,1.293,21,1.522,22,1.579,23,1.293,24,0.248,25,1.197,26,1.293,27,1.293,28,1.293,29,0.932,30,1.763,31,1.119,32,0.786,33,1.282,34,1.197,35,2.017,36,1.373,37,1.638,38,1.832,39,1.335,40,1.638,41,2.093,42,1.58,43,1.763,44,1.112,45,1.809,46,1.073,47,1.699,48,1.472,49,2.26,50,1.81,51,1.293,52,2.174,53,1.293,54,1.293,55,1.244,56,2.557,57,2.145,58,1.699,59,0.87,60,2.174,61,1.904,62,1.729,63,2.093,64,2.128,65,1.671,66,1.872,67,1.763,68,0.819,69,2.093,70,1.832,71,1.524,72,1.524,73,0.901,74,0.901,75,1.293,76,0.901,77,1.58,78,0.999,79,1.035,80,1.904,81,2.26,82,1.421,83,1.875,84,1.904,85,2.26,86,1.904,87,0.681,88,1.904,89,1.904,90,1.244,91,1.904,92,2.174,93,1.293,94,1.244,95,1.293,96,1.197,97,1.081,98,1.244,99,1.293,100,1.293,101,1.293,102,1.293,103,1.293,104,1.293,105,1.832,106,1.244,107,1.244,108,1.244,109,1.293,110,1.244,111,1.293,112,1.293,113,0.999,114,1.293,115,0.239,116,1.293,117,0.965,118,1.293,119,1.244,120,1.112,121,1.244,122,1.197,123,1.293,124,1.293,125,1.154,126,1.293,127,1.154,128,1.197,129,1.112,130,1.421,131,0.932,132,1.035,133,0.87,134,1.035,135,1.293,136,1.293,137,0.007,138,0.007,139,0.134,140,0.467,141,1.095,251,2.674]],["title/injectables/StateMachinesService.html",[265,1.294,361,2.415]],["body/injectables/StateMachinesService.html",[2,0.471,3,0.061,4,0.061,5,0.061,8,0.731,9,0.446,10,0.963,12,0.257,13,0.014,17,0.737,21,1.609,22,1.272,24,0.068,29,0.641,31,1.84,32,1.086,33,0.96,36,1.029,37,1.227,42,0.737,45,1.991,46,2.235,55,1.719,62,0.928,65,1.286,66,1.609,68,0.613,70,1.967,82,1.124,87,0.933,96,0.823,97,0.978,115,0.193,119,0.855,120,1.227,131,1.942,137,0.005,138,0.005,139,0.092,140,0.35,141,0.53,142,1.426,147,1.426,149,1.426,155,3.338,156,1.1,159,1.05,176,1.482,177,0.039,230,4.096,234,2.733,238,1.455,256,3.212,257,1.484,259,2.655,265,1.103,267,1.05,269,1.787,271,1.547,277,1.613,278,0.764,282,3.49,283,1.787,284,0.964,299,1.559,311,3.012,312,3.773,313,0.764,315,4.558,316,4.192,337,3.899,338,1.559,339,4.318,340,1.45,344,2.915,350,1.559,353,1.559,356,3.059,357,1.559,361,2.057,363,2.655,364,1.559,365,2.95,366,1.877,369,1.282,375,2.72,387,1.877,389,3.407,391,3.133,392,3.773,393,3.773,394,3.773,398,2.72,401,3.128,405,2.771,409,2.646,410,2.876,427,3.656,433,3.735,441,1.877,453,3.773,454,3.794,455,1.877,532,4.405,553,2.72,597,2.915,602,2.655,655,1.877,660,1.877,693,1.282,714,1.45,726,3.773,727,2.95,729,3.128,743,6.074,750,2.655,751,1.877,752,1.877,755,1.559,795,1.877,841,1.45,850,4.318,889,3.128,946,3.773,980,3.128,1061,1.282,1065,1.282,1361,1.695,1362,4.329,1363,4.329,1364,4.329,1365,4.329,1366,4.329,1367,4.329,1368,3.456,1369,2.154,1370,4.329,1371,4.329,1372,2.154,1373,3.456,1374,3.456,1375,2.154,1376,5.426,1377,3.456,1378,4.955,1379,3.456,1380,2.154,1381,2.154,1382,2.154,1383,2.154,1384,2.154,1385,2.154,1386,2.154,1387,2.154,1388,2.154,1389,2.154,1390,1.695,1391,2.154,1392,2.154,1393,2.154,1394,3.456,1395,2.154,1396,2.154,1397,2.154,1398,2.154,1399,3.456,1400,2.154,1401,2.154,1402,2.154,1403,2.154,1404,2.154,1405,2.154,1406,3.899,1407,3.456,1408,2.154,1409,2.154,1410,2.154,1411,6.086,1412,2.154,1413,3.456,1414,2.154,1415,2.154,1416,4.329,1417,4.329,1418,4.329,1419,3.456,1420,3.456,1421,4.329,1422,2.154,1423,2.154,1424,2.154,1425,2.154,1426,4.955,1427,6.086,1428,3.456,1429,3.456,1430,4.329,1431,2.154,1432,2.154,1433,3.456,1434,2.154,1435,2.154,1436,3.456,1437,4.329,1438,2.154,1439,2.154,1440,2.154,1441,2.154,1442,2.154,1443,2.154,1444,2.154,1445,2.154,1446,2.154,1447,2.154,1448,2.154,1449,2.154,1450,2.154,1451,2.154,1452,5.792,1453,2.154,1454,2.154,1455,2.154,1456,2.154,1457,2.154]],["title/classes/StateOptions.html",[72,1.34,177,0.073]],["body/classes/StateOptions.html",[3,0.133,4,0.133,5,0.133,8,1.102,9,0.517,10,1.005,12,0.217,13,0.013,22,1.107,24,0.217,39,1.088,40,1.676,42,1.617,44,1.676,45,1.268,62,1.268,64,2.531,65,1.225,66,1.704,72,2.383,73,1.958,74,1.958,76,1.357,115,0.256,137,0.01,138,0.01,139,0.202,140,0.62,175,1.069,177,0.129,179,1.225,186,1.652,187,2.243,194,1.592,195,1.268,196,0.868,197,1.647,198,0.932,206,2.167,228,1.107,238,0.9,244,1.874,251,1.874,252,2.258,261,2.303,262,1.804,1022,3.84,1023,2.81,1041,2.81,1045,2.98,1046,3.871,1047,3.417,1048,3.179,1458,4.721,1459,4.721,1460,4.721]],["title/interfaces/StoreKey.html",[0,0.355,1065,2.415]],["body/interfaces/StoreKey.html",[0,0.678,2,1.168,3,0.151,4,0.151,5,0.151,8,1.112,9,0.523,12,0.235,13,0.013,24,0.247,31,1.944,32,1.338,33,1.842,50,1.763,71,1.763,82,1.385,87,0.787,115,0.247,132,1.763,137,0.01,138,0.01,139,0.228,140,0.671,155,2.602,156,3.385,159,2.602,401,3.368,410,2.291,427,3.368,454,4.041,721,3.008,750,2.859,1061,3.176,1062,3.592,1063,3.861,1064,3.861,1065,3.945]],["title/classes/SubDomain.html",[177,0.073,1012,2.731]],["body/classes/SubDomain.html",[3,0.143,4,0.143,5,0.143,8,0.747,9,0.509,10,1.151,12,0.227,13,0.013,24,0.224,39,1.139,115,0.257,137,0.01,138,0.01,139,0.217,140,0.649,175,1.148,177,0.091,179,1.315,181,3.199,186,1.892,187,2.215,194,1.666,195,1.361,196,0.932,197,1.723,198,1,206,1.783,208,4.742,226,4.193,228,1.651,238,0.966,244,2.796,251,2.012,252,1.866,922,3.971,1012,4.742,1013,3.667,1461,3.667,1462,7.043,1463,5.067,1464,5.067,1465,5.067,1466,5.067,1467,5.067,1468,5.067,1469,3.988,1470,5.067,1471,5.067,1472,4.416]],["title/injectables/SubDomainService.html",[265,1.294,365,2.415]],["body/injectables/SubDomainService.html",[3,0.126,4,0.126,5,0.126,9,0.438,10,0.976,12,0.249,13,0.014,24,0.142,57,2.095,59,1.237,68,1.048,97,1.447,115,0.188,137,0.009,138,0.009,139,0.19,141,0.904,142,2.436,147,2.436,149,2.436,177,0.08,196,0.819,198,0.879,223,3.726,226,3.514,231,4.179,244,2.628,257,2.843,262,2.694,265,1.883,267,2.172,269,3.173,271,2.641,273,3.974,277,3.424,278,1.581,279,2.511,282,2.079,283,2.732,284,2.962,319,5.144,365,3.514,405,2.274,409,2.172,410,2.535,443,2.811,445,3.974,464,3.223,493,2.999,602,2.386,855,4.645,902,4.457,922,4.135,1012,5.32,1014,3.882,1235,3.882,1284,4.645,1469,3.505,1473,3.882,1474,5.144,1475,7.049,1476,4.454,1477,4.454,1478,5.903,1479,5.903,1480,4.454,1481,5.144,1482,5.903,1483,5.903,1484,4.454,1485,4.454,1486,5.903,1487,5.903,1488,4.454]],["title/classes/TasksQueue.html",[177,0.073,931,2.561]],["body/classes/TasksQueue.html",[3,0.146,4,0.146,5,0.146,9,0.487,10,1.133,12,0.23,13,0.013,24,0.226,87,0.959,115,0.253,120,2.523,137,0.01,138,0.01,139,0.221,140,0.658,175,1.171,177,0.116,179,1.342,186,1.863,187,2.221,194,1.687,195,1.388,196,0.951,197,1.745,198,1.02,228,1.666,238,0.985,252,1.903,753,3.48,865,3.603,879,2.64,922,4.007,927,3.48,928,4.068,931,4.487,932,4.505,933,6.195,934,5.114,935,3.48,936,4.068,1489,5.169,1490,5.169,1491,5.169,1492,5.169,1493,5.169]],["title/injectables/TasksQueueService.html",[265,1.294,727,2.415]],["body/injectables/TasksQueueService.html",[2,0.506,3,0.103,4,0.065,5,0.159,8,0.341,9,0.506,10,0.957,12,0.23,13,0.014,24,0.073,30,1.398,31,1.449,32,1.294,57,0.821,59,1.016,68,1.152,87,0.881,97,1.506,115,0.206,137,0.006,138,0.008,139,0.099,141,0.994,142,1.509,147,2.678,149,2.678,177,0.041,196,0.425,198,0.456,206,1.433,228,1.063,238,1.406,256,1.034,257,3.494,262,1.398,265,1.167,267,1.128,269,3.127,271,1.636,273,3.529,277,3.194,278,0.821,279,1.303,282,2.789,283,2.678,284,3.124,313,2.121,329,3.955,368,1.459,369,1.376,382,1.673,405,2.634,406,4.059,409,2.213,410,2.566,433,1.96,443,4.097,445,2.462,454,1.239,494,3.783,559,2.647,597,4.369,602,3.805,619,3.187,630,2.015,632,5.107,693,1.376,714,1.556,727,2.177,729,3.547,735,5.208,737,6.403,753,1.556,755,1.673,780,1.819,781,3.187,824,4.496,836,2.015,891,2.647,898,5.807,902,3.473,912,3.345,919,1.819,922,4.16,931,1.459,934,1.819,1008,2.015,1015,2.015,1016,1.556,1018,2.015,1284,2.878,1349,1.819,1350,3.187,1474,3.187,1481,5.208,1494,2.015,1495,3.657,1496,3.657,1497,3.657,1498,2.312,1499,4.537,1500,4.537,1501,2.312,1502,3.657,1503,3.657,1504,2.312,1505,3.657,1506,2.312,1507,3.657,1508,3.657,1509,3.657,1510,2.312,1511,3.657,1512,5.158,1513,3.657,1514,2.312,1515,3.657,1516,2.312,1517,3.657,1518,3.657,1519,5.158,1520,2.312,1521,7.101,1522,3.657,1523,5.158,1524,2.312,1525,6.49,1526,3.657,1527,3.657,1528,2.312,1529,2.312,1530,2.312,1531,3.657,1532,2.312,1533,3.657,1534,2.312,1535,2.312,1536,3.657,1537,2.312,1538,2.312,1539,2.312,1540,3.657,1541,4.537,1542,2.312,1543,2.312,1544,3.657,1545,3.657,1546,2.312,1547,2.312,1548,2.312,1549,2.312,1550,2.312,1551,2.312,1552,2.312,1553,3.657,1554,2.312,1555,3.657,1556,2.312,1557,3.657,1558,3.657,1559,2.312,1560,2.312,1561,2.312,1562,2.312,1563,2.312,1564,2.312,1565,2.312,1566,2.312,1567,2.312,1568,3.657,1569,2.312,1570,2.312,1571,2.312,1572,2.312,1573,2.312,1574,2.312,1575,2.312,1576,2.312,1577,2.312,1578,3.955,1579,2.312,1580,2.312,1581,2.312,1582,2.312]],["title/interfaces/TriggerContext.html",[0,0.355,721,2.287]],["body/interfaces/TriggerContext.html",[0,0.674,2,1.144,3,0.148,4,0.148,5,0.148,8,0.771,9,0.522,12,0.232,13,0.013,24,0.245,31,1.935,32,1.311,33,1.818,50,2.474,71,1.727,82,1.943,87,0.771,115,0.25,132,2.474,137,0.01,138,0.01,139,0.223,140,0.662,141,1.147,155,2.549,156,3.342,159,2.549,318,4.736,401,3.299,410,2.245,427,3.299,454,2.8,721,3.689,750,2.8,1061,3.111,1062,3.519,1063,3.783,1064,3.783,1065,3.111]],["title/classes/Type.html",[115,0.129,177,0.073]],["body/classes/Type.html",[3,0.124,4,0.124,5,0.124,8,1.131,9,0.526,10,0.971,12,0.207,13,0.013,21,1.829,22,1.543,24,0.239,36,1.311,39,0.782,45,1.885,62,1.183,65,1.143,66,1.95,73,1.267,74,1.267,76,1.893,82,1.143,115,0.255,130,1.805,131,1.311,133,1.224,134,1.456,137,0.009,138,0.009,139,0.188,140,0.593,141,1.151,175,0.998,177,0.135,179,1.143,186,1.597,187,2.248,194,1.521,195,1.183,196,0.81,197,1.574,198,0.869,206,2.131,228,1.033,238,0.839,241,2.992,242,2.36,243,2.781,244,1.749,252,2.824,255,2.484,256,2.946,257,1.892,258,2.781,259,2.36,260,2.781,261,2.149,262,1.684,263,2.36,264,2.622,1583,4.405,1584,4.405,1585,4.405]],["title/classes/UnProcessedStateMachine.html",[177,0.073,1046,2.561]],["body/classes/UnProcessedStateMachine.html",[3,0.128,4,0.128,5,0.128,8,1.087,9,0.515,10,1.046,12,0.211,13,0.013,22,1.059,24,0.212,39,1.057,40,1.604,42,1.547,44,1.604,45,1.213,62,1.79,64,2.5,65,1.73,66,1.97,72,2.342,73,1.299,74,1.299,76,1.299,115,0.261,137,0.009,138,0.009,139,0.193,140,0.603,141,1.2,175,1.023,177,0.127,179,1.173,186,1.719,187,2.219,194,1.547,195,1.213,196,0.831,197,1.6,198,0.891,206,2.223,228,1.059,238,0.861,244,1.793,251,2.814,252,2.713,261,2.204,262,1.727,1022,3.759,1023,2.689,1041,2.689,1045,2.852,1046,4.209,1047,3.27,1048,3.042,1586,4.518,1587,4.518,1588,4.518,1589,4.518]],["title/interfaces/UnProcessedStateMachineOptions.html",[0,0.355,43,1.55]],["body/interfaces/UnProcessedStateMachineOptions.html",[0,0.699,1,1.192,2,0.683,3,0.088,4,0.088,5,0.088,6,1.238,8,1.109,9,0.529,12,0.213,13,0.014,14,1.237,15,1.417,16,2.761,17,1.068,18,2.304,19,1.898,20,1.287,21,1.518,22,1.576,23,1.287,24,0.248,25,1.192,26,1.287,27,1.287,28,1.287,29,0.928,30,1.758,31,1.115,32,0.783,33,1.278,34,1.192,35,2.011,36,1.368,37,1.632,38,1.826,39,1.334,40,1.632,41,2.088,42,1.575,43,2.088,44,1.107,45,1.806,46,1.068,47,1.693,48,1.467,49,2.254,50,1.805,51,1.287,52,2.169,53,1.287,54,1.287,55,1.238,56,2.552,57,2.14,58,1.693,59,0.867,60,2.169,61,1.898,62,1.726,63,2.457,64,2.124,65,1.668,66,1.869,67,1.758,68,0.816,69,1.758,70,1.826,71,1.52,72,1.52,73,0.897,74,0.897,75,1.287,76,0.897,77,1.575,78,0.995,79,1.031,80,1.898,81,2.254,82,1.418,83,1.87,84,1.898,85,2.254,86,1.898,87,0.678,88,1.898,89,1.898,90,1.238,91,1.898,92,2.169,93,1.287,94,1.238,95,1.287,96,1.192,97,1.078,98,1.238,99,1.287,100,1.287,101,1.287,102,1.287,103,1.287,104,1.287,105,1.826,106,1.238,107,1.238,108,1.238,109,1.287,110,1.238,111,1.287,112,1.287,113,0.995,114,1.287,115,0.242,116,1.287,117,0.961,118,1.287,119,1.238,120,1.107,121,1.238,122,1.192,123,1.287,124,1.287,125,1.149,126,1.287,127,1.149,128,1.192,129,1.107,130,1.417,131,0.928,132,1.031,133,0.867,134,1.031,135,1.287,136,1.287,137,0.007,138,0.007,139,0.133,140,0.465,141,1.094,251,2.67]],["title/coverage.html",[1590,4.362]],["body/coverage.html",[0,0.716,1,1.094,5,0.081,6,3.134,13,0.013,14,0.649,18,1.094,21,0.796,22,0.671,25,1.094,29,0.852,33,1.199,35,1.054,37,1.017,41,1.094,43,1.094,63,1.094,64,1.426,67,1.094,69,1.094,72,1.426,90,3.149,97,0.565,115,0.137,117,0.882,125,1.054,127,1.054,128,1.094,129,1.017,130,1.329,137,0.007,138,0.007,152,1.705,153,3.914,160,1.462,163,1.614,172,1.614,173,1.614,176,1.778,177,0.146,178,1.705,180,3.691,200,1.808,202,1.808,239,1.705,241,1.462,242,3.624,256,1.281,263,1.534,265,2.351,266,1.808,268,2.496,288,2.905,289,2.072,291,5.322,313,1.017,318,2.072,344,2.905,351,2.072,354,2.072,356,1.614,358,2.072,361,1.705,363,1.534,365,1.705,370,1.808,372,1.808,374,2.253,376,2.253,380,2.253,433,1.534,559,6.173,715,4.086,721,1.614,727,1.705,729,1.808,750,1.534,841,1.928,842,2.496,863,1.534,864,3.674,865,2.323,866,1.705,887,1.614,889,1.808,890,2.496,909,3.496,912,1.705,925,1.928,927,3.496,931,1.808,935,1.928,943,2.496,944,2.496,961,1.928,962,3.123,978,2.072,980,1.808,981,2.496,1012,1.928,1013,2.072,1016,1.928,1017,2.072,1022,1.614,1023,1.705,1026,2.072,1041,3.691,1046,1.808,1052,2.496,1061,1.705,1062,3.891,1065,1.705,1096,2.072,1097,2.496,1209,2.496,1216,2.496,1321,3.123,1335,2.496,1343,3.123,1361,3.395,1390,2.253,1461,3.123,1473,2.496,1494,2.496,1578,2.496,1590,2.253,1591,2.864,1592,2.864,1593,2.864,1594,2.864,1595,2.864,1596,8.058,1597,4.315,1598,4.315,1599,2.864,1600,2.864,1601,6.517,1602,6.763,1603,2.864,1604,5.192,1605,7.257,1606,6.517,1607,5.779,1608,7.257,1609,5.779,1610,4.315,1611,2.496,1612,2.496,1613,2.496,1614,5.192,1615,4.315,1616,2.864,1617,2.864,1618,2.864,1619,2.864,1620,2.864,1621,2.864,1622,2.864,1623,2.864,1624,2.864,1625,2.864,1626,2.864,1627,2.864,1628,2.864,1629,2.864,1630,2.864,1631,2.864]],["title/dependencies.html",[680,3.081,1632,2.95]],["body/dependencies.html",[13,0.013,14,1.315,15,1.788,17,1.988,137,0.011,138,0.011,159,2.832,196,1.068,198,1.146,278,2.061,336,4.201,338,4.201,340,3.908,351,4.201,680,3.665,698,4.568,1140,5.059,1633,5.805,1634,5.805,1635,5.805,1636,5.805,1637,7.764,1638,5.805,1639,5.805,1640,5.805,1641,5.805,1642,5.805,1643,5.805,1644,5.805,1645,5.805,1646,5.805,1647,5.805,1648,5.805,1649,5.805,1650,5.805,1651,5.805,1652,5.805,1653,5.805,1654,5.805,1655,5.805,1656,5.805,1657,5.805]],["title/miscellaneous/functions.html",[1406,3.841,1658,2.136]],["body/miscellaneous/functions.html",[13,0.012,137,0.012,138,0.012,139,0.278,1406,5.125,1612,5.676,1613,6.842,1658,4.111,1659,6.513]],["title/classes/git.html",[177,0.073,866,2.415]],["body/classes/git.html",[3,0.17,4,0.201,5,0.129,9,0.523,10,1.091,12,0.213,13,0.013,14,1.52,24,0.213,87,0.675,113,2.14,115,0.253,133,1.271,137,0.009,138,0.009,139,0.196,140,0.608,148,2.58,175,1.037,176,2.439,177,0.133,179,1.188,186,1.794,187,2.278,194,1.56,195,1.229,196,0.842,197,1.614,198,0.903,206,1.67,211,2.232,228,1.073,238,0.872,313,2.529,863,3.595,864,2.58,865,3.188,866,4.241,867,2.724,868,3.081,878,2.724,879,2.337,880,2.724,881,3.081,882,4.235,883,4.517,884,4.517,885,3.081,886,3.081,887,2.58,888,2.889,1660,4.576,1661,4.576,1662,4.576,1663,4.576,1664,4.576]],["title/index.html",[139,0.145,563,2.663,1665,3.384]],["body/index.html",[4,0.154,13,0.013,92,2.167,137,0.011,138,0.011,313,1.938,316,5.753,473,4.757,493,4.526,565,4.295,631,4.295,855,4.295,856,4.757,858,4.757,880,3.249,1590,4.295,1666,5.458,1667,5.458,1668,6.722,1669,5.458,1670,5.458,1671,5.458,1672,5.458,1673,5.458,1674,7.285,1675,5.458,1676,5.458,1677,5.458,1678,5.458,1679,8.055,1680,5.458,1681,5.458,1682,6.722,1683,5.458,1684,5.458,1685,5.458,1686,5.458,1687,6.722,1688,5.458,1689,5.458,1690,5.458,1691,6.722,1692,6.722,1693,5.458,1694,5.458,1695,5.458,1696,5.458,1697,4.757,1698,5.458,1699,5.458,1700,5.458,1701,5.458,1702,5.458,1703,5.458,1704,5.458,1705,5.458,1706,5.458,1707,5.458,1708,5.458,1709,5.458,1710,5.458,1711,5.458,1712,4.757]],["title/modules.html",[679,3.3]],["body/modules.html",[13,0.012,137,0.012,138,0.012,678,4.001,679,3.773,685,4.001,700,4.587,702,4.267,1697,6.767,1713,7.764,1714,7.764,1715,7.989,1716,6.338,1717,6.338]],["title/overview.html",[1718,4.831]],["body/overview.html",[2,1.03,13,0.013,137,0.01,138,0.01,179,1.221,266,4.919,267,2.295,290,3.168,356,4.393,361,4.638,363,4.175,365,4.638,370,4.919,372,4.919,382,3.405,678,4.919,679,2.801,680,3.863,681,4.101,682,4.101,683,4.101,684,4.101,685,5.374,686,4.429,687,3.405,688,3.168,702,5.246,727,4.638,729,4.919,815,3.703,841,3.168,889,4.919,980,4.919,1003,4.101,1004,4.101,1005,4.101,1355,4.101,1356,4.101,1358,4.101,1718,4.101,1719,4.705,1720,4.705,1721,4.705,1722,4.705]],["title/properties.html",[140,0.494,1632,2.95]],["body/properties.html",[13,0.013,137,0.012,138,0.012,140,0.654,211,3.155,313,2.296,880,3.85,1712,5.637,1723,6.468,1724,6.468]],["title/miscellaneous/typealiases.html",[1658,2.136,1725,4.881]],["body/miscellaneous/typealiases.html",[13,0.011,115,0.191,137,0.011,138,0.011,139,0.257,180,3.58,199,4.5,242,3.223,255,4.019,753,4.799,864,3.391,878,4.243,909,4.05,911,5.61,927,4.05,962,4.353,976,5.61,1041,3.58,1045,4.5,1321,4.353,1332,5.61,1343,4.353,1349,5.61,1461,4.353,1469,5.61,1658,3.797,1726,6.015,1727,5.242,1728,5.242,1729,5.242,1730,5.242,1731,5.242,1732,5.242,1733,5.242,1734,5.242,1735,5.242,1736,5.242]],["title/miscellaneous/variables.html",[1658,2.136,1737,4.254]],["body/miscellaneous/variables.html",[3,0.164,9,0.36,13,0.013,31,1.586,46,1.488,68,1.16,87,0.856,97,0.857,115,0.185,137,0.009,138,0.009,139,0.186,162,2.586,176,2.617,180,2.586,238,0.828,239,3.456,240,2.925,242,2.328,256,1.944,263,3.111,264,2.586,269,1.793,283,1.793,284,2.598,291,3.419,344,4.699,350,4.732,351,4.202,352,3.786,353,4.202,374,4.569,375,3.419,376,4.569,377,3.786,380,4.569,381,3.786,405,2.218,409,2.119,410,1.866,454,4.461,483,3.786,493,2.925,532,6.026,715,3.419,864,2.449,887,3.273,888,2.742,909,2.925,925,3.909,926,3.419,927,2.925,935,3.909,936,3.419,962,3.144,978,4.202,979,3.786,1013,4.202,1017,4.202,1023,3.456,1026,4.202,1041,2.586,1048,2.925,1321,3.144,1334,3.786,1343,3.144,1351,3.786,1361,3.419,1390,4.569,1461,3.144,1472,3.786,1611,3.786,1658,2.742,1727,3.786,1728,3.786,1729,3.786,1730,3.786,1731,3.786,1732,3.786,1733,3.786,1734,3.786,1735,3.786,1736,3.786,1737,3.786,1738,7.484,1739,5.806,1740,4.344,1741,4.344,1742,5.806,1743,5.806,1744,4.344,1745,4.344,1746,4.344,1747,4.344,1748,4.344,1749,4.344,1750,5.806,1751,4.344,1752,5.806,1753,4.344]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"classes/git.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":559,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/TasksQueueService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1723,"title":{},"body":{"properties.html":{}}}],["0.0.4",{"_index":1636,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1652,"title":{},"body":{"dependencies.html":{}}}],["0.5.5",{"_index":1635,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1596,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1610,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1607,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1603,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1623,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1622,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1621,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1609,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1608,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1602,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1605,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1606,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1601,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1604,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":382,"title":{"classes/Date-1.html":{}},"body":{"controllers/AppController.html":{},"injectables/TasksQueueService.html":{},"overview.html":{}}}],["1.0.1",{"_index":1646,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":1643,"title":{},"body":{"dependencies.html":{}}}],["1.1.6",{"_index":1638,"title":{},"body":{"dependencies.html":{}}}],["1.23.2",{"_index":1648,"title":{},"body":{"dependencies.html":{}}}],["1.24.4",{"_index":1649,"title":{},"body":{"dependencies.html":{}}}],["1.8.15",{"_index":1645,"title":{},"body":{"dependencies.html":{}}}],["1/10",{"_index":1629,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":1600,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1626,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1598,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1578,"title":{},"body":{"injectables/TasksQueueService.html":{},"coverage.html":{}}}],["100",{"_index":1526,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["1000",{"_index":1282,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["11",{"_index":1720,"title":{},"body":{"overview.html":{}}}],["11/16",{"_index":1618,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1279,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["2",{"_index":815,"title":{"classes/Date-2.html":{}},"body":{"injectables/AppService.html":{},"overview.html":{}}}],["2/4",{"_index":1615,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1595,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":1172,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["24",{"_index":1280,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["27",{"_index":1721,"title":{},"body":{"overview.html":{}}}],["28",{"_index":1594,"title":{},"body":{"coverage.html":{}}}],["3.0.2",{"_index":1654,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1722,"title":{},"body":{"overview.html":{}}}],["30000",{"_index":377,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["30s",{"_index":378,"title":{},"body":{"controllers/AppController.html":{}}}],["33",{"_index":1597,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1719,"title":{},"body":{"overview.html":{}}}],["4.26.1",{"_index":1657,"title":{},"body":{"dependencies.html":{}}}],["42",{"_index":1619,"title":{},"body":{"coverage.html":{}}}],["5.11.1",{"_index":1650,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1614,"title":{},"body":{"coverage.html":{}}}],["6.6.3",{"_index":1655,"title":{},"body":{"dependencies.html":{}}}],["6/14",{"_index":1620,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":1625,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1281,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["60000",{"_index":381,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["66",{"_index":1624,"title":{},"body":{"coverage.html":{}}}],["68",{"_index":1617,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":1640,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":1637,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":1628,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":765,"title":{},"body":{"injectables/AppService.html":{}}}],["8.3.2",{"_index":1656,"title":{},"body":{"dependencies.html":{}}}],["87",{"_index":1627,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1599,"title":{},"body":{"coverage.html":{}}}],["_apisyncmachinemodel",{"_index":275,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{}}}],["_apisyncmachinesservice",{"_index":395,"title":{},"body":{"controllers/AppController.html":{}}}],["_appservice",{"_index":389,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{},"injectables/StateMachinesService.html":{}}}],["_configservice",{"_index":394,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["_cwlservice",{"_index":1373,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["_fs",{"_index":1362,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["_fspromises",{"_index":1363,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["_httpservice",{"_index":393,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["_id",{"_index":228,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{}}}],["_labservice",{"_index":1371,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["_mergedefaultconfigwithcustom",{"_index":292,"title":{},"body":{"controllers/AppController.html":{}}}],["_mergedefaultconfigwithcustom(machines",{"_index":296,"title":{},"body":{"controllers/AppController.html":{}}}],["_path",{"_index":1364,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["_sampleservice",{"_index":1370,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["_samplesservice",{"_index":728,"title":{},"body":{"injectables/AppService.html":{}}}],["_satellitemachinemodel",{"_index":1212,"title":{},"body":{"injectables/SatelliteMachineService.html":{}}}],["_satellitemachineservice",{"_index":396,"title":{},"body":{"controllers/AppController.html":{}}}],["_satelliteservice",{"_index":391,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/StateMachinesService.html":{}}}],["_satellitetaskmodel",{"_index":1339,"title":{},"body":{"injectables/SatelliteTasksService.html":{}}}],["_satellitetasksservice",{"_index":397,"title":{},"body":{"controllers/AppController.html":{}}}],["_statemachineservice",{"_index":390,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["_subdomainservice",{"_index":392,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["_tasksqueueservice",{"_index":726,"title":{},"body":{"injectables/AppService.html":{},"injectables/StateMachinesService.html":{}}}],["a.date.modified",{"_index":810,"title":{},"body":{"injectables/AppService.html":{}}}],["abscert",{"_index":500,"title":{},"body":{"controllers/AppController.html":{}}}],["abskey",{"_index":497,"title":{},"body":{"controllers/AppController.html":{}}}],["absoluteurl",{"_index":208,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"classes/SubDomain.html":{}}}],["absoluteurlsettings",{"_index":178,"title":{"classes/AbsoluteUrlSettings.html":{}},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{},"coverage.html":{}}}],["access",{"_index":1544,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["accessor",{"_index":664,"title":{},"body":{"controllers/AppController.html":{}}}],["accessor[i",{"_index":670,"title":{},"body":{"controllers/AppController.html":{}}}],["accessor[last",{"_index":671,"title":{},"body":{"controllers/AppController.html":{}}}],["action",{"_index":120,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/TasksQueue.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["action.split('.').reduce((acum",{"_index":647,"title":{},"body":{"controllers/AppController.html":{}}}],["actions",{"_index":66,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["actions[k]).call(this",{"_index":1434,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["acum[curr",{"_index":649,"title":{},"body":{"controllers/AppController.html":{}}}],["add",{"_index":817,"title":{},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{}}}],["address",{"_index":477,"title":{},"body":{"controllers/AppController.html":{},"injectables/SatelliteService.html":{}}}],["aliases",{"_index":1726,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alive",{"_index":608,"title":{},"body":{"controllers/AppController.html":{}}}],["allow",{"_index":1428,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["always",{"_index":81,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["amazing",{"_index":1698,"title":{},"body":{"index.html":{}}}],["amount",{"_index":990,"title":{},"body":{"injectables/LabService.html":{}}}],["api",{"_index":47,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["api_sync_machines",{"_index":260,"title":{},"body":{"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"classes/Options.html":{},"classes/State.html":{},"classes/Type.html":{}}}],["apimachine",{"_index":49,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["apimachines",{"_index":235,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["apisynccomplete",{"_index":1,"title":{"interfaces/APISyncComplete.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["apisyncmachine",{"_index":241,"title":{"classes/ApiSyncMachine.html":{}},"body":{"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"modules/MongoConnectionModule.html":{},"classes/Options.html":{},"classes/State.html":{},"classes/Type.html":{},"coverage.html":{}}}],["apisyncmachine.name",{"_index":1037,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["apisyncmachinedocument",{"_index":255,"title":{},"body":{"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"classes/Options.html":{},"classes/State.html":{},"classes/Type.html":{},"miscellaneous/typealiases.html":{}}}],["apisyncmachines.service",{"_index":1021,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["apisyncmachineschema",{"_index":263,"title":{},"body":{"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"modules/MongoConnectionModule.html":{},"classes/Options.html":{},"classes/State.html":{},"classes/Type.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apisyncmachinesservice",{"_index":266,"title":{"injectables/ApiSyncMachinesService.html":{}},"body":{"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/MongoConnectionModule.html":{},"coverage.html":{},"overview.html":{}}}],["apisyncmessage",{"_index":29,"title":{"interfaces/APISyncMessage.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"injectables/AppService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["apisyncservice",{"_index":25,"title":{"interfaces/APISyncService.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["apisyncstatemachineobject",{"_index":152,"title":{"interfaces/APISyncStateMachineObject.html":{}},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{},"coverage.html":{}}}],["app",{"_index":1681,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":699,"title":{},"body":{"modules/AppModule.html":{}}}],["app.guard",{"_index":355,"title":{},"body":{"controllers/AppController.html":{}}}],["app.module",{"_index":1188,"title":{},"body":{"modules/SatInterfaceModule.html":{},"modules/StateMachineModules.html":{}}}],["app.service",{"_index":357,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/SatInterfaceController.html":{},"injectables/StateMachinesService.html":{}}}],["appcontroller",{"_index":289,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1673,"title":{},"body":{"index.html":{}}}],["applyto",{"_index":243,"title":{},"body":{"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"classes/Options.html":{},"classes/State.html":{},"classes/Type.html":{}}}],["appmodule",{"_index":678,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SatInterfaceModule.html":{},"modules/StateMachineModules.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":1395,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["appservice",{"_index":356,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{},"injectables/StateMachinesService.html":{},"coverage.html":{},"overview.html":{}}}],["arg",{"_index":651,"title":{},"body":{"controllers/AppController.html":{}}}],["args",{"_index":82,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["arguments",{"_index":317,"title":{},"body":{"controllers/AppController.html":{}}}],["argumentshost",{"_index":950,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["array",{"_index":83,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/AbsoluteUrlSettings.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["assign",{"_index":1483,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["async",{"_index":269,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"miscellaneous/variables.html":{}}}],["asyncfunction",{"_index":1402,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["asyncfunction('ctx",{"_index":1433,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["asyncfunction('logger",{"_index":1424,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["asyncfunction('state",{"_index":1447,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["asyncheartbeat",{"_index":722,"title":{},"body":{"injectables/AppService.html":{}}}],["attempted",{"_index":1543,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["attempting",{"_index":429,"title":{},"body":{"controllers/AppController.html":{}}}],["auth",{"_index":232,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"guards/AuthGuard.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["authguard",{"_index":354,"title":{"guards/AuthGuard.html":{}},"body":{"controllers/AppController.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["author",{"_index":880,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/git.html":{},"index.html":{},"properties.html":{}}}],["automatic",{"_index":217,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{}}}],["autorestart",{"_index":104,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["available",{"_index":1717,"title":{},"body":{"modules.html":{}}}],["await",{"_index":284,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":809,"title":{},"body":{"injectables/AppService.html":{}}}],["b.date.modified",{"_index":811,"title":{},"body":{"injectables/AppService.html":{}}}],["back",{"_index":124,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["backers",{"_index":1699,"title":{},"body":{"index.html":{}}}],["basename",{"_index":1053,"title":{},"body":{"interfaces/Output.html":{}}}],["before",{"_index":222,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["belongs",{"_index":1508,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["body",{"_index":121,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["body('args",{"_index":1184,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["body('commands",{"_index":1160,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["body('event",{"_index":1180,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["body('machines",{"_index":1167,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["body('method",{"_index":1183,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["body('tasks",{"_index":1158,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["body('trees",{"_index":1159,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["boolean",{"_index":39,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["bootstrap",{"_index":1613,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["break",{"_index":823,"title":{},"body":{"injectables/AppService.html":{}}}],["breaks",{"_index":327,"title":{},"body":{"controllers/AppController.html":{}}}],["browse",{"_index":1715,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1713,"title":{},"body":{"modules.html":{}}}],["build",{"_index":1130,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["building",{"_index":1669,"title":{},"body":{"index.html":{}}}],["bunyan",{"_index":1644,"title":{},"body":{"dependencies.html":{}}}],["bunyan.createlogger",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bus",{"_index":136,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["busresponse",{"_index":61,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["ca",{"_index":1471,"title":{},"body":{"classes/SubDomain.html":{}}}],["callback",{"_index":132,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["callback(err",{"_index":451,"title":{},"body":{"controllers/AppController.html":{}}}],["callback(message",{"_index":413,"title":{},"body":{"controllers/AppController.html":{}}}],["callback(null",{"_index":408,"title":{},"body":{"controllers/AppController.html":{}}}],["called",{"_index":326,"title":{},"body":{"controllers/AppController.html":{}}}],["can't",{"_index":89,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["canactivate",{"_index":843,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":846,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canlink",{"_index":1218,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["canlink(token",{"_index":1229,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["catch",{"_index":409,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/ExceptionFilter.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"miscellaneous/variables.html":{}}}],["catch(exception",{"_index":948,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["catch(rpcexception",{"_index":954,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["catcherror",{"_index":345,"title":{},"body":{"controllers/AppController.html":{}}}],["catchs",{"_index":945,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["central",{"_index":1254,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["cert",{"_index":181,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"classes/SubDomain.html":{}}}],["certs",{"_index":226,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{}}}],["certs.ca",{"_index":501,"title":{},"body":{"controllers/AppController.html":{}}}],["certs.key",{"_index":499,"title":{},"body":{"controllers/AppController.html":{}}}],["change",{"_index":527,"title":{},"body":{"controllers/AppController.html":{}}}],["check",{"_index":523,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/SatelliteService.html":{}}}],["checking",{"_index":820,"title":{},"body":{"injectables/AppService.html":{}}}],["checking.payload.get('sample_id",{"_index":825,"title":{},"body":{"injectables/AppService.html":{}}}],["checks",{"_index":734,"title":{},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{}}}],["checksum",{"_index":1054,"title":{},"body":{"interfaces/Output.html":{}}}],["children",{"_index":40,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["class",{"_index":177,"title":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"classes/CWL.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"classes/Lab.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"classes/SatelliteTask.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{}},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"modules/StateMachineModules.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"coverage.html":{},"classes/git.html":{}}}],["classes",{"_index":179,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"classes/CWL.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"classes/Lab.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"classes/SatelliteTask.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{},"overview.html":{}}}],["clearinterval(newconnection.keepalivepingtimer",{"_index":587,"title":{},"body":{"controllers/AppController.html":{}}}],["clearinterval(satconnection.keepalivepingtimer",{"_index":610,"title":{},"body":{"controllers/AppController.html":{}}}],["clearoldsatellite(satellite_id",{"_index":1488,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["cleartimeout(newconnection.keepalivetimer",{"_index":586,"title":{},"body":{"controllers/AppController.html":{}}}],["cleartimeout(satconnection.keepalivetimer",{"_index":603,"title":{},"body":{"controllers/AppController.html":{}}}],["client",{"_index":517,"title":{},"body":{"controllers/AppController.html":{}}}],["clientduplexstream",{"_index":157,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["close",{"_index":386,"title":{},"body":{"controllers/AppController.html":{}}}],["cluster_appmodule",{"_index":681,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":683,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":682,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":684,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_mongoconnectionmodule",{"_index":1003,"title":{},"body":{"modules/MongoConnectionModule.html":{},"overview.html":{}}}],["cluster_mongoconnectionmodule_exports",{"_index":1005,"title":{},"body":{"modules/MongoConnectionModule.html":{},"overview.html":{}}}],["cluster_mongoconnectionmodule_providers",{"_index":1004,"title":{},"body":{"modules/MongoConnectionModule.html":{},"overview.html":{}}}],["cluster_statemachinemodules",{"_index":1355,"title":{},"body":{"modules/StateMachineModules.html":{},"overview.html":{}}}],["cluster_statemachinemodules_exports",{"_index":1358,"title":{},"body":{"modules/StateMachineModules.html":{},"overview.html":{}}}],["cluster_statemachinemodules_imports",{"_index":1357,"title":{},"body":{"modules/StateMachineModules.html":{}}}],["cluster_statemachinemodules_providers",{"_index":1356,"title":{},"body":{"modules/StateMachineModules.html":{},"overview.html":{}}}],["cnt",{"_index":676,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["collection",{"_index":175,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"classes/CWL.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/Lab.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"classes/SatelliteTask.html":{},"interfaces/SciDapDuplexStream.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{}}}],["come",{"_index":123,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["command",{"_index":105,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"classes/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["commands",{"_index":36,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/Type.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["commands.length",{"_index":1163,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["commandstream",{"_index":143,"title":{},"body":{"interfaces/APISyncService.html":{},"controllers/AppController.html":{}}}],["commandstream(requeststream",{"_index":300,"title":{},"body":{"controllers/AppController.html":{}}}],["commandstream(upstream",{"_index":27,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["common_project_id",{"_index":205,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["communication",{"_index":572,"title":{},"body":{"controllers/AppController.html":{}}}],["cond",{"_index":76,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"classes/StateOptions.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["conencting",{"_index":1244,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["config",{"_index":21,"title":{"classes/Config.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/Type.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["config.context",{"_index":1408,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["config.context[k",{"_index":1410,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["config.id",{"_index":1418,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["configmodule",{"_index":695,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":707,"title":{},"body":{"modules/AppModule.html":{}}}],["configoverwrites",{"_index":237,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["configs",{"_index":533,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["configservice",{"_index":337,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/StateMachinesService.html":{}}}],["configservice.get('mongodb_uri",{"_index":713,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":705,"title":{},"body":{"modules/AppModule.html":{}}}],["connect",{"_index":1234,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["connected",{"_index":161,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"injectables/SatelliteService.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["connection",{"_index":320,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{}}}],["connection.filter",{"_index":360,"title":{},"body":{"controllers/AppController.html":{}}}],["connection.filter.ts",{"_index":944,"title":{},"body":{"classes/ExceptionFilter.html":{},"coverage.html":{}}}],["connection.filter.ts:10",{"_index":951,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["connections",{"_index":388,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}}}],["connections/:id",{"_index":1110,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["console.error(err",{"_index":767,"title":{},"body":{"injectables/AppService.html":{}}}],["console.error(err.message",{"_index":510,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log('file",{"_index":629,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log('success",{"_index":635,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log('write",{"_index":757,"title":{},"body":{"injectables/AppService.html":{}}}],["console.log(configs",{"_index":771,"title":{},"body":{"injectables/AppService.html":{}}}],["console.log(data",{"_index":769,"title":{},"body":{"injectables/AppService.html":{}}}],["const",{"_index":238,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":271,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["constructor(_apisyncmachinemodel",{"_index":272,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{}}}],["constructor(_cwlservice",{"_index":1369,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["constructor(_satellitemachinemodel",{"_index":1210,"title":{},"body":{"injectables/SatelliteMachineService.html":{}}}],["constructor(_satelliteservice",{"_index":844,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(_satellitetaskmodel",{"_index":1337,"title":{},"body":{"injectables/SatelliteTasksService.html":{}}}],["constructor(_statemachineservice",{"_index":725,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(cwlmodel",{"_index":892,"title":{},"body":{"injectables/CWLService.html":{}}}],["constructor(labmodel",{"_index":983,"title":{},"body":{"injectables/LabService.html":{}}}],["constructor(satellitemodel",{"_index":1227,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["constructor(subdomainmodel",{"_index":1476,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["constructor(tasksqueuemodel",{"_index":1498,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["contains",{"_index":850,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/StateMachinesService.html":{}}}],["context",{"_index":259,"title":{},"body":{"classes/ApiSyncMachine.html":{},"guards/AuthGuard.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"classes/Options.html":{},"controllers/SatInterfaceController.html":{},"classes/State.html":{},"injectables/StateMachinesService.html":{},"classes/Type.html":{}}}],["context.getargs()[0].metadata.get('jwt')[0",{"_index":853,"title":{},"body":{"guards/AuthGuard.html":{}}}],["controller",{"_index":288,"title":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{},"coverage.html":{}}}],["controller('api",{"_index":1141,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["controllers",{"_index":290,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"overview.html":{}}}],["correctly",{"_index":946,"title":{},"body":{"classes/ExceptionFilter.html":{},"injectables/StateMachinesService.html":{}}}],["counter",{"_index":558,"title":{},"body":{"controllers/AppController.html":{}}}],["coverage",{"_index":1590,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":398,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{},"injectables/StateMachinesService.html":{}}}],["createapimachine",{"_index":129,"title":{"interfaces/CreateAPIMachine.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"injectables/AppService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["createapimachineforsatellite",{"_index":1099,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["createapimachineforsatellite(@param('id",{"_index":1166,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["createapimachineforsatellite(id",{"_index":1104,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["created",{"_index":928,"title":{},"body":{"classes/Date-2.html":{},"controllers/SatInterfaceController.html":{},"classes/TasksQueue.html":{}}}],["created[k]).length",{"_index":1175,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["created[machine.config.id",{"_index":1169,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["createfsm",{"_index":716,"title":{},"body":{"injectables/AppService.html":{}}}],["createmachine",{"_index":1388,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["createmachine(updatedconfig",{"_index":1442,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["createstatemachine",{"_index":1368,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["createstatemachine(config",{"_index":1374,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["createwritestream",{"_index":341,"title":{},"body":{"controllers/AppController.html":{}}}],["createwritestream(temppath",{"_index":626,"title":{},"body":{"controllers/AppController.html":{}}}],["cron",{"_index":98,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"injectables/AppService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["cron(cronexpression.every_5_seconds",{"_index":731,"title":{},"body":{"injectables/AppService.html":{}}}],["cronexpression",{"_index":749,"title":{},"body":{"injectables/AppService.html":{}}}],["crypto",{"_index":351,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["crypto.randombytes(20).tostring('hex",{"_index":613,"title":{},"body":{"controllers/AppController.html":{}}}],["ctx",{"_index":70,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["curr",{"_index":648,"title":{},"body":{"controllers/AppController.html":{}}}],["current",{"_index":738,"title":{},"body":{"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{}}}],["currently",{"_index":795,"title":{},"body":{"injectables/AppService.html":{},"injectables/StateMachinesService.html":{}}}],["currenttasks.includes(task._id",{"_index":805,"title":{},"body":{"injectables/AppService.html":{}}}],["custom",{"_index":655,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["custom.number",{"_index":674,"title":{},"body":{"controllers/AppController.html":{}}}],["custom[k",{"_index":672,"title":{},"body":{"controllers/AppController.html":{}}}],["customlist",{"_index":297,"title":{},"body":{"controllers/AppController.html":{}}}],["customlist.find((i",{"_index":656,"title":{},"body":{"controllers/AppController.html":{}}}],["custompm2startoptions",{"_index":41,"title":{"interfaces/CustomPm2StartOptions.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["cwl",{"_index":863,"title":{"classes/CWL.html":{}},"body":{"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"coverage.html":{},"classes/git.html":{}}}],["cwl.name",{"_index":1034,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["cwl.service",{"_index":1007,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["cwldocument",{"_index":878,"title":{},"body":{"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/git.html":{},"miscellaneous/typealiases.html":{}}}],["cwlid",{"_index":914,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{}}}],["cwlmodel",{"_index":894,"title":{},"body":{"injectables/CWLService.html":{}}}],["cwlschema",{"_index":887,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"coverage.html":{},"classes/git.html":{},"miscellaneous/variables.html":{}}}],["cwlservice",{"_index":889,"title":{"injectables/CWLService.html":{}},"body":{"injectables/CWLService.html":{},"modules/MongoConnectionModule.html":{},"injectables/StateMachinesService.html":{},"coverage.html":{},"overview.html":{}}}],["cwlts",{"_index":1647,"title":{},"body":{"dependencies.html":{}}}],["d.toobject",{"_index":287,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteTasksService.html":{}}}],["dagid",{"_index":1571,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["data",{"_index":766,"title":{},"body":{"injectables/AppService.html":{}}}],["database",{"_index":897,"title":{},"body":{"injectables/CWLService.html":{},"injectables/LabService.html":{}}}],["date",{"_index":865,"title":{"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{}},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/Sample.html":{},"classes/TasksQueue.html":{},"coverage.html":{},"classes/git.html":{}}}],["date().gettime",{"_index":1305,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["date(expirydate",{"_index":1310,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["db",{"_index":758,"title":{},"body":{"injectables/AppService.html":{},"injectables/SatelliteService.html":{}}}],["dbstream",{"_index":1365,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["decorators",{"_index":186,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CWL.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/Lab.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{}}}],["default",{"_index":532,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/variables.html":{}}}],["defaultconfig",{"_index":534,"title":{},"body":{"controllers/AppController.html":{}}}],["defaultconfig.apimachines",{"_index":539,"title":{},"body":{"controllers/AppController.html":{}}}],["defaultconfig.apimachines.length",{"_index":546,"title":{},"body":{"controllers/AppController.html":{}}}],["defaultconfig.satmachines",{"_index":541,"title":{},"body":{"controllers/AppController.html":{}}}],["defaultconfig.satmachines.length",{"_index":548,"title":{},"body":{"controllers/AppController.html":{}}}],["defaultconfig.sattasks",{"_index":543,"title":{},"body":{"controllers/AppController.html":{}}}],["defined",{"_index":10,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncService.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{}}}],["delay",{"_index":427,"title":{},"body":{"controllers/AppController.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/SendEvent.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{}}}],["delay}ms",{"_index":430,"title":{},"body":{"controllers/AppController.html":{}}}],["delete",{"_index":406,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{},"injectables/TasksQueueService.html":{}}}],["delete('api",{"_index":1117,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["delete(_id",{"_index":1503,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["dependencies",{"_index":680,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/MongoConnectionModule.html":{},"modules/StateMachineModules.html":{},"dependencies.html":{},"overview.html":{}}}],["dependencytree",{"_index":35,"title":{"interfaces/DependencyTree.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["deprecated",{"_index":1290,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["description",{"_index":313,"title":{"classes/Description.html":{}},"body":{"controllers/AppController.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"classes/Metadata.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"injectables/StateMachinesService.html":{},"injectables/TasksQueueService.html":{},"coverage.html":{},"classes/git.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":855,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/SubDomainService.html":{},"index.html":{}}}],["digital",{"_index":1250,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["disable_source_map_support",{"_index":102,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["disconnect",{"_index":1262,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["disconnecting",{"_index":1267,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["dnsrecordid",{"_index":1462,"title":{},"body":{"classes/SubDomain.html":{}}}],["doc",{"_index":1307,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["document",{"_index":197,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"classes/CWL.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/Lab.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"classes/SatelliteTask.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{}}}],["documentation",{"_index":1591,"title":{},"body":{"coverage.html":{}}}],["doing",{"_index":1253,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["domain",{"_index":204,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["don't",{"_index":55,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["download",{"_index":1525,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["download.downloaded",{"_index":1566,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["download.progress",{"_index":1567,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["downloads",{"_index":1563,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["downloads[fileid",{"_index":1565,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["e2e",{"_index":1688,"title":{},"body":{"index.html":{}}}],["each",{"_index":574,"title":{},"body":{"controllers/AppController.html":{}}}],["efficient",{"_index":1670,"title":{},"body":{"index.html":{}}}],["end",{"_index":525,"title":{},"body":{"controllers/AppController.html":{}}}],["entry",{"_index":73,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"classes/StateOptions.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["environment",{"_index":492,"title":{},"body":{"controllers/AppController.html":{}}}],["err",{"_index":410,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/LabService.html":{},"interfaces/ProcessedStateMachine.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"interfaces/SendEvent.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"miscellaneous/variables.html":{}}}],["err.message",{"_index":599,"title":{},"body":{"controllers/AppController.html":{}}}],["error",{"_index":58,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"injectables/LabService.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["error('attempted",{"_index":1547,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["error('satellite",{"_index":1309,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["error(`${method",{"_index":444,"title":{},"body":{"controllers/AppController.html":{}}}],["error(`${satellite_id",{"_index":1542,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["error(`no",{"_index":1582,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["error(`satellite",{"_index":1285,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["error(`task",{"_index":1540,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["error(exception.message",{"_index":958,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["errorresponse",{"_index":60,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"classes/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["establish",{"_index":1232,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["event",{"_index":1123,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["exception",{"_index":952,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["exceptionfilter",{"_index":358,"title":{"classes/ExceptionFilter.html":{}},"body":{"controllers/AppController.html":{},"classes/ExceptionFilter.html":{},"coverage.html":{}}}],["exceptions",{"_index":461,"title":{},"body":{"controllers/AppController.html":{},"classes/ExceptionFilter.html":{}}}],["exec",{"_index":902,"title":{},"body":{"injectables/CWLService.html":{},"injectables/LabService.html":{},"injectables/SatelliteService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["exec()).map((d",{"_index":286,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteTasksService.html":{}}}],["execute_command",{"_index":99,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["executioncontext",{"_index":847,"title":{},"body":{"guards/AuthGuard.html":{}}}],["exists",{"_index":1231,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["exit",{"_index":74,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"classes/StateOptions.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["expect",{"_index":673,"title":{},"body":{"controllers/AppController.html":{}}}],["expiration",{"_index":1269,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["expires",{"_index":595,"title":{},"body":{"controllers/AppController.html":{}}}],["expiry",{"_index":598,"title":{},"body":{"controllers/AppController.html":{}}}],["expiry_time_ms",{"_index":213,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{}}}],["expirydate",{"_index":591,"title":{},"body":{"controllers/AppController.html":{},"injectables/SatelliteService.html":{}}}],["expirydate.toutcstring",{"_index":596,"title":{},"body":{"controllers/AppController.html":{}}}],["export",{"_index":24,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"classes/git.html":{}}}],["exports",{"_index":692,"title":{},"body":{"modules/AppModule.html":{},"modules/MongoConnectionModule.html":{},"modules/StateMachineModules.html":{}}}],["express",{"_index":1642,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":77,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["facing",{"_index":1247,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["failed",{"_index":638,"title":{},"body":{"controllers/AppController.html":{}}}],["fails",{"_index":462,"title":{},"body":{"controllers/AppController.html":{}}}],["false",{"_index":262,"title":{},"body":{"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"controllers/SatInterfaceController.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{}}}],["field",{"_index":91,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{},"classes/git.html":{}}}],["filefromclient",{"_index":128,"title":{"interfaces/FileFromClient.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["fileid",{"_index":1523,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["filename",{"_index":614,"title":{},"body":{"controllers/AppController.html":{}}}],["filestream",{"_index":144,"title":{},"body":{"interfaces/APISyncService.html":{},"controllers/AppController.html":{}}}],["filestream(upstream",{"_index":28,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["fileupload",{"_index":293,"title":{},"body":{"controllers/AppController.html":{}}}],["fileupload(requeststream",{"_index":304,"title":{},"body":{"controllers/AppController.html":{}}}],["filter",{"_index":346,"title":{},"body":{"controllers/AppController.html":{}}}],["filter((k",{"_index":786,"title":{},"body":{"injectables/AppService.html":{}}}],["filter((task",{"_index":803,"title":{},"body":{"injectables/AppService.html":{}}}],["final",{"_index":619,"title":{},"body":{"controllers/AppController.html":{},"injectables/TasksQueueService.html":{}}}],["final.priorityqueue.push(task",{"_index":1538,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["final.queue.push(task",{"_index":1536,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["finally",{"_index":600,"title":{},"body":{"controllers/AppController.html":{}}}],["finalpath",{"_index":618,"title":{},"body":{"controllers/AppController.html":{}}}],["find",{"_index":1481,"title":{},"body":{"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["finds",{"_index":1507,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["findtaskbysampleid",{"_index":1495,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["findtaskbysampleid(sampleid",{"_index":1505,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["finished",{"_index":630,"title":{},"body":{"controllers/AppController.html":{},"injectables/TasksQueueService.html":{}}}],["finite",{"_index":1379,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["fix",{"_index":1064,"title":{},"body":{"interfaces/ProcessedStateMachine.html":{},"interfaces/SendEvent.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{}}}],["fixed",{"_index":218,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["fixedip",{"_index":182,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["forwardref",{"_index":693,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"modules/StateMachineModules.html":{},"injectables/StateMachinesService.html":{},"injectables/TasksQueueService.html":{}}}],["found",{"_index":445,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["framework",{"_index":1668,"title":{},"body":{"index.html":{}}}],["fs",{"_index":344,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/StateMachinesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fs.promises",{"_index":375,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/variables.html":{}}}],["fs.readfile(loc",{"_index":763,"title":{},"body":{"injectables/AppService.html":{}}}],["fsm",{"_index":154,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["fsm.state.context.taskid",{"_index":799,"title":{},"body":{"injectables/AppService.html":{}}}],["fsm.state.value",{"_index":793,"title":{},"body":{"injectables/AppService.html":{}}}],["fsms",{"_index":783,"title":{},"body":{"injectables/AppService.html":{}}}],["fspromises",{"_index":374,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fspromises.access(logdir",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fspromises.mkdir(logdir",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fspromises.readfile(abscert)).tostring",{"_index":503,"title":{},"body":{"controllers/AppController.html":{}}}],["fspromises.readfile(abskey)).tostring",{"_index":502,"title":{},"body":{"controllers/AppController.html":{}}}],["fspromises.readfile(certs.cert)).tostring",{"_index":487,"title":{},"body":{"controllers/AppController.html":{}}}],["fspromises.readfile(certs.key)).tostring",{"_index":486,"title":{},"body":{"controllers/AppController.html":{}}}],["func",{"_index":441,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["func(args",{"_index":446,"title":{},"body":{"controllers/AppController.html":{}}}],["function",{"_index":318,"title":{},"body":{"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/TriggerContext.html":{},"coverage.html":{}}}],["function(){}).constructor",{"_index":1404,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["functions",{"_index":1406,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/StateMachinesService.html":{},"miscellaneous/functions.html":{}}}],["get('satellite",{"_index":1109,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["getbyid",{"_index":891,"title":{},"body":{"injectables/CWLService.html":{},"injectables/LabService.html":{},"injectables/SatelliteService.html":{},"injectables/TasksQueueService.html":{}}}],["getbyid(_id",{"_index":895,"title":{},"body":{"injectables/CWLService.html":{},"injectables/LabService.html":{},"injectables/SatelliteService.html":{}}}],["getbyid(task_id",{"_index":1509,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["getbysatid",{"_index":1474,"title":{},"body":{"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["getbysatid(id",{"_index":1479,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["getbysatid(satellite_id",{"_index":1513,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["getbytoken",{"_index":1219,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["getbytoken(token",{"_index":1237,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["getdevinfo",{"_index":1475,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["getinitialmachines",{"_index":270,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"injectables/SatelliteMachineService.html":{}}}],["getinitialtasks",{"_index":1336,"title":{},"body":{"injectables/SatelliteTasksService.html":{}}}],["gets",{"_index":223,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"injectables/SubDomainService.html":{}}}],["getsatellitebyid",{"_index":1100,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["getsatellitebyid(@param('id",{"_index":1144,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["getsatellitebyid(id",{"_index":1108,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["getsatellites",{"_index":1101,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["getting",{"_index":1665,"title":{"index.html":{}},"body":{}}],["getunusedsatellites",{"_index":1220,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["git",{"_index":866,"title":{"classes/git.html":{}},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"coverage.html":{},"classes/git.html":{}}}],["given",{"_index":329,"title":{},"body":{"controllers/AppController.html":{},"injectables/TasksQueueService.html":{}}}],["goes",{"_index":384,"title":{},"body":{"controllers/AppController.html":{}}}],["graph",{"_index":1716,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":1694,"title":{},"body":{"index.html":{}}}],["grpc",{"_index":15,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"dependencies.html":{}}}],["grpc/proto",{"_index":1633,"title":{},"body":{"dependencies.html":{}}}],["grpcstreamcall",{"_index":335,"title":{},"body":{"controllers/AppController.html":{}}}],["grpcstreamcall('apisyncservice",{"_index":463,"title":{},"body":{"controllers/AppController.html":{}}}],["guard",{"_index":841,"title":{"guards/AuthGuard.html":{}},"body":{"injectables/SatelliteService.html":{},"injectables/StateMachinesService.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":65,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"guards/AuthGuard.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["guards[k]).call(this",{"_index":1440,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["half",{"_index":813,"title":{},"body":{"injectables/AppService.html":{}}}],["handle",{"_index":571,"title":{},"body":{"controllers/AppController.html":{}}}],["handles",{"_index":576,"title":{},"body":{"controllers/AppController.html":{}}}],["heartbeat",{"_index":733,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":858,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["host",{"_index":949,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["host.getargs()[0",{"_index":956,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["httpexception",{"_index":1135,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["httpexception('no",{"_index":1146,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["httpmodule",{"_index":694,"title":{},"body":{"modules/AppModule.html":{},"modules/StateMachineModules.html":{}}}],["https",{"_index":1319,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["https://nestjs.com",{"_index":1709,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":339,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["httpstatus",{"_index":1136,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["httpstatus.bad_request",{"_index":1148,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["httpstatus.internal_server_error",{"_index":1150,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["i.id",{"_index":657,"title":{},"body":{"controllers/AppController.html":{}}}],["id",{"_index":257,"title":{},"body":{"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"injectables/LabService.html":{},"classes/MachineCommand.html":{},"classes/Options.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"classes/State.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"classes/Type.html":{}}}],["identifier",{"_index":1592,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":852,"title":{},"body":{"guards/AuthGuard.html":{},"classes/ExceptionFilter.html":{}}}],["import",{"_index":12,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"classes/git.html":{}}}],["imports",{"_index":691,"title":{},"body":{"modules/AppModule.html":{},"modules/MongoConnectionModule.html":{},"modules/SatInterfaceModule.html":{},"modules/StateMachineModules.html":{}}}],["inactivetimerms",{"_index":183,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{}}}],["include",{"_index":1511,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["including",{"_index":111,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["increment",{"_index":835,"title":{},"body":{"injectables/AppService.html":{}}}],["index",{"_index":139,"title":{"index.html":{}},"body":{"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/functions.html":{},"classes/git.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":7,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{}}}],["infinity",{"_index":1304,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"classes/git.html":{},"miscellaneous/variables.html":{}}}],["information",{"_index":319,"title":{},"body":{"controllers/AppController.html":{},"injectables/SubDomainService.html":{}}}],["initial",{"_index":258,"title":{},"body":{"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"classes/Options.html":{},"classes/State.html":{},"classes/Type.html":{}}}],["inject",{"_index":714,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{},"injectables/StateMachinesService.html":{},"injectables/TasksQueueService.html":{}}}],["inject(forwardref",{"_index":755,"title":{},"body":{"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{},"injectables/StateMachinesService.html":{},"injectables/TasksQueueService.html":{}}}],["injectable",{"_index":265,"title":{"injectables/ApiSyncMachinesService.html":{},"injectables/AppService.html":{},"injectables/CWLService.html":{},"injectables/LabService.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}},"body":{"injectables/ApiSyncMachinesService.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"injectables/LabService.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"coverage.html":{}}}],["injectables",{"_index":267,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"injectables/AppService.html":{},"injectables/CWLService.html":{},"injectables/LabService.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"overview.html":{}}}],["injectmodel",{"_index":279,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"injectables/CWLService.html":{},"injectables/LabService.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["injectmodel(apisyncmachine.name",{"_index":281,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{}}}],["injectmodel(cwl.name",{"_index":900,"title":{},"body":{"injectables/CWLService.html":{}}}],["injectmodel(lab.name",{"_index":993,"title":{},"body":{"injectables/LabService.html":{}}}],["injectmodel(satellite.name",{"_index":1272,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["injectmodel(satellitemachine.name",{"_index":1214,"title":{},"body":{"injectables/SatelliteMachineService.html":{}}}],["injectmodel(satellitetask.name",{"_index":1341,"title":{},"body":{"injectables/SatelliteTasksService.html":{}}}],["injectmodel(servicetag.name",{"_index":1530,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["injectmodel(subdomain.name",{"_index":1485,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["injectmodel(tasksqueue.name",{"_index":1529,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["inputs",{"_index":917,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{}}}],["installation",{"_index":1678,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1680,"title":{},"body":{"index.html":{}}}],["instead",{"_index":85,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["interface",{"_index":0,"title":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/OptionTypes.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"interfaces/RemoteModule.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/OptionTypes.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/OptionTypes.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"interfaces/RemoteModule.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"overview.html":{}}}],["interpret",{"_index":1389,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["interpret(machine",{"_index":1443,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["interpreted",{"_index":401,"title":{},"body":{"controllers/AppController.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/SendEvent.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{}}}],["interpreted.ontransition((state",{"_index":1450,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["interpreted.start",{"_index":1449,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["interpreter",{"_index":156,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{}}}],["interpreter_args",{"_index":86,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["interval",{"_index":515,"title":{},"body":{"controllers/AppController.html":{}}}],["inuse",{"_index":244,"title":{},"body":{"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{}}}],["ip",{"_index":476,"title":{},"body":{"controllers/AppController.html":{},"injectables/SatelliteService.html":{}}}],["ips",{"_index":479,"title":{},"body":{"controllers/AppController.html":{},"injectables/SatelliteService.html":{}}}],["isglobal",{"_index":708,"title":{},"body":{"modules/AppModule.html":{}}}],["isn't",{"_index":325,"title":{},"body":{"controllers/AppController.html":{}}}],["itself",{"_index":1417,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["join",{"_index":1701,"title":{},"body":{"index.html":{}}}],["json",{"_index":885,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/git.html":{}}}],["json.parse(data",{"_index":770,"title":{},"body":{"injectables/AppService.html":{}}}],["json.parse(localips",{"_index":480,"title":{},"body":{"controllers/AppController.html":{}}}],["jwt",{"_index":464,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthGuard.html":{},"injectables/SatelliteService.html":{},"injectables/SubDomainService.html":{}}}],["k",{"_index":1427,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["k.includes('task_queue",{"_index":787,"title":{},"body":{"injectables/AppService.html":{}}}],["k.split",{"_index":666,"title":{},"body":{"controllers/AppController.html":{}}}],["kamil",{"_index":1706,"title":{},"body":{"index.html":{}}}],["keep",{"_index":607,"title":{},"body":{"controllers/AppController.html":{}}}],["keepalive",{"_index":38,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["keepalivepingtimer",{"_index":170,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["keepalivetimer",{"_index":168,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["keepscript",{"_index":80,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["key",{"_index":8,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["keys",{"_index":660,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["keys.foreach((k",{"_index":663,"title":{},"body":{"controllers/AppController.html":{}}}],["lab",{"_index":961,"title":{"classes/Lab.html":{}},"body":{"classes/Lab.html":{},"injectables/LabService.html":{},"modules/MongoConnectionModule.html":{},"coverage.html":{}}}],["lab.name",{"_index":1040,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["lab.nmodified",{"_index":996,"title":{},"body":{"injectables/LabService.html":{}}}],["labdocument",{"_index":976,"title":{},"body":{"classes/Lab.html":{},"injectables/LabService.html":{},"miscellaneous/typealiases.html":{}}}],["label",{"_index":133,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"classes/CWL.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"classes/Type.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"classes/git.html":{}}}],["labid",{"_index":229,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["labmodel",{"_index":985,"title":{},"body":{"injectables/LabService.html":{}}}],["labs",{"_index":977,"title":{},"body":{"classes/Lab.html":{}}}],["labs.service",{"_index":1029,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["labschema",{"_index":978,"title":{},"body":{"classes/Lab.html":{},"modules/MongoConnectionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["labservice",{"_index":980,"title":{"injectables/LabService.html":{}},"body":{"injectables/LabService.html":{},"modules/MongoConnectionModule.html":{},"injectables/StateMachinesService.html":{},"coverage.html":{},"overview.html":{}}}],["last",{"_index":667,"title":{},"body":{"controllers/AppController.html":{}}}],["level",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/logger",{"_index":369,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"injectables/StateMachinesService.html":{},"injectables/TasksQueueService.html":{}}}],["license",{"_index":1712,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1692,"title":{},"body":{"index.html":{}}}],["link",{"_index":1233,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["list",{"_index":665,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}}}],["list.foreach((i",{"_index":669,"title":{},"body":{"controllers/AppController.html":{}}}],["list.pop",{"_index":668,"title":{},"body":{"controllers/AppController.html":{}}}],["listing",{"_index":1055,"title":{},"body":{"interfaces/Output.html":{}}}],["literal",{"_index":251,"title":{},"body":{"classes/ApiSyncMachine.html":{},"injectables/AppService.html":{},"classes/CWL.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/LocalFiles.html":{},"classes/Options.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["load",{"_index":709,"title":{},"body":{"modules/AppModule.html":{}}}],["loader",{"_index":1634,"title":{},"body":{"dependencies.html":{}}}],["loc",{"_index":760,"title":{},"body":{"injectables/AppService.html":{}}}],["local",{"_index":484,"title":{},"body":{"controllers/AppController.html":{},"injectables/SatelliteService.html":{}}}],["local'].includes(process.env.api_env",{"_index":495,"title":{},"body":{"controllers/AppController.html":{}}}],["local_ip",{"_index":508,"title":{},"body":{"controllers/AppController.html":{}}}],["local_path",{"_index":884,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/git.html":{}}}],["localfiles",{"_index":173,"title":{"interfaces/LocalFiles.html":{}},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"injectables/SatelliteService.html":{},"interfaces/SciDapDuplexStream.html":{},"coverage.html":{}}}],["localfiles.collection[0].path",{"_index":1299,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["localfiles.show",{"_index":1302,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["localip",{"_index":209,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["localips",{"_index":466,"title":{},"body":{"controllers/AppController.html":{}}}],["locate",{"_index":645,"title":{},"body":{"controllers/AppController.html":{}}}],["location",{"_index":1056,"title":{},"body":{"interfaces/Output.html":{}}}],["log",{"_index":368,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"injectables/TasksQueueService.html":{}}}],["log.debug('getting",{"_index":531,"title":{},"body":{"controllers/AppController.html":{}}}],["log.debug(`${satid",{"_index":594,"title":{},"body":{"controllers/AppController.html":{}}}],["log.debug(`${waitingmachines.length",{"_index":794,"title":{},"body":{"injectables/AppService.html":{}}}],["log.debug(`amount",{"_index":545,"title":{},"body":{"controllers/AppController.html":{}}}],["log.debug(`checking",{"_index":778,"title":{},"body":{"injectables/AppService.html":{}}}],["log.debug(`ping",{"_index":520,"title":{},"body":{"controllers/AppController.html":{}}}],["log.debug(`successfully",{"_index":562,"title":{},"body":{"controllers/AppController.html":{}}}],["log.debug(msg.output",{"_index":641,"title":{},"body":{"controllers/AppController.html":{}}}],["log.error(`${msg.satellite",{"_index":637,"title":{},"body":{"controllers/AppController.html":{}}}],["log.error(`error",{"_index":839,"title":{},"body":{"injectables/AppService.html":{}}}],["log.error(`failed",{"_index":423,"title":{},"body":{"controllers/AppController.html":{},"injectables/SatelliteService.html":{}}}],["log.error(`message",{"_index":584,"title":{},"body":{"controllers/AppController.html":{}}}],["log.error(`no",{"_index":643,"title":{},"body":{"controllers/AppController.html":{}}}],["log.error(message",{"_index":412,"title":{},"body":{"controllers/AppController.html":{}}}],["log.info('getting",{"_index":1142,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["log.info(`${satelliteid",{"_index":428,"title":{},"body":{"controllers/AppController.html":{}}}],["log.info(`attempting",{"_index":1170,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["log.info(`closing",{"_index":588,"title":{},"body":{"controllers/AppController.html":{}}}],["log.info(`connection",{"_index":471,"title":{},"body":{"controllers/AppController.html":{}}}],["log.info(`did",{"_index":605,"title":{},"body":{"controllers/AppController.html":{}}}],["log.info(`external",{"_index":475,"title":{},"body":{"controllers/AppController.html":{}}}],["log.info(`getting",{"_index":1145,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["log.info(`local",{"_index":478,"title":{},"body":{"controllers/AppController.html":{}}}],["log.info(`sending",{"_index":417,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{}}}],["log.info(`successfully",{"_index":1173,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["log.info(`task",{"_index":1165,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["log.info(err",{"_index":861,"title":{},"body":{"guards/AuthGuard.html":{}}}],["logdir",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger",{"_index":155,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{}}}],["logger.debug(`no",{"_index":1457,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["logger.error(`error",{"_index":1456,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["logger.error(`failed",{"_index":1426,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["logger.error(`invalid",{"_index":1453,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["logger.info(`current",{"_index":1451,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["logs",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lte",{"_index":1313,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["m.satelliteid",{"_index":420,"title":{},"body":{"controllers/AppController.html":{}}}],["m.tasks?.length",{"_index":419,"title":{},"body":{"controllers/AppController.html":{}}}],["m.trees?.length",{"_index":418,"title":{},"body":{"controllers/AppController.html":{}}}],["machien",{"_index":1398,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["machine",{"_index":46,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/variables.html":{}}}],["machine._id",{"_index":658,"title":{},"body":{"controllers/AppController.html":{}}}],["machine.config.id",{"_index":675,"title":{},"body":{"controllers/AppController.html":{}}}],["machine.config?.id",{"_index":564,"title":{},"body":{"controllers/AppController.html":{}}}],["machine.fsm.state.context",{"_index":1154,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["machine.fsm.state.value",{"_index":1155,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["machine.state.context.id",{"_index":837,"title":{},"body":{"injectables/AppService.html":{}}}],["machine.state.context.startprocess(task._id",{"_index":838,"title":{},"body":{"injectables/AppService.html":{}}}],["machine/:id",{"_index":1106,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["machine/:satid/:machineid",{"_index":1118,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["machine/:satid/:machineid/event",{"_index":1124,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["machine/:satid/:machineid/method",{"_index":1132,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["machinecommand",{"_index":130,"title":{"classes/MachineCommand.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"classes/Type.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["machineid",{"_index":1116,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["machines",{"_index":299,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{},"injectables/StateMachinesService.html":{}}}],["machines.foreach((machine",{"_index":654,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}}}],["machines.length",{"_index":1168,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["machines.push(configs[key",{"_index":773,"title":{},"body":{"injectables/AppService.html":{}}}],["machines.push(uo",{"_index":1156,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["main_satellite",{"_index":578,"title":{},"body":{"controllers/AppController.html":{}}}],["make",{"_index":826,"title":{},"body":{"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{}}}],["map",{"_index":934,"title":{},"body":{"classes/Date-2.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{}}}],["map((fsm",{"_index":798,"title":{},"body":{"injectables/AppService.html":{}}}],["map((k",{"_index":788,"title":{},"body":{"injectables/AppService.html":{}}}],["marked",{"_index":1405,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["matching",{"_index":138,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"classes/git.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(satconnection.maxtasks",{"_index":814,"title":{},"body":{"injectables/AppService.html":{}}}],["max_memory_restart",{"_index":88,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["maxsimultaneoustasks",{"_index":215,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["maxtasks",{"_index":166,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["maybe",{"_index":54,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["members",{"_index":963,"title":{},"body":{"classes/Lab.html":{}}}],["merge",{"_index":349,"title":{},"body":{"controllers/AppController.html":{}}}],["merge(this._appservice.sendtosat",{"_index":414,"title":{},"body":{"controllers/AppController.html":{}}}],["merge(this._statemachineservice.sendevent",{"_index":424,"title":{},"body":{"controllers/AppController.html":{}}}],["message",{"_index":113,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"classes/CWL.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"interfaces/FileFromClient.html":{},"classes/Metadata.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"classes/git.html":{}}}],["message.action",{"_index":581,"title":{},"body":{"controllers/AppController.html":{}}}],["message.body",{"_index":582,"title":{},"body":{"controllers/AppController.html":{}}}],["message/:id",{"_index":1128,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["messages",{"_index":119,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["messagetosatellite",{"_index":172,"title":{"interfaces/MessageToSatellite.html":{}},"body":{"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{},"coverage.html":{}}}],["metadata",{"_index":14,"title":{"classes/Metadata.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"classes/Sample.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{},"dependencies.html":{},"classes/git.html":{}}}],["method",{"_index":50,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["methods",{"_index":142,"title":{},"body":{"interfaces/APISyncService.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"classes/ExceptionFilter.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["minimize",{"_index":261,"title":{},"body":{"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/SatelliteMachine.html":{},"classes/SatelliteTask.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{}}}],["minute",{"_index":383,"title":{},"body":{"controllers/AppController.html":{}}}],["miscellaneous",{"_index":1658,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1691,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1682,"title":{},"body":{"index.html":{}}}],["model",{"_index":273,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"injectables/CWLService.html":{},"injectables/LabService.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["modified",{"_index":879,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/Lab.html":{},"classes/Metadata.html":{},"classes/Sample.html":{},"classes/TasksQueue.html":{},"classes/git.html":{}}}],["module",{"_index":677,"title":{"modules/AppModule.html":{},"modules/MongoConnectionModule.html":{},"modules/SatInterfaceModule.html":{},"modules/StateMachineModules.html":{}},"body":{"modules/AppModule.html":{},"modules/MongoConnectionModule.html":{},"modules/SatInterfaceModule.html":{},"modules/StateMachineModules.html":{}}}],["moduleid",{"_index":201,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{}}}],["modules",{"_index":679,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/MongoConnectionModule.html":{},"modules/SatInterfaceModule.html":{},"modules/StateMachineModules.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":898,"title":{},"body":{"injectables/CWLService.html":{},"injectables/LabService.html":{},"injectables/TasksQueueService.html":{}}}],["mongoconnection/apisyncmachines.service",{"_index":367,"title":{},"body":{"controllers/AppController.html":{}}}],["mongoconnection/cwl.service",{"_index":1387,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["mongoconnection/labs.service",{"_index":1391,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["mongoconnection/mongoconnection.module",{"_index":704,"title":{},"body":{"modules/AppModule.html":{},"modules/StateMachineModules.html":{}}}],["mongoconnection/samples.service",{"_index":752,"title":{},"body":{"injectables/AppService.html":{},"injectables/StateMachinesService.html":{}}}],["mongoconnection/satellite.service",{"_index":364,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/StateMachinesService.html":{}}}],["mongoconnection/satellitemachines.service",{"_index":371,"title":{},"body":{"controllers/AppController.html":{}}}],["mongoconnection/satellitetasks.service",{"_index":373,"title":{},"body":{"controllers/AppController.html":{}}}],["mongoconnection/schemas/apisyncmachines.schema",{"_index":23,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["mongoconnection/schemas/satellite.schema",{"_index":158,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["mongoconnection/schemas/task.schema",{"_index":754,"title":{},"body":{"injectables/AppService.html":{}}}],["mongoconnection/subdomain.service",{"_index":366,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["mongoconnection/tasksqueue.service",{"_index":751,"title":{},"body":{"injectables/AppService.html":{},"injectables/StateMachinesService.html":{}}}],["mongoconnectionmodule",{"_index":685,"title":{"modules/MongoConnectionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MongoConnectionModule.html":{},"modules/StateMachineModules.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":198,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"dependencies.html":{},"classes/git.html":{}}}],["mongoosemodule",{"_index":696,"title":{},"body":{"modules/AppModule.html":{},"modules/MongoConnectionModule.html":{}}}],["mongoosemodule.forfeature",{"_index":1030,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":710,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":856,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["ms",{"_index":221,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{}}}],["msg",{"_index":448,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{}}}],["msg.file_name",{"_index":628,"title":{},"body":{"controllers/AppController.html":{}}}],["msg.keepalive",{"_index":583,"title":{},"body":{"controllers/AppController.html":{}}}],["msg.messages.foreach((message",{"_index":579,"title":{},"body":{"controllers/AppController.html":{}}}],["msg.method",{"_index":639,"title":{},"body":{"controllers/AppController.html":{}}}],["msg.sender",{"_index":577,"title":{},"body":{"controllers/AppController.html":{}}}],["msg.targetmachine",{"_index":640,"title":{},"body":{"controllers/AppController.html":{}}}],["msg.taskid",{"_index":568,"title":{},"body":{"controllers/AppController.html":{}}}],["myśliwiec",{"_index":1707,"title":{},"body":{"index.html":{}}}],["n",{"_index":1517,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["name",{"_index":68,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"modules/MongoConnectionModule.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteConnection.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/variables.html":{}}}],["named",{"_index":644,"title":{},"body":{"controllers/AppController.html":{}}}],["nameext",{"_index":1057,"title":{},"body":{"interfaces/Output.html":{}}}],["nameroot",{"_index":1058,"title":{},"body":{"interfaces/Output.html":{}}}],["namespace",{"_index":103,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["nd",{"_index":1576,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["need",{"_index":94,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["needs",{"_index":575,"title":{},"body":{"controllers/AppController.html":{}}}],["nest",{"_index":1674,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1711,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":340,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/StateMachineModules.html":{},"injectables/StateMachinesService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":278,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"classes/ExceptionFilter.html":{},"injectables/LabService.html":{},"modules/MongoConnectionModule.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"modules/StateMachineModules.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":338,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/StateMachinesService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1639,"title":{},"body":{"dependencies.html":{}}}],["nestjs/microservices",{"_index":336,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthGuard.html":{},"classes/ExceptionFilter.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":196,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"modules/AppModule.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"dependencies.html":{},"classes/git.html":{}}}],["nestjs/platform",{"_index":1641,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":698,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"dependencies.html":{}}}],["new",{"_index":433,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/ExceptionFilter.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"injectables/StateMachinesService.html":{},"injectables/TasksQueueService.html":{},"coverage.html":{}}}],["newabsoluteurl",{"_index":212,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["newconnection",{"_index":512,"title":{},"body":{"controllers/AppController.html":{}}}],["newconnection.keepalivepingtimer",{"_index":518,"title":{},"body":{"controllers/AppController.html":{}}}],["newconnection.satinformation._id",{"_index":522,"title":{},"body":{"controllers/AppController.html":{}}}],["newconnection.satinformation.absoluteurlsettings.inactivetimerms",{"_index":590,"title":{},"body":{"controllers/AppController.html":{}}}],["newupdatedinfo",{"_index":1553,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["newupdatedinfo.payload",{"_index":1558,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["newupdatedinfo.payload[key",{"_index":1560,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["newurl",{"_index":1258,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["newurl.includes('https",{"_index":1318,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["node.js",{"_index":1667,"title":{},"body":{"index.html":{}}}],["nodejs.timeout",{"_index":169,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["nothing",{"_index":1392,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["now",{"_index":1266,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["npm",{"_index":1679,"title":{},"body":{"index.html":{}}}],["nth",{"_index":1496,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["nth(n",{"_index":1515,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["number",{"_index":87,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"classes/CWL.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"interfaces/OptionTypes.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"classes/git.html":{},"miscellaneous/variables.html":{}}}],["number'].includes(k",{"_index":662,"title":{},"body":{"controllers/AppController.html":{}}}],["object",{"_index":206,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"classes/CWL.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Description.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"classes/SatelliteTask.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"injectables/TasksQueueService.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{}}}],["object.getprototypeof(async",{"_index":1403,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["object.keys(actions).foreach",{"_index":1431,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["object.keys(config.context).foreach((k",{"_index":1409,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["object.keys(configs).foreach((key",{"_index":772,"title":{},"body":{"injectables/AppService.html":{}}}],["object.keys(created).filter((k",{"_index":1174,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["object.keys(created).length",{"_index":1171,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["object.keys(custom).filter((k",{"_index":661,"title":{},"body":{"controllers/AppController.html":{}}}],["object.keys(guards).foreach",{"_index":1438,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["object.keys(newupdatedinfo.payload).foreach((key",{"_index":1559,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["object.keys(satconnection.statemachines",{"_index":785,"title":{},"body":{"injectables/AppService.html":{}}}],["object.keys(statemachines).foreach((key",{"_index":1151,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["object.keys(this._appservice.satconnections[satelliteid].statemachines).includes(to",{"_index":431,"title":{},"body":{"controllers/AppController.html":{}}}],["object.keys(this.satconnections",{"_index":776,"title":{},"body":{"injectables/AppService.html":{}}}],["object.keys(transitions).foreach",{"_index":1445,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["observable",{"_index":16,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["ocean",{"_index":505,"title":{},"body":{"controllers/AppController.html":{},"injectables/SatelliteService.html":{}}}],["old",{"_index":1252,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["one",{"_index":833,"title":{},"body":{"injectables/AppService.html":{},"injectables/LabService.html":{}}}],["onlymachine",{"_index":44,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["onoptions",{"_index":64,"title":{"classes/OnOptions.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["open",{"_index":473,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["optional",{"_index":141,"title":{},"body":{"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"classes/ExceptionFilter.html":{},"injectables/LabService.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["options",{"_index":22,"title":{"classes/Options.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"classes/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["optiontypes",{"_index":63,"title":{"interfaces/OptionTypes.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["order",{"_index":1344,"title":{},"body":{"classes/ServiceTag.html":{}}}],["origin",{"_index":184,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{}}}],["originated",{"_index":114,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["out",{"_index":688,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/MongoConnectionModule.html":{},"modules/StateMachineModules.html":{},"overview.html":{}}}],["output",{"_index":127,"title":{"interfaces/Output.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/Output.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["outputs",{"_index":918,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{}}}],["outresponse",{"_index":52,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"classes/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["overview",{"_index":1718,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":75,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["owner",{"_index":219,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/Lab.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["ownerprovidedurl",{"_index":214,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["package",{"_index":1632,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packed",{"_index":886,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/git.html":{}}}],["pair",{"_index":1397,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["param",{"_index":602,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["param('machineid",{"_index":1177,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["parameters",{"_index":147,"title":{},"body":{"interfaces/APISyncService.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"classes/ExceptionFilter.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["parse",{"_index":96,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["parsed",{"_index":469,"title":{},"body":{"controllers/AppController.html":{}}}],["part",{"_index":112,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["path",{"_index":176,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"injectables/SatelliteService.html":{},"interfaces/SciDapDuplexStream.html":{},"injectables/StateMachinesService.html":{},"coverage.html":{},"classes/git.html":{},"miscellaneous/variables.html":{}}}],["path.join(__dirname",{"_index":616,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["path.join(this._configservice.get('cert_root",{"_index":498,"title":{},"body":{"controllers/AppController.html":{}}}],["payload",{"_index":933,"title":{},"body":{"classes/Date-2.html":{},"classes/TasksQueue.html":{}}}],["payload.downloads.${fileid",{"_index":1569,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["payload.sample_id",{"_index":1581,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["pending",{"_index":964,"title":{},"body":{"classes/Lab.html":{}}}],["perform",{"_index":1377,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["ping",{"_index":379,"title":{},"body":{"controllers/AppController.html":{}}}],["pingkilltimer",{"_index":380,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pings",{"_index":516,"title":{},"body":{"controllers/AppController.html":{}}}],["pingtimer",{"_index":376,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":426,"title":{},"body":{"controllers/AppController.html":{}}}],["please",{"_index":1702,"title":{},"body":{"index.html":{}}}],["pm2/types",{"_index":20,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["pm2startoptions",{"_index":19,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["port",{"_index":210,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["post",{"_index":1137,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["post('api",{"_index":1105,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["post('sat",{"_index":1127,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["potentially",{"_index":573,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthGuard.html":{},"controllers/SatInterfaceController.html":{}}}],["prefix",{"_index":1098,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["preview",{"_index":919,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{},"injectables/TasksQueueService.html":{}}}],["priority",{"_index":780,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceTag.html":{},"injectables/TasksQueueService.html":{}}}],["prioritycnt",{"_index":801,"title":{},"body":{"injectables/AppService.html":{}}}],["priorityqueue",{"_index":781,"title":{},"body":{"injectables/AppService.html":{},"injectables/TasksQueueService.html":{}}}],["prioritytag",{"_index":1531,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["prioritytasks",{"_index":165,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["private",{"_index":282,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["probably",{"_index":1113,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["process",{"_index":116,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["process.env.api_env",{"_index":483,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["process.env.log_level",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.logs",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":854,"title":{},"body":{"guards/AuthGuard.html":{}}}],["process.env.test_file",{"_index":761,"title":{},"body":{"injectables/AppService.html":{}}}],["process.stdout",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processedstatemachine",{"_index":1061,"title":{"interfaces/ProcessedStateMachine.html":{}},"body":{"interfaces/ProcessedStateMachine.html":{},"interfaces/SendEvent.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"coverage.html":{}}}],["processedtree",{"_index":67,"title":{"interfaces/ProcessedTree.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["processes",{"_index":309,"title":{},"body":{"controllers/AppController.html":{}}}],["processmessagesfrommainservice",{"_index":294,"title":{},"body":{"controllers/AppController.html":{}}}],["processmessagesfrommainservice(target",{"_index":306,"title":{},"body":{"controllers/AppController.html":{}}}],["production",{"_index":1684,"title":{},"body":{"index.html":{}}}],["progress",{"_index":1521,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["progressive",{"_index":1666,"title":{},"body":{"index.html":{}}}],["project",{"_index":1693,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":920,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{}}}],["projects",{"_index":921,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{}}}],["promise",{"_index":277,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["promise((r",{"_index":434,"title":{},"body":{"controllers/AppController.html":{}}}],["promise((resolve",{"_index":440,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{}}}],["promises",{"_index":343,"title":{},"body":{"controllers/AppController.html":{}}}],["promises.mkdir(finalpath",{"_index":622,"title":{},"body":{"controllers/AppController.html":{}}}],["promises.mkdir(temppath",{"_index":620,"title":{},"body":{"controllers/AppController.html":{}}}],["promises.open(temppath",{"_index":623,"title":{},"body":{"controllers/AppController.html":{}}}],["prop",{"_index":187,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"classes/CWL.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/Lab.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"classes/SatelliteTask.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{}}}],["prop({type",{"_index":252,"title":{},"body":{"classes/ApiSyncMachine.html":{},"classes/CWL.html":{},"classes/Config.html":{},"classes/Lab.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"classes/SatelliteTask.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{}}}],["properties",{"_index":140,"title":{"properties.html":{}},"body":{"interfaces/APISyncMessage.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/AppService.html":{},"classes/CWL.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"classes/Lab.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"classes/git.html":{},"properties.html":{}}}],["provide",{"_index":225,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["provided",{"_index":1147,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["providedcerts",{"_index":185,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["providers",{"_index":690,"title":{},"body":{"modules/AppModule.html":{},"modules/MongoConnectionModule.html":{},"modules/StateMachineModules.html":{}}}],["public",{"_index":230,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"injectables/AppService.html":{},"injectables/LabService.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{},"injectables/StateMachinesService.html":{}}}],["public.connected",{"_index":1316,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["public.expiry_time_ms",{"_index":1308,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["public.localip",{"_index":1314,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["public.newabsoluteurl",{"_index":1320,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["public.publicip",{"_index":1317,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["public.remotemodules",{"_index":1303,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["public.showlocalfiles",{"_index":1301,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["public.version",{"_index":1289,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["publicdata",{"_index":203,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["publicinformation",{"_index":202,"title":{"classes/PublicInformation.html":{}},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"coverage.html":{}}}],["publicip",{"_index":216,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{}}}],["queue",{"_index":735,"title":{},"body":{"injectables/AppService.html":{},"injectables/TasksQueueService.html":{}}}],["r(true",{"_index":436,"title":{},"body":{"controllers/AppController.html":{}}}],["rd'][(n",{"_index":1577,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["read",{"_index":1703,"title":{},"body":{"index.html":{}}}],["ready",{"_index":829,"title":{},"body":{"injectables/AppService.html":{}}}],["real",{"_index":1393,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["receievedresponse",{"_index":171,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["recieve",{"_index":606,"title":{},"body":{"controllers/AppController.html":{}}}],["record",{"_index":1251,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["recursive",{"_index":621,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}],["regular",{"_index":779,"title":{},"body":{"injectables/AppService.html":{}}}],["reject",{"_index":762,"title":{},"body":{"injectables/AppService.html":{}}}],["reject(err",{"_index":768,"title":{},"body":{"injectables/AppService.html":{}}}],["relevant",{"_index":312,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["remote",{"_index":882,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"injectables/SatelliteService.html":{},"classes/git.html":{}}}],["remotemodule",{"_index":200,"title":{"interfaces/RemoteModule.html":{}},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"coverage.html":{}}}],["remotemodules",{"_index":207,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["remotes",{"_index":1292,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["remotes.map((remote",{"_index":1295,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["remove",{"_index":1120,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["removeapimachineforsatellite",{"_index":1102,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["removeapimachineforsatellite(@param('satid",{"_index":1176,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["removeapimachineforsatellite(satid",{"_index":1115,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["removed",{"_index":1121,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["removefsm",{"_index":717,"title":{},"body":{"injectables/AppService.html":{}}}],["removing",{"_index":411,"title":{},"body":{"controllers/AppController.html":{}}}],["rename",{"_index":342,"title":{},"body":{"controllers/AppController.html":{}}}],["rename(temppath",{"_index":634,"title":{},"body":{"controllers/AppController.html":{}}}],["repository",{"_index":1677,"title":{},"body":{"index.html":{}}}],["represents",{"_index":1527,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["requeststream",{"_index":303,"title":{},"body":{"controllers/AppController.html":{}}}],["requeststream.end",{"_index":482,"title":{},"body":{"controllers/AppController.html":{}}}],["requeststream.getpeer",{"_index":474,"title":{},"body":{"controllers/AppController.html":{}}}],["requeststream.metadata.get('ips')[0",{"_index":467,"title":{},"body":{"controllers/AppController.html":{}}}],["requeststream.metadata.get('jwt')[0",{"_index":465,"title":{},"body":{"controllers/AppController.html":{}}}],["requeststream.on('data",{"_index":567,"title":{},"body":{"controllers/AppController.html":{}}}],["requeststream.on('end",{"_index":585,"title":{},"body":{"controllers/AppController.html":{}}}],["requeststream.write",{"_index":513,"title":{},"body":{"controllers/AppController.html":{}}}],["require",{"_index":1416,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["require(\"crypto",{"_index":352,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["require('fs",{"_index":353,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/variables.html":{}}}],["require('path",{"_index":350,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":804,"title":{},"body":{"injectables/AppService.html":{}}}],["reset",{"_index":687,"title":{},"body":{"modules/AppModule.html":{},"modules/MongoConnectionModule.html":{},"modules/StateMachineModules.html":{},"overview.html":{}}}],["resolve(__dirname",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolve(i",{"_index":1186,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["resolve(machines",{"_index":774,"title":{},"body":{"injectables/AppService.html":{}}}],["resolve(msg",{"_index":450,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}}}],["resolve(null",{"_index":447,"title":{},"body":{"controllers/AppController.html":{}}}],["resolve(true",{"_index":561,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}}}],["response",{"_index":110,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["restarts",{"_index":328,"title":{},"body":{"controllers/AppController.html":{}}}],["results",{"_index":137,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"classes/git.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":283,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"classes/ExceptionFilter.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":149,"title":{},"body":{"interfaces/APISyncService.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"classes/ExceptionFilter.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["rimraf",{"_index":1653,"title":{},"body":{"dependencies.html":{}}}],["room",{"_index":736,"title":{},"body":{"injectables/AppService.html":{}}}],["route",{"_index":458,"title":{},"body":{"controllers/AppController.html":{}}}],["rpc",{"_index":359,"title":{},"body":{"controllers/AppController.html":{},"classes/ExceptionFilter.html":{}}}],["rpcexception",{"_index":851,"title":{},"body":{"guards/AuthGuard.html":{},"classes/ExceptionFilter.html":{}}}],["rpcexception('bad",{"_index":862,"title":{},"body":{"guards/AuthGuard.html":{}}}],["rpcexceptionfilter",{"_index":947,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["run",{"_index":316,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/StateMachinesService.html":{},"index.html":{}}}],["runid",{"_index":1572,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["runkeepalivetimer",{"_index":295,"title":{},"body":{"controllers/AppController.html":{}}}],["runkeepalivetimer(satconnection",{"_index":321,"title":{},"body":{"controllers/AppController.html":{}}}],["runner",{"_index":834,"title":{},"body":{"injectables/AppService.html":{}}}],["running",{"_index":449,"title":{},"body":{"controllers/AppController.html":{}}}],["runs",{"_index":323,"title":{},"body":{"controllers/AppController.html":{}}}],["rxjs",{"_index":17,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":348,"title":{},"body":{"controllers/AppController.html":{}}}],["same",{"_index":1396,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["sample",{"_index":912,"title":{"classes/Sample.html":{}},"body":{"classes/Date-1.html":{},"modules/MongoConnectionModule.html":{},"classes/Sample.html":{},"injectables/SatelliteService.html":{},"injectables/TasksQueueService.html":{},"coverage.html":{}}}],["sample.name",{"_index":1033,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["sample.public.remotemodules",{"_index":1293,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["sampledocument",{"_index":911,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{},"miscellaneous/typealiases.html":{}}}],["sampleid",{"_index":824,"title":{},"body":{"injectables/AppService.html":{},"injectables/TasksQueueService.html":{}}}],["samples",{"_index":913,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{}}}],["samples.service",{"_index":1008,"title":{},"body":{"modules/MongoConnectionModule.html":{},"injectables/TasksQueueService.html":{}}}],["sampleschema",{"_index":925,"title":{},"body":{"classes/Date-1.html":{},"modules/MongoConnectionModule.html":{},"classes/Sample.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sampleservice",{"_index":1499,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["samplesservice",{"_index":729,"title":{},"body":{"injectables/AppService.html":{},"modules/MongoConnectionModule.html":{},"injectables/StateMachinesService.html":{},"injectables/TasksQueueService.html":{},"coverage.html":{},"overview.html":{}}}],["sat",{"_index":547,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{}}}],["sat.nmodified",{"_index":1275,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["sat_id",{"_index":507,"title":{},"body":{"controllers/AppController.html":{}}}],["satcommands",{"_index":1421,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["satconnection",{"_index":307,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["satconnection.keepalivetimer",{"_index":604,"title":{},"body":{"controllers/AppController.html":{}}}],["satconnection.satinformation._id",{"_index":609,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["satconnection.statemachines[k].fsm",{"_index":789,"title":{},"body":{"injectables/AppService.html":{}}}],["satconnection.statemachines[target",{"_index":642,"title":{},"body":{"controllers/AppController.html":{}}}],["satconnection.statemachines[target].fsm",{"_index":650,"title":{},"body":{"controllers/AppController.html":{}}}],["satconnection.stream.end",{"_index":611,"title":{},"body":{"controllers/AppController.html":{}}}],["satconnections",{"_index":718,"title":{},"body":{"injectables/AppService.html":{}}}],["satellite",{"_index":97,"title":{"classes/Satellite.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"modules/MongoConnectionModule.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["satellite's",{"_index":109,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["satellite.absoluteurlsettings",{"_index":1277,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["satellite.name",{"_index":1032,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["satellite.service",{"_index":1009,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["satellite_id",{"_index":922,"title":{},"body":{"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Lab.html":{},"classes/Sample.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{}}}],["satellite_machines",{"_index":1047,"title":{},"body":{"classes/OnOptions.html":{},"classes/SatelliteMachine.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{}}}],["satellite_tasks",{"_index":1333,"title":{},"body":{"classes/SatelliteTask.html":{}}}],["satelliteconnection",{"_index":160,"title":{"interfaces/SatelliteConnection.html":{}},"body":{"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{},"coverage.html":{}}}],["satellitedocument",{"_index":199,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{},"miscellaneous/typealiases.html":{}}}],["satelliteid",{"_index":31,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/variables.html":{}}}],["satellitelist",{"_index":965,"title":{},"body":{"classes/Lab.html":{}}}],["satellitemachine",{"_index":1022,"title":{"classes/SatelliteMachine.html":{}},"body":{"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{},"coverage.html":{}}}],["satellitemachine.name",{"_index":1038,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["satellitemachinedocument",{"_index":1045,"title":{},"body":{"classes/OnOptions.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{},"miscellaneous/typealiases.html":{}}}],["satellitemachines.service",{"_index":1025,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["satellitemachineschema",{"_index":1023,"title":{},"body":{"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"classes/SatelliteMachine.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["satellitemachineservice",{"_index":370,"title":{"injectables/SatelliteMachineService.html":{}},"body":{"controllers/AppController.html":{},"modules/MongoConnectionModule.html":{},"injectables/SatelliteMachineService.html":{},"coverage.html":{},"overview.html":{}}}],["satellitemessage",{"_index":117,"title":{"interfaces/SatelliteMessage.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["satellitemodel",{"_index":1217,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["satelliteoutput",{"_index":125,"title":{"interfaces/SatelliteOutput.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["satellites",{"_index":227,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"injectables/AppService.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{}}}],["satelliteschema",{"_index":239,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"modules/MongoConnectionModule.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["satelliteservice",{"_index":363,"title":{"injectables/SatelliteService.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"modules/MongoConnectionModule.html":{},"injectables/SatelliteService.html":{},"injectables/StateMachinesService.html":{},"coverage.html":{},"overview.html":{}}}],["satellitetask",{"_index":33,"title":{"classes/SatelliteTask.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"modules/MongoConnectionModule.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["satellitetask.name",{"_index":1039,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["satellitetaskdocument",{"_index":1332,"title":{},"body":{"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"miscellaneous/typealiases.html":{}}}],["satellitetasks.service",{"_index":1028,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["satellitetaskschema",{"_index":1026,"title":{},"body":{"modules/MongoConnectionModule.html":{},"classes/SatelliteTask.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["satellitetasksservice",{"_index":372,"title":{"injectables/SatelliteTasksService.html":{}},"body":{"controllers/AppController.html":{},"modules/MongoConnectionModule.html":{},"injectables/SatelliteTasksService.html":{},"coverage.html":{},"overview.html":{}}}],["satid",{"_index":494,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"injectables/TasksQueueService.html":{}}}],["satinformation",{"_index":167,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["satinformation._id",{"_index":472,"title":{},"body":{"controllers/AppController.html":{}}}],["satinformation.absoluteurlsettings.cert",{"_index":490,"title":{},"body":{"controllers/AppController.html":{}}}],["satinformation.absoluteurlsettings.key",{"_index":489,"title":{},"body":{"controllers/AppController.html":{}}}],["satinformation.absoluteurlsettings.providedcerts",{"_index":488,"title":{},"body":{"controllers/AppController.html":{}}}],["satinformation.apimachines",{"_index":550,"title":{},"body":{"controllers/AppController.html":{}}}],["satinformation.configoverwrites",{"_index":535,"title":{},"body":{"controllers/AppController.html":{}}}],["satinformation.satmachines",{"_index":551,"title":{},"body":{"controllers/AppController.html":{}}}],["satinformation.sattasks",{"_index":552,"title":{},"body":{"controllers/AppController.html":{}}}],["satinterface.controller",{"_index":1189,"title":{},"body":{"modules/SatInterfaceModule.html":{}}}],["satinterface/satinterface.module",{"_index":701,"title":{},"body":{"modules/AppModule.html":{}}}],["satinterfacecontroller",{"_index":1096,"title":{"controllers/SatInterfaceController.html":{}},"body":{"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"coverage.html":{}}}],["satinterfacemodule",{"_index":700,"title":{"modules/SatInterfaceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SatInterfaceModule.html":{},"modules.html":{}}}],["satkeys",{"_index":775,"title":{},"body":{"injectables/AppService.html":{}}}],["satmachines",{"_index":233,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["satstream",{"_index":1366,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["sattasks",{"_index":234,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/StateMachinesService.html":{}}}],["save",{"_index":832,"title":{},"body":{"injectables/AppService.html":{}}}],["savelogs",{"_index":108,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"classes/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["scalable",{"_index":1671,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":697,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":706,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":194,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"classes/CWL.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/Lab.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"classes/SatelliteTask.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{}}}],["schemafactory",{"_index":195,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"classes/CWL.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/Lab.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"classes/SatelliteTask.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{}}}],["schemafactory.createforclass(apisyncmachine",{"_index":264,"title":{},"body":{"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"classes/Options.html":{},"classes/State.html":{},"classes/Type.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(cwl",{"_index":888,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/git.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(lab",{"_index":979,"title":{},"body":{"classes/Lab.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(sample",{"_index":926,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(satellite",{"_index":240,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(satellitemachine",{"_index":1048,"title":{},"body":{"classes/OnOptions.html":{},"classes/SatelliteMachine.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(satellitetask",{"_index":1334,"title":{},"body":{"classes/SatelliteTask.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(servicetag",{"_index":1351,"title":{},"body":{"classes/ServiceTag.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(subdomain",{"_index":1472,"title":{},"body":{"classes/SubDomain.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(tasksqueue",{"_index":936,"title":{},"body":{"classes/Date-2.html":{},"classes/TasksQueue.html":{},"miscellaneous/variables.html":{}}}],["schemas/apisyncmachines.schema",{"_index":280,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"modules/MongoConnectionModule.html":{}}}],["schemas/cwl.schema",{"_index":899,"title":{},"body":{"injectables/CWLService.html":{},"modules/MongoConnectionModule.html":{}}}],["schemas/lab.schema",{"_index":992,"title":{},"body":{"injectables/LabService.html":{},"modules/MongoConnectionModule.html":{}}}],["schemas/sample.schema",{"_index":1010,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["schemas/satellite.schema",{"_index":1011,"title":{},"body":{"modules/MongoConnectionModule.html":{},"injectables/SatelliteService.html":{}}}],["schemas/satellitemachines.schema",{"_index":1024,"title":{},"body":{"modules/MongoConnectionModule.html":{},"injectables/SatelliteMachineService.html":{}}}],["schemas/satellitetask.schema",{"_index":1027,"title":{},"body":{"modules/MongoConnectionModule.html":{},"injectables/SatelliteTasksService.html":{}}}],["schemas/servicetag.schema",{"_index":1018,"title":{},"body":{"modules/MongoConnectionModule.html":{},"injectables/TasksQueueService.html":{}}}],["schemas/subdomain.schema",{"_index":1014,"title":{},"body":{"modules/MongoConnectionModule.html":{},"injectables/SubDomainService.html":{}}}],["schemas/task.schema",{"_index":1015,"title":{},"body":{"modules/MongoConnectionModule.html":{},"injectables/TasksQueueService.html":{}}}],["scidapduplexstream",{"_index":163,"title":{"interfaces/SciDapDuplexStream.html":{}},"body":{"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{},"coverage.html":{}}}],["scidaphome",{"_index":236,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["script",{"_index":1414,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["script).call(this",{"_index":1425,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["scriptstring",{"_index":107,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"classes/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["secondaryfiles",{"_index":1059,"title":{},"body":{"interfaces/Output.html":{}}}],["see",{"_index":524,"title":{},"body":{"controllers/AppController.html":{}}}],["send",{"_index":315,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{},"injectables/StateMachinesService.html":{}}}],["sender",{"_index":118,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["senders",{"_index":570,"title":{},"body":{"controllers/AppController.html":{}}}],["sendevent",{"_index":750,"title":{"interfaces/SendEvent.html":{}},"body":{"injectables/AppService.html":{},"interfaces/ProcessedStateMachine.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SendEvent.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"coverage.html":{}}}],["sendevent(@param('satid",{"_index":1179,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["sendevent(satid",{"_index":1122,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["sending",{"_index":311,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["sends",{"_index":1394,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["sendsatellitetask",{"_index":1063,"title":{},"body":{"interfaces/ProcessedStateMachine.html":{},"interfaces/SendEvent.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{}}}],["sendtasktosatellite",{"_index":1103,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["sendtasktosatellite(@param('id",{"_index":1157,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["sendtasktosatellite(id",{"_index":1126,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["sendtoapi",{"_index":719,"title":{},"body":{"injectables/AppService.html":{}}}],["sendtosat",{"_index":720,"title":{},"body":{"injectables/AppService.html":{}}}],["sent",{"_index":521,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}}}],["seperate",{"_index":759,"title":{},"body":{"injectables/AppService.html":{}}}],["seperateconfigfiles",{"_index":723,"title":{},"body":{"injectables/AppService.html":{}}}],["server",{"_index":631,"title":{},"body":{"controllers/AppController.html":{},"injectables/SatelliteService.html":{},"index.html":{}}}],["service",{"_index":314,"title":{},"body":{"controllers/AppController.html":{}}}],["service_tags",{"_index":1350,"title":{},"body":{"classes/ServiceTag.html":{},"injectables/TasksQueueService.html":{}}}],["servicecommand",{"_index":37,"title":{"interfaces/ServiceCommand.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["servicetag",{"_index":1016,"title":{"classes/ServiceTag.html":{}},"body":{"modules/MongoConnectionModule.html":{},"classes/ServiceTag.html":{},"injectables/TasksQueueService.html":{},"coverage.html":{}}}],["servicetag.name",{"_index":1036,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["servicetagdocument",{"_index":1349,"title":{},"body":{"classes/ServiceTag.html":{},"injectables/TasksQueueService.html":{},"miscellaneous/typealiases.html":{}}}],["servicetagmodel",{"_index":1500,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["servicetags",{"_index":867,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/Sample.html":{},"classes/git.html":{}}}],["servicetagschema",{"_index":1017,"title":{},"body":{"modules/MongoConnectionModule.html":{},"classes/ServiceTag.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":57,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"injectables/LabService.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["set's",{"_index":1243,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["setinterval",{"_index":519,"title":{},"body":{"controllers/AppController.html":{}}}],["settimeout",{"_index":435,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}}}],["settings",{"_index":1278,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["setup",{"_index":1376,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["setupstatemachine",{"_index":724,"title":{},"body":{"injectables/AppService.html":{}}}],["setupstatemachine(states",{"_index":740,"title":{},"body":{"injectables/AppService.html":{}}}],["sha",{"_index":883,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/git.html":{}}}],["show",{"_index":174,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["side",{"_index":1672,"title":{},"body":{"index.html":{}}}],["single",{"_index":310,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}}}],["size",{"_index":1060,"title":{},"body":{"interfaces/Output.html":{}}}],["sort((a",{"_index":808,"title":{},"body":{"injectables/AppService.html":{}}}],["sortedprioritytasks",{"_index":812,"title":{},"body":{"injectables/AppService.html":{}}}],["sortedprioritytasks.length",{"_index":819,"title":{},"body":{"injectables/AppService.html":{}}}],["sortedprioritytasks.shift",{"_index":821,"title":{},"body":{"injectables/AppService.html":{}}}],["sortedtasks",{"_index":802,"title":{},"body":{"injectables/AppService.html":{}}}],["sortedtasks.length",{"_index":818,"title":{},"body":{"injectables/AppService.html":{}}}],["sortedtasks.shift",{"_index":822,"title":{},"body":{"injectables/AppService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"classes/git.html":{},"index.html":{}}}],["source_map_support",{"_index":101,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["specific",{"_index":553,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{},"injectables/StateMachinesService.html":{}}}],["specificconfig",{"_index":549,"title":{},"body":{"controllers/AppController.html":{}}}],["specificconfig.apimachines",{"_index":557,"title":{},"body":{"controllers/AppController.html":{}}}],["specificconfig.apimachines.length",{"_index":554,"title":{},"body":{"controllers/AppController.html":{}}}],["specificconfig.satmachines",{"_index":566,"title":{},"body":{"controllers/AppController.html":{}}}],["specificconfig.satmachines.length",{"_index":555,"title":{},"body":{"controllers/AppController.html":{}}}],["specificconfig.sattasks",{"_index":556,"title":{},"body":{"controllers/AppController.html":{}}}],["sponsors",{"_index":1696,"title":{},"body":{"index.html":{}}}],["src/.../apisyncmachines.schema.ts",{"_index":1727,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.controller.ts",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.service.ts",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cwl.schema.ts",{"_index":1728,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../lab.schema.ts",{"_index":1729,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../logger.ts",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1659,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../sample.schema.ts",{"_index":1730,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../satellite.schema.ts",{"_index":1731,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../satellitemachines.schema.ts",{"_index":1732,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../satellitetask.schema.ts",{"_index":1733,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../servicetag.schema.ts",{"_index":1734,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../statemachines.service.ts",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../subdomain.schema.ts",{"_index":1735,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../task.schema.ts",{"_index":1736,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":291,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts:135",{"_index":332,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:287",{"_index":322,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:299",{"_index":305,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:326",{"_index":302,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:349",{"_index":308,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:363",{"_index":298,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.guard.ts",{"_index":842,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app.guard.ts:15",{"_index":848,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app.guard.ts:8",{"_index":845,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app.module.ts",{"_index":689,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":715,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts:141",{"_index":741,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:17",{"_index":747,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:18",{"_index":746,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:19",{"_index":748,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:20",{"_index":744,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:21",{"_index":745,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:22",{"_index":730,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:37",{"_index":739,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:63",{"_index":732,"title":{},"body":{"injectables/AppService.html":{}}}],["src/interfaces/apisync.interface.ts",{"_index":6,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["src/interfaces/apisync.interface.ts:141",{"_index":960,"title":{},"body":{"interfaces/FileFromClient.html":{}}}],["src/interfaces/apisync.interface.ts:144",{"_index":11,"title":{},"body":{"interfaces/APISyncComplete.html":{}}}],["src/interfaces/apisync.interface.ts:60",{"_index":1049,"title":{},"body":{"interfaces/OptionTypes.html":{}}}],["src/interfaces/apisync.interface.ts:7",{"_index":151,"title":{},"body":{"interfaces/APISyncService.html":{}}}],["src/interfaces/apisync.interface.ts:8",{"_index":146,"title":{},"body":{"interfaces/APISyncService.html":{}}}],["src/interfaces/apisync.interface.ts:9",{"_index":150,"title":{},"body":{"interfaces/APISyncService.html":{}}}],["src/interfaces/connection.interface.ts",{"_index":153,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{},"coverage.html":{}}}],["src/interfaces/statemachines.interface.ts",{"_index":1062,"title":{},"body":{"interfaces/ProcessedStateMachine.html":{},"interfaces/SendEvent.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"coverage.html":{}}}],["src/interfaces/tasksqueue.interface.ts",{"_index":1052,"title":{},"body":{"interfaces/Output.html":{},"coverage.html":{}}}],["src/lib/logger.ts",{"_index":1611,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":1612,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/mongoconnection/apisyncmachines.service.ts",{"_index":268,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"coverage.html":{}}}],["src/mongoconnection/apisyncmachines.service.ts:14",{"_index":276,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{}}}],["src/mongoconnection/apisyncmachines.service.ts:8",{"_index":274,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{}}}],["src/mongoconnection/cwl.service.ts",{"_index":890,"title":{},"body":{"injectables/CWLService.html":{},"coverage.html":{}}}],["src/mongoconnection/cwl.service.ts:18",{"_index":896,"title":{},"body":{"injectables/CWLService.html":{}}}],["src/mongoconnection/cwl.service.ts:8",{"_index":893,"title":{},"body":{"injectables/CWLService.html":{}}}],["src/mongoconnection/labs.service.ts",{"_index":981,"title":{},"body":{"injectables/LabService.html":{},"coverage.html":{}}}],["src/mongoconnection/labs.service.ts:18",{"_index":986,"title":{},"body":{"injectables/LabService.html":{}}}],["src/mongoconnection/labs.service.ts:28",{"_index":989,"title":{},"body":{"injectables/LabService.html":{}}}],["src/mongoconnection/labs.service.ts:8",{"_index":984,"title":{},"body":{"injectables/LabService.html":{}}}],["src/mongoconnection/mongoconnection.module.ts",{"_index":1006,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["src/mongoconnection/samples.service.ts",{"_index":1616,"title":{},"body":{"coverage.html":{}}}],["src/mongoconnection/satellite.service.ts",{"_index":1216,"title":{},"body":{"injectables/SatelliteService.html":{},"coverage.html":{}}}],["src/mongoconnection/satellite.service.ts:10",{"_index":1228,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:117",{"_index":1263,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:13",{"_index":1273,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:138",{"_index":1239,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:153",{"_index":1249,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:168",{"_index":1241,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:17",{"_index":1260,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:181",{"_index":1259,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:30",{"_index":1238,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:46",{"_index":1236,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:56",{"_index":1230,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:72",{"_index":1271,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:86",{"_index":1256,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellitemachines.service.ts",{"_index":1209,"title":{},"body":{"injectables/SatelliteMachineService.html":{},"coverage.html":{}}}],["src/mongoconnection/satellitemachines.service.ts:14",{"_index":1213,"title":{},"body":{"injectables/SatelliteMachineService.html":{}}}],["src/mongoconnection/satellitemachines.service.ts:8",{"_index":1211,"title":{},"body":{"injectables/SatelliteMachineService.html":{}}}],["src/mongoconnection/satellitetasks.service.ts",{"_index":1335,"title":{},"body":{"injectables/SatelliteTasksService.html":{},"coverage.html":{}}}],["src/mongoconnection/satellitetasks.service.ts:14",{"_index":1340,"title":{},"body":{"injectables/SatelliteTasksService.html":{}}}],["src/mongoconnection/satellitetasks.service.ts:8",{"_index":1338,"title":{},"body":{"injectables/SatelliteTasksService.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts",{"_index":242,"title":{},"body":{"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"classes/Options.html":{},"classes/State.html":{},"classes/Type.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:100",{"_index":250,"title":{},"body":{"classes/ApiSyncMachine.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:103",{"_index":253,"title":{},"body":{"classes/ApiSyncMachine.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:11",{"_index":1584,"title":{},"body":{"classes/Type.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:14",{"_index":1583,"title":{},"body":{"classes/Type.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:19",{"_index":1352,"title":{},"body":{"classes/State.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:22",{"_index":1353,"title":{},"body":{"classes/State.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:25",{"_index":1354,"title":{},"body":{"classes/State.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:32",{"_index":904,"title":{},"body":{"classes/Config.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:35",{"_index":905,"title":{},"body":{"classes/Config.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:38",{"_index":903,"title":{},"body":{"classes/Config.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:43",{"_index":907,"title":{},"body":{"classes/Config.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:48",{"_index":906,"title":{},"body":{"classes/Config.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:55",{"_index":1050,"title":{},"body":{"classes/Options.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:60",{"_index":1051,"title":{},"body":{"classes/Options.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:67",{"_index":1000,"title":{},"body":{"classes/MachineCommand.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:70",{"_index":998,"title":{},"body":{"classes/MachineCommand.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:73",{"_index":997,"title":{},"body":{"classes/MachineCommand.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:76",{"_index":999,"title":{},"body":{"classes/MachineCommand.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:8",{"_index":1585,"title":{},"body":{"classes/Type.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:82",{"_index":245,"title":{},"body":{"classes/ApiSyncMachine.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:85",{"_index":246,"title":{},"body":{"classes/ApiSyncMachine.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:88",{"_index":249,"title":{},"body":{"classes/ApiSyncMachine.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:91",{"_index":254,"title":{},"body":{"classes/ApiSyncMachine.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:94",{"_index":247,"title":{},"body":{"classes/ApiSyncMachine.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:97",{"_index":248,"title":{},"body":{"classes/ApiSyncMachine.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts",{"_index":864,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"coverage.html":{},"classes/git.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:13",{"_index":937,"title":{},"body":{"classes/Description.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:16",{"_index":938,"title":{},"body":{"classes/Description.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:19",{"_index":939,"title":{},"body":{"classes/Description.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:22",{"_index":940,"title":{},"body":{"classes/Description.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:25",{"_index":941,"title":{},"body":{"classes/Description.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:28",{"_index":942,"title":{},"body":{"classes/Description.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:33",{"_index":1661,"title":{},"body":{"classes/git.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:36",{"_index":1662,"title":{},"body":{"classes/git.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:39",{"_index":1663,"title":{},"body":{"classes/git.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:42",{"_index":1664,"title":{},"body":{"classes/git.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:45",{"_index":1660,"title":{},"body":{"classes/git.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:50",{"_index":1001,"title":{},"body":{"classes/Metadata.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:53",{"_index":1002,"title":{},"body":{"classes/Metadata.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:59",{"_index":869,"title":{},"body":{"classes/CWL.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:62",{"_index":870,"title":{},"body":{"classes/CWL.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:65",{"_index":871,"title":{},"body":{"classes/CWL.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:68",{"_index":872,"title":{},"body":{"classes/CWL.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:71",{"_index":873,"title":{},"body":{"classes/CWL.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:74",{"_index":874,"title":{},"body":{"classes/CWL.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:77",{"_index":876,"title":{},"body":{"classes/CWL.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:8",{"_index":908,"title":{},"body":{"classes/Date.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:80",{"_index":877,"title":{},"body":{"classes/CWL.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:83",{"_index":875,"title":{},"body":{"classes/CWL.html":{}}}],["src/mongoconnection/schemas/lab.schema.ts",{"_index":962,"title":{},"body":{"classes/Lab.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/mongoconnection/schemas/lab.schema.ts:12",{"_index":971,"title":{},"body":{"classes/Lab.html":{}}}],["src/mongoconnection/schemas/lab.schema.ts:15",{"_index":967,"title":{},"body":{"classes/Lab.html":{}}}],["src/mongoconnection/schemas/lab.schema.ts:18",{"_index":968,"title":{},"body":{"classes/Lab.html":{}}}],["src/mongoconnection/schemas/lab.schema.ts:21",{"_index":969,"title":{},"body":{"classes/Lab.html":{}}}],["src/mongoconnection/schemas/lab.schema.ts:24",{"_index":970,"title":{},"body":{"classes/Lab.html":{}}}],["src/mongoconnection/schemas/lab.schema.ts:27",{"_index":972,"title":{},"body":{"classes/Lab.html":{}}}],["src/mongoconnection/schemas/lab.schema.ts:30",{"_index":973,"title":{},"body":{"classes/Lab.html":{}}}],["src/mongoconnection/schemas/lab.schema.ts:33",{"_index":974,"title":{},"body":{"classes/Lab.html":{}}}],["src/mongoconnection/schemas/lab.schema.ts:36",{"_index":975,"title":{},"body":{"classes/Lab.html":{}}}],["src/mongoconnection/schemas/lab.schema.ts:9",{"_index":966,"title":{},"body":{"classes/Lab.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts",{"_index":909,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:14",{"_index":1080,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:17",{"_index":1081,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:20",{"_index":1092,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:23",{"_index":1095,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:26",{"_index":1083,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:29",{"_index":1094,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:32",{"_index":1085,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:35",{"_index":1086,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:38",{"_index":1087,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:41",{"_index":1084,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:44",{"_index":1088,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:47",{"_index":1089,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:50",{"_index":1090,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:53",{"_index":1093,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:56",{"_index":1082,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:59",{"_index":1091,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:8",{"_index":910,"title":{},"body":{"classes/Date-1.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts",{"_index":180,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:102",{"_index":1197,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:105",{"_index":1198,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:108",{"_index":1192,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:111",{"_index":1199,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:114",{"_index":1194,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:12",{"_index":1076,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:15",{"_index":1068,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:18",{"_index":1069,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:21",{"_index":1067,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:24",{"_index":1078,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:27",{"_index":1066,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:30",{"_index":1071,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:33",{"_index":1075,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:36",{"_index":1079,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:39",{"_index":1073,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:42",{"_index":1070,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:45",{"_index":1074,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:48",{"_index":1072,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:51",{"_index":1077,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:56",{"_index":192,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:59",{"_index":190,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:62",{"_index":193,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:65",{"_index":191,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:68",{"_index":188,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:71",{"_index":189,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:78",{"_index":1190,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:81",{"_index":1195,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:84",{"_index":1202,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:87",{"_index":1196,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:90",{"_index":1201,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:93",{"_index":1193,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:96",{"_index":1200,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:99",{"_index":1191,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts",{"_index":1041,"title":{},"body":{"classes/OnOptions.html":{},"classes/SatelliteMachine.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:11",{"_index":1042,"title":{},"body":{"classes/OnOptions.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:14",{"_index":1043,"title":{},"body":{"classes/OnOptions.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:19",{"_index":1458,"title":{},"body":{"classes/StateOptions.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:22",{"_index":1459,"title":{},"body":{"classes/StateOptions.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:25",{"_index":1460,"title":{},"body":{"classes/StateOptions.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:32",{"_index":1589,"title":{},"body":{"classes/UnProcessedStateMachine.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:37",{"_index":1588,"title":{},"body":{"classes/UnProcessedStateMachine.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:42",{"_index":1587,"title":{},"body":{"classes/UnProcessedStateMachine.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:47",{"_index":1586,"title":{},"body":{"classes/UnProcessedStateMachine.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:55",{"_index":1203,"title":{},"body":{"classes/SatelliteMachine.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:58",{"_index":1205,"title":{},"body":{"classes/SatelliteMachine.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:61",{"_index":1204,"title":{},"body":{"classes/SatelliteMachine.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:64",{"_index":1207,"title":{},"body":{"classes/SatelliteMachine.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:67",{"_index":1208,"title":{},"body":{"classes/SatelliteMachine.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:70",{"_index":1206,"title":{},"body":{"classes/SatelliteMachine.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:8",{"_index":1044,"title":{},"body":{"classes/OnOptions.html":{}}}],["src/mongoconnection/schemas/satellitetask.schema.ts",{"_index":1321,"title":{},"body":{"classes/SatelliteTask.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/mongoconnection/schemas/satellitetask.schema.ts:12",{"_index":1325,"title":{},"body":{"classes/SatelliteTask.html":{}}}],["src/mongoconnection/schemas/satellitetask.schema.ts:15",{"_index":1326,"title":{},"body":{"classes/SatelliteTask.html":{}}}],["src/mongoconnection/schemas/satellitetask.schema.ts:18",{"_index":1323,"title":{},"body":{"classes/SatelliteTask.html":{}}}],["src/mongoconnection/schemas/satellitetask.schema.ts:21",{"_index":1327,"title":{},"body":{"classes/SatelliteTask.html":{}}}],["src/mongoconnection/schemas/satellitetask.schema.ts:24",{"_index":1331,"title":{},"body":{"classes/SatelliteTask.html":{}}}],["src/mongoconnection/schemas/satellitetask.schema.ts:27",{"_index":1330,"title":{},"body":{"classes/SatelliteTask.html":{}}}],["src/mongoconnection/schemas/satellitetask.schema.ts:30",{"_index":1328,"title":{},"body":{"classes/SatelliteTask.html":{}}}],["src/mongoconnection/schemas/satellitetask.schema.ts:33",{"_index":1324,"title":{},"body":{"classes/SatelliteTask.html":{}}}],["src/mongoconnection/schemas/satellitetask.schema.ts:36",{"_index":1329,"title":{},"body":{"classes/SatelliteTask.html":{}}}],["src/mongoconnection/schemas/satellitetask.schema.ts:9",{"_index":1322,"title":{},"body":{"classes/SatelliteTask.html":{}}}],["src/mongoconnection/schemas/servicetag.schema.ts",{"_index":1343,"title":{},"body":{"classes/ServiceTag.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/mongoconnection/schemas/servicetag.schema.ts:12",{"_index":1346,"title":{},"body":{"classes/ServiceTag.html":{}}}],["src/mongoconnection/schemas/servicetag.schema.ts:15",{"_index":1347,"title":{},"body":{"classes/ServiceTag.html":{}}}],["src/mongoconnection/schemas/servicetag.schema.ts:18",{"_index":1348,"title":{},"body":{"classes/ServiceTag.html":{}}}],["src/mongoconnection/schemas/servicetag.schema.ts:9",{"_index":1345,"title":{},"body":{"classes/ServiceTag.html":{}}}],["src/mongoconnection/schemas/subdomain.schema.ts",{"_index":1461,"title":{},"body":{"classes/SubDomain.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/mongoconnection/schemas/subdomain.schema.ts:12",{"_index":1468,"title":{},"body":{"classes/SubDomain.html":{}}}],["src/mongoconnection/schemas/subdomain.schema.ts:15",{"_index":1467,"title":{},"body":{"classes/SubDomain.html":{}}}],["src/mongoconnection/schemas/subdomain.schema.ts:18",{"_index":1464,"title":{},"body":{"classes/SubDomain.html":{}}}],["src/mongoconnection/schemas/subdomain.schema.ts:21",{"_index":1466,"title":{},"body":{"classes/SubDomain.html":{}}}],["src/mongoconnection/schemas/subdomain.schema.ts:24",{"_index":1465,"title":{},"body":{"classes/SubDomain.html":{}}}],["src/mongoconnection/schemas/subdomain.schema.ts:9",{"_index":1463,"title":{},"body":{"classes/SubDomain.html":{}}}],["src/mongoconnection/schemas/task.schema.ts",{"_index":927,"title":{},"body":{"classes/Date-2.html":{},"classes/TasksQueue.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/mongoconnection/schemas/task.schema.ts:11",{"_index":929,"title":{},"body":{"classes/Date-2.html":{}}}],["src/mongoconnection/schemas/task.schema.ts:17",{"_index":1489,"title":{},"body":{"classes/TasksQueue.html":{}}}],["src/mongoconnection/schemas/task.schema.ts:20",{"_index":1493,"title":{},"body":{"classes/TasksQueue.html":{}}}],["src/mongoconnection/schemas/task.schema.ts:23",{"_index":1490,"title":{},"body":{"classes/TasksQueue.html":{}}}],["src/mongoconnection/schemas/task.schema.ts:26",{"_index":1492,"title":{},"body":{"classes/TasksQueue.html":{}}}],["src/mongoconnection/schemas/task.schema.ts:29",{"_index":1491,"title":{},"body":{"classes/TasksQueue.html":{}}}],["src/mongoconnection/schemas/task.schema.ts:8",{"_index":930,"title":{},"body":{"classes/Date-2.html":{}}}],["src/mongoconnection/subdomain.service.ts",{"_index":1473,"title":{},"body":{"injectables/SubDomainService.html":{},"coverage.html":{}}}],["src/mongoconnection/subdomain.service.ts:18",{"_index":1480,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["src/mongoconnection/subdomain.service.ts:29",{"_index":1484,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["src/mongoconnection/subdomain.service.ts:8",{"_index":1477,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["src/mongoconnection/tasksqueue.service.ts",{"_index":1494,"title":{},"body":{"injectables/TasksQueueService.html":{},"coverage.html":{}}}],["src/mongoconnection/tasksqueue.service.ts:103",{"_index":1520,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["src/mongoconnection/tasksqueue.service.ts:12",{"_index":1501,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["src/mongoconnection/tasksqueue.service.ts:127",{"_index":1524,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["src/mongoconnection/tasksqueue.service.ts:152",{"_index":1516,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["src/mongoconnection/tasksqueue.service.ts:162",{"_index":1506,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["src/mongoconnection/tasksqueue.service.ts:26",{"_index":1514,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["src/mongoconnection/tasksqueue.service.ts:47",{"_index":1510,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["src/mongoconnection/tasksqueue.service.ts:63",{"_index":1504,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["src/rpc",{"_index":943,"title":{},"body":{"classes/ExceptionFilter.html":{},"coverage.html":{}}}],["src/satinterface/satinterface.controller.ts",{"_index":1097,"title":{},"body":{"controllers/SatInterfaceController.html":{},"coverage.html":{}}}],["src/satinterface/satinterface.controller.ts:134",{"_index":1119,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["src/satinterface/satinterface.controller.ts:158",{"_index":1125,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["src/satinterface/satinterface.controller.ts:177",{"_index":1133,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["src/satinterface/satinterface.controller.ts:21",{"_index":1112,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["src/satinterface/satinterface.controller.ts:33",{"_index":1111,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["src/satinterface/satinterface.controller.ts:66",{"_index":1129,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["src/satinterface/satinterface.controller.ts:99",{"_index":1107,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["src/satinterface/satinterface.module.ts",{"_index":1187,"title":{},"body":{"modules/SatInterfaceModule.html":{}}}],["src/statemachines/statemachines.module.ts",{"_index":1359,"title":{},"body":{"modules/StateMachineModules.html":{}}}],["src/statemachines/statemachines.service.ts",{"_index":1361,"title":{},"body":{"injectables/StateMachinesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/statemachines/statemachines.service.ts:20",{"_index":1372,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["src/statemachines/statemachines.service.ts:34",{"_index":1383,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["src/statemachines/statemachines.service.ts:37",{"_index":1384,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["src/statemachines/statemachines.service.ts:40",{"_index":1385,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["src/statemachines/statemachines.service.ts:43",{"_index":1386,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["src/statemachines/statemachines.service.ts:45",{"_index":1382,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["src/statemachines/statemachines.service.ts:46",{"_index":1380,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["src/statemachines/statemachines.service.ts:47",{"_index":1381,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["src/statemachines/statemachines.service.ts:57",{"_index":1375,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["st",{"_index":1575,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["standard",{"_index":816,"title":{},"body":{"injectables/AppService.html":{}}}],["start",{"_index":565,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{},"index.html":{}}}],["start:dev",{"_index":1683,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1685,"title":{},"body":{"index.html":{}}}],["started",{"_index":563,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}}}],["starter",{"_index":1676,"title":{},"body":{"index.html":{}}}],["startoptions",{"_index":18,"title":{"interfaces/StartOptions.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["starts",{"_index":514,"title":{},"body":{"controllers/AppController.html":{}}}],["state",{"_index":256,"title":{"classes/State.html":{}},"body":{"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"classes/Options.html":{},"controllers/SatInterfaceController.html":{},"classes/State.html":{},"injectables/StateMachinesService.html":{},"injectables/TasksQueueService.html":{},"classes/Type.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.value",{"_index":1452,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["statelogger",{"_index":1390,"title":{},"body":{"injectables/StateMachinesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["statelogger(config.id",{"_index":1401,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["statemachine",{"_index":42,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["statemachine.log",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statemachinemodules",{"_index":702,"title":{"modules/StateMachineModules.html":{}},"body":{"modules/AppModule.html":{},"modules/StateMachineModules.html":{},"modules.html":{},"overview.html":{}}}],["statemachineoptions",{"_index":69,"title":{"interfaces/StateMachineOptions.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["statemachines",{"_index":164,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["statemachines.service",{"_index":1360,"title":{},"body":{"modules/StateMachineModules.html":{}}}],["statemachines/statemachines.module",{"_index":703,"title":{},"body":{"modules/AppModule.html":{}}}],["statemachines/statemachines.service",{"_index":362,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["statemachines[key",{"_index":1152,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["statemachinesservice",{"_index":361,"title":{"injectables/StateMachinesService.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"modules/StateMachineModules.html":{},"injectables/StateMachinesService.html":{},"coverage.html":{},"overview.html":{}}}],["statements",{"_index":1593,"title":{},"body":{"coverage.html":{}}}],["stateoptions",{"_index":72,"title":{"classes/StateOptions.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["states",{"_index":62,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"injectables/AppService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["statistics",{"_index":924,"title":{},"body":{"classes/Date-1.html":{},"classes/Lab.html":{},"classes/Sample.html":{}}}],["status",{"_index":632,"title":{},"body":{"controllers/AppController.html":{},"injectables/SatelliteService.html":{},"injectables/TasksQueueService.html":{}}}],["stay",{"_index":1704,"title":{},"body":{"index.html":{}}}],["stderr",{"_index":53,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["stdin",{"_index":135,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["stdout",{"_index":51,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["still",{"_index":468,"title":{},"body":{"controllers/AppController.html":{}}}],["store",{"_index":453,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["storekey",{"_index":1065,"title":{"interfaces/StoreKey.html":{}},"body":{"interfaces/ProcessedStateMachine.html":{},"interfaces/SendEvent.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"coverage.html":{}}}],["stores",{"_index":387,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["storevalue",{"_index":1367,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["storing",{"_index":455,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["stream",{"_index":162,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{},"miscellaneous/variables.html":{}}}],["streamconnection",{"_index":955,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["streamconnection.emit('error",{"_index":957,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["streamqueue",{"_index":145,"title":{},"body":{"interfaces/APISyncService.html":{},"controllers/AppController.html":{}}}],["streamqueue(requeststream",{"_index":330,"title":{},"body":{"controllers/AppController.html":{}}}],["streamqueue(upstream",{"_index":26,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["streamresponse",{"_index":106,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"classes/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["streams",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":9,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"classes/git.html":{},"miscellaneous/variables.html":{}}}],["stringify",{"_index":95,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["strings",{"_index":84,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["style",{"_index":134,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"classes/Type.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["sub_domains",{"_index":1470,"title":{},"body":{"classes/SubDomain.html":{}}}],["subdomain",{"_index":1012,"title":{"classes/SubDomain.html":{}},"body":{"modules/MongoConnectionModule.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"coverage.html":{}}}],["subdomain.name",{"_index":1035,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["subdomain.service",{"_index":1020,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["subdomaindocument",{"_index":1469,"title":{},"body":{"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"miscellaneous/typealiases.html":{}}}],["subdomainmodel",{"_index":1478,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["subdomainschema",{"_index":1013,"title":{},"body":{"modules/MongoConnectionModule.html":{},"classes/SubDomain.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["subdomainservice",{"_index":365,"title":{"injectables/SubDomainService.html":{}},"body":{"controllers/AppController.html":{},"modules/MongoConnectionModule.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"coverage.html":{},"overview.html":{}}}],["subject",{"_index":743,"title":{},"body":{"injectables/AppService.html":{},"injectables/StateMachinesService.html":{}}}],["subscribe((message",{"_index":421,"title":{},"body":{"controllers/AppController.html":{}}}],["subscribe((result",{"_index":509,"title":{},"body":{"controllers/AppController.html":{}}}],["subscribe(async",{"_index":432,"title":{},"body":{"controllers/AppController.html":{}}}],["subscription_cancelled",{"_index":807,"title":{},"body":{"injectables/AppService.html":{}}}],["success",{"_index":633,"title":{},"body":{"controllers/AppController.html":{}}}],["support",{"_index":1697,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":827,"title":{},"body":{"injectables/AppService.html":{}}}],["svg",{"_index":1714,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":48,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["t",{"_index":1550,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["t._id",{"_index":1551,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["t.date.created",{"_index":1552,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["table",{"_index":1631,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1630,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":868,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/git.html":{}}}],["tap",{"_index":347,"title":{},"body":{"controllers/AppController.html":{}}}],["tap((m",{"_index":416,"title":{},"body":{"controllers/AppController.html":{}}}],["target",{"_index":45,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["targetmachine",{"_index":126,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["task",{"_index":737,"title":{},"body":{"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{},"injectables/TasksQueueService.html":{}}}],["task._id",{"_index":836,"title":{},"body":{"injectables/AppService.html":{},"injectables/TasksQueueService.html":{}}}],["task.action",{"_index":806,"title":{},"body":{"injectables/AppService.html":{}}}],["task.payload.foreach((value",{"_index":1556,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["task.payload.get('downloads",{"_index":1564,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["task.payload.get('sample_id",{"_index":1573,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["task.payload.get('service_tags",{"_index":1535,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["task.payload.get('service_tags').includes(prioritytag._id",{"_index":1537,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["task.satellite_id",{"_index":1541,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["task_id",{"_index":1512,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["taskcnt",{"_index":800,"title":{},"body":{"injectables/AppService.html":{}}}],["taskid",{"_index":30,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/TasksQueueService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["taskrunners",{"_index":784,"title":{},"body":{"injectables/AppService.html":{}}}],["taskrunners.filter((fsm",{"_index":792,"title":{},"body":{"injectables/AppService.html":{}}}],["taskrunners.length",{"_index":796,"title":{},"body":{"injectables/AppService.html":{}}}],["tasks",{"_index":32,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["tasks.length",{"_index":1161,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["tasks.reduce",{"_index":1534,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["tasks_queue",{"_index":932,"title":{},"body":{"classes/Date-2.html":{},"classes/TasksQueue.html":{}}}],["tasksbysat",{"_index":1548,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["tasksbysat.foreach(async",{"_index":1549,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["tasksqueue",{"_index":931,"title":{"classes/TasksQueue.html":{}},"body":{"classes/Date-2.html":{},"modules/MongoConnectionModule.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"coverage.html":{}}}],["tasksqueue.name",{"_index":1031,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["tasksqueue.service",{"_index":1019,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["tasksqueuedocument",{"_index":753,"title":{},"body":{"injectables/AppService.html":{},"classes/Date-2.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"miscellaneous/typealiases.html":{}}}],["tasksqueuemodel",{"_index":1502,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["tasksqueueschema",{"_index":935,"title":{},"body":{"classes/Date-2.html":{},"modules/MongoConnectionModule.html":{},"classes/TasksQueue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tasksqueueservice",{"_index":727,"title":{"injectables/TasksQueueService.html":{}},"body":{"injectables/AppService.html":{},"modules/MongoConnectionModule.html":{},"injectables/StateMachinesService.html":{},"injectables/TasksQueueService.html":{},"coverage.html":{},"overview.html":{}}}],["teh",{"_index":1435,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["templateid",{"_index":915,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{}}}],["tempname",{"_index":612,"title":{},"body":{"controllers/AppController.html":{}}}],["temppath",{"_index":615,"title":{},"body":{"controllers/AppController.html":{}}}],["test",{"_index":493,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/SubDomainService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":1690,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1689,"title":{},"body":{"index.html":{}}}],["test_satellite",{"_index":400,"title":{},"body":{"controllers/AppController.html":{}}}],["testing",{"_index":79,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["tests",{"_index":1687,"title":{},"body":{"index.html":{}}}],["th",{"_index":1579,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["thanks",{"_index":1695,"title":{},"body":{"index.html":{}}}],["things",{"_index":1286,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["this._apisyncmachinemodel.find",{"_index":285,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{}}}],["this._apisyncmachinesservice.getinitialmachines",{"_index":536,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.createfsm.next",{"_index":560,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}}}],["this._appservice.createfsm.subscribe(async",{"_index":399,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.handleips(json.parse(localips",{"_index":511,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.removefsm.next",{"_index":1178,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["this._appservice.removefsm.subscribe",{"_index":404,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.satconnections",{"_index":1143,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["this._appservice.satconnections[id",{"_index":1149,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["this._appservice.satconnections[msg.satellite].statemachines[msg.targetmachine].fsm.state.context[msg.method](msg.output",{"_index":636,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.satconnections[satelliteid].statemachines[config.id",{"_index":403,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.satconnections[satelliteid].statemachines[config.id].fsm.state.context[key",{"_index":1423,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["this._appservice.satconnections[satelliteid].statemachines[machine",{"_index":407,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.satconnections[satelliteid].statemachines[to].fsm.send",{"_index":437,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.satconnections[satelliteid].statemachines[to].fsm.state.context[key",{"_index":456,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.satconnections[satelliteid].statemachines[to].fsm.state.context[method",{"_index":442,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.satconnections[satelliteid].stream.write",{"_index":422,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.satconnections[satid",{"_index":601,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.satconnections[satinformation._id",{"_index":530,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.satconnections[satinformation._id].receievedresponse",{"_index":569,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.sendtoapi",{"_index":425,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.sendtoapi.next",{"_index":1181,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["this._appservice.sendtosat$.next",{"_index":1164,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["this._appservice.setupstatemachine(config",{"_index":402,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.triggercontext",{"_index":438,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.triggercontext.next",{"_index":1185,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["this._httpservice.post('http://localhost:3001/digital",{"_index":504,"title":{},"body":{"controllers/AppController.html":{}}}],["this._mergedefaultconfigwithcustom(apimachines",{"_index":540,"title":{},"body":{"controllers/AppController.html":{}}}],["this._mergedefaultconfigwithcustom(satmachines",{"_index":542,"title":{},"body":{"controllers/AppController.html":{}}}],["this._mergedefaultconfigwithcustom(sattasks",{"_index":544,"title":{},"body":{"controllers/AppController.html":{}}}],["this._samplesservice.checkupstreamoutputs(sampleid",{"_index":831,"title":{},"body":{"injectables/AppService.html":{}}}],["this._satellitemachinemodel.find",{"_index":1215,"title":{},"body":{"injectables/SatelliteMachineService.html":{}}}],["this._satellitemachineservice.getinitialmachines",{"_index":537,"title":{},"body":{"controllers/AppController.html":{}}}],["this._satelliteservice.canlink(jwt",{"_index":860,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._satelliteservice.getbytoken(jwt",{"_index":470,"title":{},"body":{"controllers/AppController.html":{}}}],["this._satelliteservice.updateconnectedstatus(satid",{"_index":593,"title":{},"body":{"controllers/AppController.html":{}}}],["this._satelliteservice.updateconnectedstatus(satinformation._id",{"_index":481,"title":{},"body":{"controllers/AppController.html":{}}}],["this._satelliteservice.updatetime(satid",{"_index":592,"title":{},"body":{"controllers/AppController.html":{}}}],["this._satellitetaskmodel.find",{"_index":1342,"title":{},"body":{"injectables/SatelliteTasksService.html":{}}}],["this._satellitetasksservice.getinitialtasks",{"_index":538,"title":{},"body":{"controllers/AppController.html":{}}}],["this._statemachineservice.createstatemachine(states",{"_index":840,"title":{},"body":{"injectables/AppService.html":{}}}],["this._statemachineservice.dbstream$.subscribe((msg",{"_index":756,"title":{},"body":{"injectables/AppService.html":{}}}],["this._statemachineservice.satstream$).pipe",{"_index":415,"title":{},"body":{"controllers/AppController.html":{}}}],["this._statemachineservice.storevalue",{"_index":452,"title":{},"body":{"controllers/AppController.html":{}}}],["this._subdomainservice.getbysatid(satid",{"_index":496,"title":{},"body":{"controllers/AppController.html":{}}}],["this._subdomainservice.getdevinfo",{"_index":485,"title":{},"body":{"controllers/AppController.html":{}}}],["this._tasksqueueservice.getbysatid(satid",{"_index":782,"title":{},"body":{"injectables/AppService.html":{}}}],["this.authservice.verify(jwt",{"_index":859,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.cwlmodel.findone",{"_index":901,"title":{},"body":{"injectables/CWLService.html":{}}}],["this.getbyid(taskid",{"_index":1562,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["this.labmodel.findone",{"_index":994,"title":{},"body":{"injectables/LabService.html":{}}}],["this.labmodel.updateone",{"_index":995,"title":{},"body":{"injectables/LabService.html":{}}}],["this.processmessagesfrommainservice(msg.target",{"_index":580,"title":{},"body":{"controllers/AppController.html":{}}}],["this.runkeepalivetimer(newconnection",{"_index":526,"title":{},"body":{"controllers/AppController.html":{}}}],["this.sampleservice.updateprogress(preview",{"_index":1574,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["this.satconnections[key",{"_index":777,"title":{},"body":{"injectables/AppService.html":{}}}],["this.satellitemodel.find",{"_index":1312,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["this.satellitemodel.findbyid(_id",{"_index":1291,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["this.satellitemodel.findbyidandupdate(satellite._id",{"_index":1283,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["this.satellitemodel.findbyidandupdate(satid",{"_index":1315,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["this.satellitemodel.findone",{"_index":1276,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["this.satellitemodel.findoneandupdate",{"_index":1288,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["this.satellitemodel.updateone",{"_index":1274,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["this.satstream$.next",{"_index":1420,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["this.sendevent$.next",{"_index":1419,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["this.servicetagmodel.findone",{"_index":1532,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["this.storevalue$.next",{"_index":1422,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["this.subdomainmodel.findone",{"_index":1486,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["this.subdomainmodel.findoneandupdate",{"_index":1487,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["this.tasksqueuemodel.find",{"_index":1533,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["this.tasksqueuemodel.findbyid(_id).exec",{"_index":1546,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["this.tasksqueuemodel.findbyid(task_id",{"_index":1554,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["this.tasksqueuemodel.findbyid(task_id).exec",{"_index":1539,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["this.tasksqueuemodel.findbyidandupdate(task_id",{"_index":1561,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["this.tasksqueuemodel.findbyidandupdate(taskid",{"_index":1570,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["this.tasksqueuemodel.findone",{"_index":1580,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["throw",{"_index":443,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthGuard.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["throwerror",{"_index":953,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["throwerror(exception.geterror",{"_index":959,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["throws",{"_index":460,"title":{},"body":{"controllers/AppController.html":{},"classes/ExceptionFilter.html":{}}}],["till",{"_index":1268,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["time",{"_index":220,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{}}}],["timems",{"_index":1311,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["timer",{"_index":324,"title":{},"body":{"controllers/AppController.html":{}}}],["timetoexpire",{"_index":589,"title":{},"body":{"controllers/AppController.html":{},"injectables/SatelliteService.html":{}}}],["tmp",{"_index":617,"title":{},"body":{"controllers/AppController.html":{}}}],["tmp_inputs",{"_index":923,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{}}}],["todo",{"_index":122,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"guards/AuthGuard.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["token",{"_index":231,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{},"injectables/SubDomainService.html":{}}}],["touch",{"_index":1705,"title":{},"body":{"index.html":{}}}],["toupdate",{"_index":1568,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["transition",{"_index":1378,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["transitions",{"_index":131,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/Type.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["transitions[k]).call(this",{"_index":1448,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["trees",{"_index":34,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["trees.length",{"_index":1162,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["trigger",{"_index":439,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}}}],["triggercontext",{"_index":721,"title":{"interfaces/TriggerContext.html":{}},"body":{"injectables/AppService.html":{},"interfaces/ProcessedStateMachine.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SendEvent.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"coverage.html":{}}}],["triggercontext(@param('satid",{"_index":1182,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["triggercontext(satid",{"_index":1131,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["triggered",{"_index":1134,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["true",{"_index":59,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["try",{"_index":405,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":1710,"title":{},"body":{"index.html":{}}}],["two",{"_index":1264,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["twoweeksms",{"_index":1306,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["type",{"_index":115,"title":{"classes/Type.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{},"classes/git.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1725,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1411,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["typescript",{"_index":1675,"title":{},"body":{"index.html":{}}}],["unassigned",{"_index":224,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["unique",{"_index":1235,"title":{},"body":{"injectables/SatelliteService.html":{},"injectables/SubDomainService.html":{}}}],["unit",{"_index":1686,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":742,"title":{},"body":{"injectables/AppService.html":{},"injectables/LabService.html":{},"injectables/SatelliteService.html":{}}}],["unlicensed",{"_index":1724,"title":{},"body":{"properties.html":{}}}],["unprocessedstatemachine",{"_index":1046,"title":{"classes/UnProcessedStateMachine.html":{}},"body":{"classes/OnOptions.html":{},"classes/SatelliteMachine.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{},"coverage.html":{}}}],["unprocessedstatemachineoptions",{"_index":43,"title":{"interfaces/UnProcessedStateMachineOptions.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["unused",{"_index":1482,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["uo",{"_index":1153,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["upaction",{"_index":646,"title":{},"body":{"controllers/AppController.html":{}}}],["upaction(message",{"_index":652,"title":{},"body":{"controllers/AppController.html":{}}}],["update",{"_index":597,"title":{},"body":{"controllers/AppController.html":{},"injectables/LabService.html":{},"injectables/SatelliteService.html":{},"injectables/StateMachinesService.html":{},"injectables/TasksQueueService.html":{}}}],["update(task_id",{"_index":1518,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["updateconnectedstatus",{"_index":1221,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updateconnectedstatus(satid",{"_index":1240,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updated",{"_index":653,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/SatelliteService.html":{}}}],["updated.push(machine",{"_index":659,"title":{},"body":{"controllers/AppController.html":{}}}],["updatedactions",{"_index":1429,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedactions[k",{"_index":1432,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedconfig",{"_index":1400,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedconfig.context",{"_index":1441,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedcontext",{"_index":1407,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedcontext[k",{"_index":1413,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedguards",{"_index":1436,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedguards[k",{"_index":1439,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedinfo",{"_index":1519,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["updatedinfotasksqueue",{"_index":1528,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["updatedobject",{"_index":988,"title":{},"body":{"injectables/LabService.html":{},"injectables/SatelliteService.html":{}}}],["updatedoptions",{"_index":1399,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedoptions.actions",{"_index":1430,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedoptions.guards",{"_index":1437,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedownloadprogress",{"_index":1497,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["updatedownloadprogress(taskid",{"_index":1522,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["updatedpayload",{"_index":1555,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["updatedpayload.set(key",{"_index":1557,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["updatedremote",{"_index":1296,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updatedremote.moduleid",{"_index":1297,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updatedremote.path",{"_index":1298,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updatedremotes",{"_index":1294,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updatedremotes.push",{"_index":1300,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updatedtransitions",{"_index":1444,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedtransitions[k",{"_index":1446,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedtransitions[state.value",{"_index":1454,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedtransitions[state.value](state",{"_index":1455,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updateips",{"_index":1222,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updateips(satid",{"_index":1248,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updatelocalfiles",{"_index":1223,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updatelocalfiles(_id",{"_index":1255,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updatenewabsoluteurl",{"_index":1224,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updatenewabsoluteurl(satid",{"_index":1257,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updateone",{"_index":982,"title":{},"body":{"injectables/LabService.html":{},"injectables/SatelliteService.html":{}}}],["updateone(_id",{"_index":987,"title":{},"body":{"injectables/LabService.html":{},"injectables/SatelliteService.html":{}}}],["updates",{"_index":1242,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updatetime",{"_index":1225,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updatetime(_id",{"_index":1261,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updateversion",{"_index":1226,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updateversion(_id",{"_index":1270,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["upserted",{"_index":991,"title":{},"body":{"injectables/LabService.html":{},"injectables/SatelliteService.html":{}}}],["upstream",{"_index":148,"title":{},"body":{"interfaces/APISyncService.html":{},"classes/CWL.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/Sample.html":{},"classes/git.html":{}}}],["upstreamready",{"_index":830,"title":{},"body":{"injectables/AppService.html":{}}}],["upstreams",{"_index":828,"title":{},"body":{"injectables/AppService.html":{}}}],["uri",{"_index":712,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":881,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/git.html":{}}}],["urls",{"_index":506,"title":{},"body":{"controllers/AppController.html":{}}}],["use",{"_index":56,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["used",{"_index":78,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["usefactory",{"_index":711,"title":{},"body":{"modules/AppModule.html":{}}}],["usefilters",{"_index":333,"title":{},"body":{"controllers/AppController.html":{}}}],["usefilters(exceptionfilter",{"_index":459,"title":{},"body":{"controllers/AppController.html":{}}}],["usefilters(exceptionfilter)@grpcstreamcall('apisyncservice",{"_index":301,"title":{},"body":{"controllers/AppController.html":{}}}],["usefindandmodify",{"_index":1284,"title":{},"body":{"injectables/SatelliteService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["useguards",{"_index":334,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(authguard",{"_index":457,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(authguard)@usefilters(exceptionfilter)@grpcstreamcall('apisyncservice",{"_index":331,"title":{},"body":{"controllers/AppController.html":{}}}],["userid",{"_index":916,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{}}}],["utf",{"_index":764,"title":{},"body":{"injectables/AppService.html":{}}}],["uuid",{"_index":1140,"title":{},"body":{"controllers/SatInterfaceController.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":1139,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["v4",{"_index":1138,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["value",{"_index":454,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/SendEvent.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"miscellaneous/variables.html":{}}}],["value.includes('func",{"_index":1412,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["value.replace('func",{"_index":1415,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["variable",{"_index":90,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["variables",{"_index":1737,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification",{"_index":857,"title":{},"body":{"guards/AuthGuard.html":{}}}],["verifying",{"_index":849,"title":{},"body":{"guards/AuthGuard.html":{}}}],["version",{"_index":211,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{},"classes/git.html":{},"properties.html":{}}}],["void",{"_index":71,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["w",{"_index":624,"title":{},"body":{"controllers/AppController.html":{}}}],["waiting",{"_index":790,"title":{},"body":{"injectables/AppService.html":{}}}],["waitingmachines",{"_index":791,"title":{},"body":{"injectables/AppService.html":{}}}],["waitingmachines.length",{"_index":797,"title":{},"body":{"injectables/AppService.html":{}}}],["want",{"_index":1287,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["watch",{"_index":92,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"index.html":{}}}],["watch_array",{"_index":93,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["way",{"_index":528,"title":{},"body":{"controllers/AppController.html":{},"injectables/SatelliteService.html":{}}}],["website",{"_index":1708,"title":{},"body":{"index.html":{}}}],["weeks",{"_index":1265,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["whether",{"_index":1245,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["without",{"_index":385,"title":{},"body":{"controllers/AppController.html":{}}}],["won't",{"_index":1114,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["working",{"_index":491,"title":{},"body":{"controllers/AppController.html":{}}}],["works",{"_index":529,"title":{},"body":{"controllers/AppController.html":{}}}],["write",{"_index":100,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["writestream",{"_index":625,"title":{},"body":{"controllers/AppController.html":{}}}],["writestream.write(msg.file",{"_index":627,"title":{},"body":{"controllers/AppController.html":{}}}],["wrong",{"_index":1545,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["xstate",{"_index":159,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"dependencies.html":{}}}],["yes",{"_index":1246,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["you'd",{"_index":1700,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":686,"title":{},"body":{"modules/AppModule.html":{},"modules/MongoConnectionModule.html":{},"modules/StateMachineModules.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/APISyncComplete.html":{"url":"interfaces/APISyncComplete.html","title":"interface - APISyncComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  APISyncComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/interfaces/apiSync.interface.ts:144\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    // Target machine on API Sync\n    apimachine?: string;\n    // Method for stdout\n    outresponse?: string;\n    // Method for stderr maybe we don't use this. Only set error to true\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/APISyncMessage.html":{"url":"interfaces/APISyncMessage.html","title":"interface - APISyncMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  APISyncMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            commands\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            keepalive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            satelliteid\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            taskId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tasks\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trees\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commands\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commands:         ServiceCommand[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ServiceCommand[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepalive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keepalive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        satelliteid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        satelliteid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taskId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        taskId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tasks:         SatelliteTask[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SatelliteTask[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trees\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trees:         DependencyTree[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DependencyTree[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    // Target machine on API Sync\n    apimachine?: string;\n    // Method for stdout\n    outresponse?: string;\n    // Method for stderr maybe we don't use this. Only set error to true\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/APISyncService.html":{"url":"interfaces/APISyncService.html","title":"interface - APISyncService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  APISyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        commandStream\n                                    \n                                \n                                \n                                    \n                                        fileStream\n                                    \n                                \n                                \n                                    \n                                        streamQueue\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        commandStream\n                        \n                    \n                \n            \n            \n                \ncommandStream(upstream: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/apiSync.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    upstream\n                                    \n                                                Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileStream\n                        \n                    \n                \n            \n            \n                \nfileStream(upstream: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/apiSync.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    upstream\n                                    \n                                                Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamQueue\n                        \n                    \n                \n            \n            \n                \nstreamQueue(upstream: Observable, metadata: Metadata)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/apiSync.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    upstream\n                                    \n                                                Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                                Metadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    // Target machine on API Sync\n    apimachine?: string;\n    // Method for stdout\n    outresponse?: string;\n    // Method for stderr maybe we don't use this. Only set error to true\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/APISyncStateMachineObject.html":{"url":"interfaces/APISyncStateMachineObject.html","title":"interface - APISyncStateMachineObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  APISyncStateMachineObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/connection.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fsm\n                                        \n                                \n                                \n                                        \n                                            logger\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fsm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fsm:     Interpreter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Interpreter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logger:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ClientDuplexStream, Metadata } from \"grpc\";\nimport { Satellite } from \"../mongoConnection/schemas/satellite.schema\";\nimport { Interpreter } from \"xstate\";\n\nimport { APISyncMessage, SatelliteMessage } from \".\";\n\nexport interface SatelliteConnection {\n    connected: boolean;\n    stream: SciDapDuplexStream;\n    stateMachines: { [key: string]: APISyncStateMachineObject };\n    tasks: string[];\n    priorityTasks: string[];\n    maxTasks: number;\n    satInformation: Satellite;\n    keepAliveTimer?: NodeJS.Timeout;\n    keepAlivePingTimer?: NodeJS.Timeout;\n    // used for testing\n    receievedResponse?: boolean;\n}\n\nexport interface APISyncStateMachineObject {\n    fsm: Interpreter;\n    logger: any;\n}\n\nexport interface SciDapDuplexStream extends ClientDuplexStream {\n    metadata: Metadata;\n}\n\nexport interface MessageToSatellite extends APISyncMessage {\n    satelliteId: string;\n}\n\nexport interface LocalFiles {\n    show: boolean;\n    collection: {\n        name: string;\n        path: string;\n    }[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbsoluteUrlSettings.html":{"url":"classes/AbsoluteUrlSettings.html","title":"class - AbsoluteUrlSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbsoluteUrlSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/satellite.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                cert\n                            \n                            \n                                    Optional\n                                fixedIp\n                            \n                            \n                                inactiveTimerMS\n                            \n                            \n                                    Optional\n                                key\n                            \n                            \n                                origin\n                            \n                            \n                                    Optional\n                                providedCerts\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        cert\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        fixedIp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inactiveTimerMS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        origin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        providedCerts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SatelliteDocument = Satellite & Document;\n\ninterface RemoteModule {\n    moduleId: string;\n    path: string;\n}\nclass PublicInformation {\n    @Prop()\n    publicData: boolean;\n\n    @Prop()\n    connected: boolean;\n\n    @Prop()\n    domain: string;\n\n    @Prop()\n    common_project_id: string;\n\n    @Prop({ type: Object })\n    remoteModules: RemoteModule[];\n\n    @Prop()\n    absoluteUrl: string;\n\n    @Prop()\n    localip: string;\n\n    @Prop()\n    port: string;\n\n    @Prop()\n    version?: string;\n\n    @Prop()\n    newAbsoluteUrl?: string;\n\n    @Prop()\n    expiry_time_ms: number;\n\n    @Prop()\n    ownerProvidedUrl?: string;\n\n    @Prop()\n    maxSimultaneousTasks?: number;\n\n    @Prop()\n    publicIp?: string;\n}\n\nclass AbsoluteUrlSettings {\n    @Prop()\n    origin: string; // automatic, fixed, owner\n\n    @Prop()\n    inactiveTimerMS: number; // Time in MS before Satellite gets unassigned\n\n    @Prop()\n    providedCerts?: boolean; // Does the owner provide their own certs\n\n    @Prop()\n    key?: string;\n\n    @Prop()\n    cert?: string;\n\n    @Prop()\n    fixedIp?: boolean;\n}\n\n\n@Schema({ collection: 'satellites' })\nexport class Satellite {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    labId: string;\n\n    @Prop()\n    type: string;\n\n    @Prop({ type: Object })\n    public: PublicInformation;\n\n    @Prop()\n    token: string;\n\n    @Prop({ type: Object })\n    auth: any;\n\n    @Prop({ type: Object })\n    sync: any;\n\n    @Prop({ type: Object })\n    absoluteUrlSettings: AbsoluteUrlSettings;\n\n    @Prop({ type: Object })\n    satMachines: any;\n\n    @Prop({ type: Object })\n    satTasks: any;\n\n    @Prop({ type: Object })\n    apiMachines: any;\n\n    @Prop()\n    scidapHome: string;\n\n    @Prop({ type: Array })\n    configOverwrites: any[];\n}\n\nexport const SatelliteSchema = SchemaFactory.createForClass(Satellite);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiSyncMachine.html":{"url":"classes/ApiSyncMachine.html","title":"class - ApiSyncMachine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiSyncMachine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/apiSyncMachines.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                applyTo\n                            \n                            \n                                    Optional\n                                commands\n                            \n                            \n                                config\n                            \n                            \n                                inUse\n                            \n                            \n                                options\n                            \n                            \n                                transitions\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        commands\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MachineCommand[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Config\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inUse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Options\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transitions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, of: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:91\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type ApiSyncMachineDocument = ApiSyncMachine & Document;\n\nclass Type {\n    @Prop()\n    target?: string;\n\n    @Prop()\n    cond?: string;\n\n    @Prop()\n    actions?: string[];\n}\n\nclass State {\n    @Prop()\n    entry?: string[];\n\n    @Prop()\n    exit?: string[];\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Config {\n    @Prop()\n    id: string;\n\n    @Prop()\n    initial: string;\n\n    @Prop({type: Object})\n    context: {\n        [key: string]: any;\n    };\n\n    @Prop({type: Object, of: State})\n    states: {\n        [key: string]: State;\n    }\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Options {\n    @Prop({type: Object, of: String})\n    actions?: {\n        [key: string]: string;\n    }\n\n    @Prop({type: Object, of: String})\n    guards?: {\n        [key: string]: string;\n    }\n}\n\nexport class MachineCommand {\n    @Prop()\n    target: string;\n\n    @Prop()\n    label: string;\n\n    @Prop()\n    args?: string;\n\n    @Prop()\n    style?: string;\n}\n\n@Schema({ collection: 'api_sync_machines', minimize: false })\nexport class ApiSyncMachine {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    applyTo: string[];\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    type: string;\n\n    @Prop()\n    commands?: MachineCommand[];\n\n    @Prop()\n    config: Config;\n    \n    @Prop()\n    options: Options;\n\n    @Prop({type: Object, of: String})\n    transitions: {\n        [key: string]: string;\n    };\n}\n\nexport const ApiSyncMachineSchema = SchemaFactory.createForClass(ApiSyncMachine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiSyncMachinesService.html":{"url":"injectables/ApiSyncMachinesService.html","title":"injectable - ApiSyncMachinesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiSyncMachinesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/apiSyncMachines.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getInitialMachines\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_apiSyncMachineModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/mongoConnection/apiSyncMachines.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _apiSyncMachineModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getInitialMachines\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitialMachines()\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/apiSyncMachines.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\nimport { ApiSyncMachine, ApiSyncMachineDocument } from './schemas/apiSyncMachines.schema';\n\n@Injectable()\nexport class ApiSyncMachinesService {\n    constructor(\n        @InjectModel(ApiSyncMachine.name)\n        private _apiSyncMachineModel: Model,\n    ) {}\n\n    async getInitialMachines(): Promise {\n        return await (await this._apiSyncMachineModel.find({ inUse: true }).exec()).map((d) => d.toObject());\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _mergeDefaultConfigWithCustom\n                            \n                            \n                                    Async\n                                commandStream\n                            \n                            \n                                    Async\n                                fileUpload\n                            \n                            \n                                processMessagesFromMainService\n                            \n                            \n                                runKeepAliveTimer\n                            \n                            \n                                    Async\n                                streamQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _mergeDefaultConfigWithCustom\n                        \n                    \n                \n            \n            \n                \n                    \n                    _mergeDefaultConfigWithCustom(machines: any[], customList: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app.controller.ts:363\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    machines\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    customList\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        commandStream\n                        \n                    \n                \n            \n            \n                \n                    \n                    commandStream(requestStream, callback)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(ExceptionFilter)@GrpcStreamCall('APISyncService', 'CommandStream')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:326\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestStream\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fileUpload\n                        \n                    \n                \n            \n            \n                \n                    \n                    fileUpload(requestStream, callback)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(ExceptionFilter)@GrpcStreamCall('APISyncService', 'FileStream')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:299\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestStream\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processMessagesFromMainService\n                        \n                    \n                \n            \n            \n                \nprocessMessagesFromMainService(target: string, action: string, message: string, satConnection: SatelliteConnection)\n                \n            \n\n\n            \n                \n                    Defined in src/app.controller.ts:349\n                \n            \n\n\n            \n                \n                    Processes a single message from Satellite by sending it to a relevant State Machine\n on API-Sync\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the service to send to\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the action to run\n\n                                    \n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Arguments to send to the function\n\n                                    \n                                \n                                \n                                    satConnection\n                                    \n                                                SatelliteConnection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Information about the Satellite Connection\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runKeepAliveTimer\n                        \n                    \n                \n            \n            \n                \nrunKeepAliveTimer(satConnection: SatelliteConnection)\n                \n            \n\n\n            \n                \n                    Defined in src/app.controller.ts:287\n                \n            \n\n\n            \n                \n                    This function runs a timer that if it isn't called in that time it breaks the connection and restarts it\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    satConnection\n                                    \n                                                SatelliteConnection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Connection to the given satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        streamQueue\n                        \n                    \n                \n            \n            \n                \n                    \n                    streamQueue(requestStream: SciDapDuplexStream, metadata: Metadata)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@UseFilters(ExceptionFilter)@GrpcStreamCall('APISyncService', 'StreamQueue')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestStream\n                                    \n                                                SciDapDuplexStream\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                                Metadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseFilters, UseGuards } from '@nestjs/common';\nimport { GrpcStreamCall } from '@nestjs/microservices';\nimport { ConfigService } from '@nestjs/config';\nimport { HttpService } from '@nestjs/axios';\nimport { createWriteStream, rename, promises } from 'fs';\nimport { catchError, filter, tap } from 'rxjs/operators';\nimport { merge, of } from 'rxjs';\nconst path = require('path');\nconst crypto = require(\"crypto\");\nconst fs = require('fs');\n\nimport { AuthGuard } from './app.guard';\nimport { AppService } from './app.service';\nimport { ExceptionFilter } from './rpc-connection.filter';\nimport { StateMachinesService } from './stateMachines/stateMachines.service';\nimport { SatelliteService } from './mongoConnection/satellite.service';\nimport { SubDomainService } from './mongoConnection/subDomain.service';\nimport { ApiSyncMachinesService } from './mongoConnection/apiSyncMachines.service';\n\nimport { MessageToSatellite, SatelliteConnection, SatelliteMessage, SatelliteOutput, SciDapDuplexStream } from './interfaces';\nimport Log from './lib/logger';\nimport { Metadata } from 'grpc';\nimport { SatelliteMachineService } from './mongoConnection/satelliteMachines.service';\nimport { SatelliteTasksService } from './mongoConnection/satelliteTasks.service';\n\nconst fsPromises = fs.promises;\nconst pingTimer = 30000; // Every 30s it will send a ping\nconst pingKillTimer = 60000; // If 1 minute goes by without a response it will close the connection\n\n@Controller()\nexport class AppController {\n    // Stores Satellite Connections by Id\n\n    constructor(\n        private _appService: AppService,\n        private _stateMachineService: StateMachinesService,\n        private _satelliteService: SatelliteService,\n        private _subDomainService: SubDomainService,\n        private _httpService: HttpService,\n        private _configService: ConfigService,\n        private _apiSyncMachinesService: ApiSyncMachinesService,\n        private _satelliteMachineService: SatelliteMachineService,\n        private _satelliteTasksService: SatelliteTasksService,\n        ) {\n        // Create a state machine on API-Sync relevant to a Satellite\n        this._appService.createFSM.subscribe(async ({ config, options, transitions, satelliteId, callback }) => {\n            if (!satelliteId) satelliteId = 'test_satellite';\n            const { interpreted, logger } = await this._appService.setupStateMachine(config, options, transitions, satelliteId);\n            this._appService.satConnections[satelliteId].stateMachines[config.id] = { fsm: interpreted, logger };\n            if (callback) {\n                callback();\n            }\n        });\n\n        this._appService.removeFSM.subscribe(({ machine, satelliteId, callback }) => {\n            if (!satelliteId) satelliteId = 'test_satellite';\n            try {\n                delete this._appService.satConnections[satelliteId].stateMachines[machine];\n                if (callback) {\n                    callback(null);\n                }\n            } catch (err) {\n                const message = `Error removing ${machine} from ${satelliteId}: ${err}`;\n                Log.error(message);\n                if (callback) {\n                    callback(message);\n                }\n            }\n        });\n\n        merge(this._appService.sendToSat$, this._stateMachineService.satStream$).pipe(\n            tap((m) => Log.info(`Sending ${!!m.trees?.length ? 'Trees' : ''} ${!!m.tasks?.length ? 'Tasks' : ''} to ${m.satelliteid}`)),\n        ).subscribe((message) => {\n            let { satelliteid, trees, tasks, commands } = message;\n            if (!satelliteid) satelliteid = 'test_satellite';\n            try {\n                this._appService.satConnections[satelliteid].stream.write({ tasks, trees, commands });\n            } catch (err) {\n                Log.error(`Failed to send message to ${satelliteid}: ${err}`);\n            }\n        });\n\n        merge(this._stateMachineService.sendEvent$, this._appService.sendToAPI)\n            .pipe(\n                tap(({ to, type, delay, satelliteId }) => Log.info(`${satelliteId} is attempting to send ${type} to ${to} ${!delay ? '' : `with ${delay}ms delay`}`)),\n                filter(({ to, satelliteId }) => Object.keys(this._appService.satConnections[satelliteId].stateMachines).includes(to)),\n            )\n            .subscribe(async ({ to, type, delay, satelliteId }) => {\n                if (delay) {\n                    await new Promise((r) => setTimeout(() => r(true), delay));\n                    Log.info(`${satelliteId} is sending ${type} to ${to}`);\n                    this._appService.satConnections[satelliteId].stateMachines[to].fsm.send({ type });\n                } else {\n                    Log.info(`${satelliteId} is sending ${type} to ${to}`);\n                    this._appService.satConnections[satelliteId].stateMachines[to].fsm.send({ type });\n                }\n            });\n        \n        this._appService.triggerContext\n            .pipe(\n                tap(({ to, satelliteId, method }) => Log.info(`${satelliteId} is attempting to trigger ${method} on ${to}`)),\n            )\n            .subscribe(async ({ to, satelliteId, method, callback, args }) => {\n                const err: string = await new Promise((resolve) => {\n                    try {\n                        const func = this._appService.satConnections[satelliteId].stateMachines[to].fsm.state.context[method];\n                        if (!func) throw new Error(`${method} not found`);\n                        func(args);\n                        resolve(null);\n                    } catch (err) {\n                        const msg = `Error running ${method} on ${satelliteId}-${to}: ${err}`;\n                        resolve(msg);\n                    }\n                });\n                if (callback) {\n                    callback(err);\n                }\n            });\n\n        this._stateMachineService.storeValue$\n            .pipe(\n                tap(({ to, key, satelliteId }) => Log.info(`${satelliteId} is attempting to store ${key} on ${to}`)),\n                filter(({ to, satelliteId }) => Object.keys(this._appService.satConnections[satelliteId].stateMachines).includes(to)),\n            )\n            .subscribe(async ({ to, key, value, satelliteId }) => {\n                Log.info(`${satelliteId} is storing ${key} on ${to}`);\n                this._appService.satConnections[satelliteId].stateMachines[to].fsm.state.context[key] = value;\n            });\n\n    }\n\n    @UseGuards(AuthGuard) // Guards the route\n    @UseFilters(ExceptionFilter) // Throws exceptions when auth fails\n    @GrpcStreamCall('APISyncService', 'StreamQueue')\n    async streamQueue(requestStream: SciDapDuplexStream, metadata: Metadata) {\n        const jwt = requestStream.metadata.get('jwt')[0];\n        // const localIps = requestStream.metadata.get('ips')[0]; // Still need to be parsed\n        const satInformation = await this._satelliteService.getByToken(jwt);\n        Log.info(`Connection to Satellite ${satInformation._id} Open`);\n\n        const publicIP = requestStream.getPeer();\n        Log.info(`External IP address: ${publicIP}`);\n        // Log.info(`Local IPs ${JSON.parse(localIps)}`);\n        if (!await this._satelliteService.updateConnectedStatus(satInformation._id, true, publicIP)) {\n            requestStream.end();\n        }\n\n        // let key: string, cert: string;\n        // // if (process.env.API_ENV === 'local') {\n        // //     const response = await this._subDomainService.getDevInfo();\n        // //     const { certs } = response;\n        // //     key = await (await fsPromises.readFile(certs.key)).toString();\n        // //     cert = await (await fsPromises.readFile(certs.cert)).toString();\n        // // } else \n        // if (satInformation.absoluteUrlSettings.providedCerts) {\n        //     key = satInformation.absoluteUrlSettings.key;\n        //     cert = satInformation.absoluteUrlSettings.cert;\n        // } else {\n        //     // If we are working in our local environment we need test certs\n        //     let satId = ['test', 'local'].includes(process.env.API_ENV) ? 'test' : satInformation._id;\n        //     const response = await this._subDomainService.getBySatId(satId);\n        //     const { certs } = response;\n        //     const absKey = path.join(this._configService.get('cert_root'), certs.key);\n        //     const absCert = path.join(this._configService.get('cert_root'), certs.ca);\n        //     key = await (await fsPromises.readFile(absKey)).toString();\n        //     cert = await (await fsPromises.readFile(absCert)).toString();\n\n        //     if (process.env.API_ENV !== 'local') {\n        //         this._httpService.post('http://localhost:3001/digital-ocean-urls', { sat_id: satId, local_ip: localIps }).subscribe((result) => {\n\n        //         }, (err) => {\n        //             console.error(err.message)\n        //         });\n        //         // await this._appService.handleIPs(JSON.parse(localIps), satInformation, response);\n        //     }\n        // }\n\n        const newConnection: SatelliteConnection = {\n            stream: requestStream,\n            stateMachines: {  },\n            connected: true,\n            tasks: [],\n            priorityTasks: [],\n            maxTasks: 1,\n            satInformation,\n        };\n\n        requestStream.write({ keepalive: true });\n        // This starts the interval on which to send pings to the client\n        newConnection.keepAlivePingTimer = setInterval(() => {\n            Log.debug(`Ping Sent ${newConnection.satInformation._id}`);\n            requestStream.write({ keepalive: true });\n        }, pingTimer);\n        // This starts the timer that will check to see if we should end this connection\n        this.runKeepAliveTimer(newConnection);\n\n        // This is for testing, we can change the way all of this works\n        this._appService.satConnections[satInformation._id] = newConnection;\n        Log.debug('Getting Default Configs');\n        const defaultConfig = {\n            apiMachines: [],\n            satMachines: [],\n            satTasks: [],\n        };\n        try {\n            const configOverwrites = satInformation.configOverwrites || [];\n            const apiMachines = await this._apiSyncMachinesService.getInitialMachines();\n            const satMachines = await this._satelliteMachineService.getInitialMachines();\n            const satTasks = await this._satelliteTasksService.getInitialTasks();\n            defaultConfig.apiMachines = this._mergeDefaultConfigWithCustom(apiMachines, configOverwrites);\n            defaultConfig.satMachines = this._mergeDefaultConfigWithCustom(satMachines, configOverwrites);\n            defaultConfig.satTasks = this._mergeDefaultConfigWithCustom(satTasks, configOverwrites);\n        } catch (err) {\n            Log.error(`Failed to get Default Configs: ${err}`);\n        }\n        Log.debug(`Amount of Default API-Machines: ${defaultConfig.apiMachines.length}, Sat-Machines: ${defaultConfig.satMachines.length}, Sat Tasks: ${defaultConfig.satTasks}`);\n        const specificConfig = {\n            apiMachines: !!satInformation.apiMachines ? satInformation.apiMachines : [],\n            satMachines: !!satInformation.satMachines ? satInformation.satMachines : [],\n            satTasks: !!satInformation.satTasks ? satInformation.satTasks : [],\n\n        };\n        Log.debug(`Amount of Specific API-Machines: ${specificConfig.apiMachines.length}, Sat-Machines: ${specificConfig.satMachines.length}, Sat Tasks: ${specificConfig.satTasks}`);\n\n        const apiMachines = [...defaultConfig.apiMachines, ...specificConfig.apiMachines];\n        let counter = 0;\n        for (let machine of apiMachines) {\n            try {\n                await new Promise((resolve) => {\n                    this._appService.createFSM.next({ ...machine, satelliteId: satInformation._id, callback: () => resolve(true) });\n                });\n                Log.debug(`Successfully started ${machine.config?.id} on API`);\n                counter++;\n            } catch (err) {\n                Log.error(`Failed to start ${machine.config?.id}`);\n            }\n        }\n        Log.debug(`Successfully started ${counter} API-Machines`);\n\n        const trees = [...defaultConfig.satMachines, ...specificConfig.satMachines];\n        const tasks = [...defaultConfig.satTasks, ...specificConfig.satTasks];\n        requestStream.write({ tasks, trees, satelliteid: satInformation._id });\n\n        requestStream.on('data', (msg: SatelliteMessage) => {\n            try {\n                if (msg.taskid === 'test') {\n                    this._appService.satConnections[satInformation._id].receievedResponse = true;\n                }\n                // The Senders all need a way to handle communication.\n                //  Potentially each service needs a matching machine on API Sync that handles their information\n                if (msg.sender === 'main_satellite') {\n                    msg.messages.forEach((message) => {\n                        this.processMessagesFromMainService(msg.target, message.action, message.body, newConnection);\n                    });\n                }\n                if (msg.keepalive) {\n                    this.runKeepAliveTimer(newConnection);\n                }\n\n            } catch (err) {\n                Log.error(`Failed to parse message from SATELLITE ID: ${err}`);\n                Log.error(`Message: ${msg}`);\n            }\n        });\n        requestStream.on('end', async () => {\n            clearTimeout(newConnection.keepAliveTimer);\n            clearInterval(newConnection.keepAlivePingTimer);\n            const satId = newConnection.satInformation._id;\n            try {\n                Log.info(`Closing connection to ${satId}`);\n                const timeToExpire = newConnection.satInformation.absoluteUrlSettings.inactiveTimerMS;\n                const expiryDate = await this._satelliteService.updateTime(satId, true, timeToExpire);\n                await this._satelliteService.updateConnectedStatus(satId, false);\n                Log.debug(`${satId} expires on ${expiryDate.toUTCString()}`);\n            } catch (err) {\n                Log.error(`Failed to update Expiry Time: ${err.message}`);\n            } finally {\n                delete this._appService.satConnections[satId];\n            }\n        })\n    }\n\n    /**\n     * This function runs a timer that if it isn't called in that time it breaks the connection and restarts it\n     * @param satConnection Connection to the given satellite\n     */\n    runKeepAliveTimer(satConnection: SatelliteConnection) {\n        clearTimeout(satConnection.keepAliveTimer);\n        satConnection.keepAliveTimer = setTimeout(() => {\n            Log.info(`Did not recieve Keep Alive Ping from ${satConnection.satInformation._id}`);\n            clearInterval(satConnection.keepAlivePingTimer);\n            satConnection.stream.end();\n        }, pingKillTimer);\n    }\n    \n\n    @UseFilters(ExceptionFilter) // Throws exceptions when auth fails\n    @GrpcStreamCall('APISyncService', 'FileStream')\n    async fileUpload(requestStream, callback) {\n        const tempName = crypto.randomBytes(20).toString('hex');\n        let fileName;\n        const tempPath = path.join(__dirname, '/tmp/');\n        const finalPath = path.join(__dirname, '/final/');\n        await promises.mkdir(tempPath, { recursive: true });\n        await promises.mkdir(finalPath, { recursive: true });\n        await promises.open(tempPath + tempName, 'w');\n        const writeStream = createWriteStream(tempPath+ tempName);\n        requestStream.on('data', (msg) => {\n            writeStream.write(msg.file);\n            if (msg.file_name && !fileName) {\n                fileName = msg.file_name\n            }\n        });\n\n        requestStream.on('end', (msg) => {\n            console.log('File Finished');\n            callback(null, { type: 'SERVER', status: 'SUCCESS' });\n            rename(tempPath + tempName, finalPath + fileName, () => {\n                console.log('Success');\n            });\n        });\n    }\n\n    @UseFilters(ExceptionFilter) // Throws exceptions when auth fails\n    @GrpcStreamCall('APISyncService', 'CommandStream')\n    async commandStream(requestStream, callback) {\n        requestStream.on('data', (msg: SatelliteOutput) => {\n            try {\n                this._appService.satConnections[msg.satellite].stateMachines[msg.targetmachine].fsm.state.context[msg.method](msg.output);\n            } catch (err) {\n                Log.error(`${msg.satellite} Failed to Send ${msg.method} message to ${msg.targetmachine}: ${err}`);\n                Log.debug(msg.output);\n            }\n        });\n\n        requestStream.on('end', (msg) => {\n\n        });\n    }\n\n    /**\n     * Processes a single message from Satellite by sending it to a relevant State Machine\n     *  on API-Sync\n     * @param target Name of the service to send to\n     * @param action Name of the action to run\n     * @param message Arguments to send to the function\n     * @param satConnection Information about the Satellite Connection\n     */\n    processMessagesFromMainService(target: string, action: string, message: string, satConnection: SatelliteConnection) {\n        if (!satConnection.stateMachines[target]) {\n            Log.error(`No State Machine named ${target}, failed to send: ${action} - ${message}`);\n            return;\n        }\n        try {\n            // Locate the action in the machine\n            const upAction = action.split('.').reduce((acum, curr) => acum[curr], satConnection.stateMachines[target].fsm) as (arg: string) => void;\n            upAction(message);\n        } catch (err) {\n            Log.error(`Failed to run ${action} in ${target}`);\n        }\n    }\n\n    private _mergeDefaultConfigWithCustom(machines: any[], customList: any[]): any[] {\n        const updated = [];\n        machines.forEach((machine) => {\n            const custom = customList.find((i) => i.id === machine._id);\n            if (!custom) {\n                updated.push(machine);\n                return;\n            }\n            const keys = Object.keys(custom).filter((k) => !['id', 'number'].includes(k));\n            keys.forEach((k) => {\n                let accessor = machine;\n                const list = k.split('-');\n                const last = list.pop();\n                list.forEach((i) => {\n                    accessor = accessor[i];\n                });\n                accessor[last] = custom[k];\n            });\n            // We only expect number to be used with API-Sync Machines\n            if (!!custom.number) {\n                const name = machine.config.id;\n                const number = custom.number || 1;\n                for (let cnt = 0; cnt \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nMongoConnectionModule\n\nMongoConnectionModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nMongoConnectionModule->AppModule\n\n\n\n\n\nAppService \n\nAppService \n\nAppService  -->\n\nAppModule->AppService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MongoConnectionModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { HttpModule } from '@nestjs/axios';\nimport { ConfigService, ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ScheduleModule } from '@nestjs/schedule';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { SatInterfaceModule } from './satInterface/satInterface.module';\nimport { StateMachineModules } from './stateMachines/stateMachines.module';\nimport { MongoConnectionModule } from './mongoConnection/mongoConnection.module';\nimport configuration from '../configuration';\n\n@Module({\n    imports: [\n        forwardRef(() => StateMachineModules),\n        forwardRef(() => SatInterfaceModule),\n        ScheduleModule.forRoot(),\n        ConfigModule.forRoot({\n            isGlobal: true,\n            load: [configuration],\n        }),\n        MongooseModule.forRootAsync({\n            imports: [ConfigModule],\n            useFactory: async (configService: ConfigService) => ({\n                uri: configService.get('mongoDB_URI'),\n            }),\n            inject: [ConfigService],\n        }),\n        MongoConnectionModule,\n        HttpModule,\n    ],\n    controllers: [AppController],\n    providers: [AppService],\n    exports: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createFSM\n                            \n                            \n                                    Public\n                                removeFSM\n                            \n                            \n                                    Public\n                                satConnections\n                            \n                            \n                                    Public\n                                sendToAPI\n                            \n                            \n                                    Public\n                                sendToSat$\n                            \n                            \n                                    Public\n                                triggerContext\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                asyncheartbeat\n                            \n                            \n                                    Public\n                                    Async\n                                seperateConfigFiles\n                            \n                            \n                                    Public\n                                    Async\n                                setupStateMachine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_stateMachineService: StateMachinesService, _satelliteService: SatelliteService, _tasksQueueService: TasksQueueService, _samplesService: SamplesService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _stateMachineService\n                                                  \n                                                        \n                                                                        StateMachinesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _satelliteService\n                                                  \n                                                        \n                                                                        SatelliteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _tasksQueueService\n                                                  \n                                                        \n                                                                        TasksQueueService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _samplesService\n                                                  \n                                                        \n                                                                        SamplesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        asyncheartbeat\n                        \n                    \n                \n            \n            \n                \n                    \n                    asyncheartbeat()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_5_SECONDS)\n                \n            \n\n            \n                \n                    Defined in src/app.service.ts:63\n                \n            \n\n\n            \n                \n                    Heartbeat for API-Sync that checks for new tasks in queue for connected satellites\n If a satellite has room for a task it checks the queue,\n If not it checks if the current task has been updated\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        seperateConfigFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    seperateConfigFiles()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setupStateMachine\n                        \n                    \n                \n            \n            \n                \n                    \n                    setupStateMachine(states: any, options: any, transitions: any, satelliteId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    states\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    transitions\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    satelliteId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createFSM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeFSM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject void }>()\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        satConnections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendToAPI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendToSat$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        triggerContext\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { Subject } from 'rxjs';\nconst fs = require('fs');\nconst path = require('path');\n\nimport { APISyncMessage, CreateAPIMachine, SatelliteConnection, SendEvent, TriggerContext } from './interfaces';\nimport { StateMachinesService } from './stateMachines/stateMachines.service';\nimport Log from './lib/logger';\nimport { SatelliteService } from './mongoConnection/satellite.service';\nimport { TasksQueueService } from './mongoConnection/tasksQueue.service';\nimport { SamplesService } from './mongoConnection/samples.service';\nimport { TasksQueueDocument } from './mongoConnection/schemas/task.schema';\n\n@Injectable()\nexport class AppService {\n    public sendToSat$ = new Subject();\n    public sendToAPI = new Subject();\n    public triggerContext = new Subject();\n    public createFSM = new Subject();\n    public removeFSM = new Subject void }>()\n    public satConnections: { [key: string]: SatelliteConnection } = {};\n\n    constructor(\n        @Inject(forwardRef(() => StateMachinesService))\n        private _stateMachineService: StateMachinesService,\n        private _satelliteService: SatelliteService,\n        private _tasksQueueService: TasksQueueService,\n        private _samplesService: SamplesService,\n        ) {\n        this._stateMachineService.dbStream$.subscribe((msg) => {\n            console.log('Write to db', msg);\n        });\n    }\n\n    // Seperate Config File Test\n    public async seperateConfigFiles(): Promise {\n        const loc = path.join(__dirname, process.env.TEST_FILE);\n        const machines = [];\n        return new Promise((resolve, reject) => {\n            fs.readFile(loc, 'utf-8', (err, data) => {\n                if (err) {\n                    console.error(err);\n                    reject(err);\n                }\n                // console.log(data);\n                const configs = JSON.parse(data);\n                // console.log(configs)\n                Object.keys(configs).forEach((key) => {\n                    machines.push(configs[key]);\n                });\n                resolve(machines);\n            });\n        });\n   }\n\n    /**\n     * Heartbeat for API-Sync that checks for new tasks in queue for connected satellites\n     *  If a satellite has room for a task it checks the queue,\n     *  If not it checks if the current task has been updated\n     */\n    @Cron(CronExpression.EVERY_5_SECONDS)\n    async asyncheartbeat() {\n        try {\n            const satKeys = Object.keys(this.satConnections);\n            for (const key of satKeys) {\n                const satConnection = this.satConnections[key];\n                const satId = satConnection.satInformation._id;\n                Log.debug(`Checking the Queue for satellite ${satId}`);\n                // Get all the regular queue and priority queue tasks for the satellite\n                const { queue, priorityQueue } = await this._tasksQueueService.getBySatId(satId);\n                // Get all the FSMs that run tasks on the current satellite\n                const taskRunners = Object.keys(satConnection.stateMachines)\n                    .filter((k) => k.includes('task_queue'))\n                    .map((k) => satConnection.stateMachines[k].fsm);\n                // Get all the waiting machine on the satellite\n                const waitingMachines = taskRunners.filter((fsm) => fsm.state.value === 'waiting');\n                Log.debug(`${waitingMachines.length} machines currently waiting out of ${taskRunners.length}`);\n                if (waitingMachines.length  fsm.state.value !== 'waiting')\n                    .map((fsm) => fsm.state.context.taskId);\n\n                let taskCnt = 0, priorityCnt = 0;\n                const sortedTasks = queue\n                    .filter((task) => {\n                        const res = !currentTasks.includes(task._id);\n                        if (!res) taskCnt++;\n                        return res; \n                    })\n                    .filter((task) => task.action !== 'subscription_cancelled')\n                    .sort((a, b) => a.date.modified - b.date.modified);\n                const sortedPriorityTasks = priorityQueue\n                    .filter((task) => {\n                        const res = !currentTasks.includes(task._id);\n                        if (!res) priorityCnt++;\n                        return res;\n                    })\n                    .filter((task) => task.action !== 'subscription_cancelled')\n                    .sort((a, b) => a.date.modified - b.date.modified);\n\n                for (const machine of waitingMachines) {\n                    let task: TasksQueueDocument;\n                    const half = Math.floor(satConnection.maxTasks / 2);\n                    // If half the tasks are standard AND there are priority tasks add priority\n                    while ((sortedTasks.length > 0 || sortedPriorityTasks.length > 0) || !task) {\n                        let checking: TasksQueueDocument;\n                        let priority = false;\n                        if ((taskCnt >= half || sortedTasks.length === 0) && sortedPriorityTasks.length > 0) {\n                            checking = sortedPriorityTasks.shift();\n                            priority = true;\n                        } else {\n                            checking = sortedTasks.shift();\n                            priority = false;\n                        }\n                        if (!checking) break;\n                        const sampleId = checking.payload.get('sample_id');\n                        // Check to make sure the upstreams are ready\n                        const upstreamReady = await this._samplesService.checkUpstreamOutputs(sampleId);\n                        // If they are save this task as the one to add to the task Runner and increment regular task cnt\n                        if (upstreamReady) {\n                            task = checking;\n                            if (priority) priorityCnt++;\n                            else taskCnt++;\n                            break;\n                        }\n                    }\n                    if (task) {\n                        Log.info(`Sending ${task._id} to ${machine.state.context.id}`);\n                        machine.state.context.startProcess(task._id);\n                    }\n                }\n            }\n        } catch (err) {\n            Log.error(`Error with heartbeat: ${err}`);\n        }\n    }\n    \n\n   public async setupStateMachine(states: any, options: any, transitions: any, satelliteId: string) {\n       const fsm = await this._stateMachineService.createStateMachine(states, options, transitions, satelliteId);\n       return fsm;\n   }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(_satelliteService: SatelliteService)\n                    \n                \n                        \n                            \n                                Defined in src/app.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _satelliteService\n                                                  \n                                                        \n                                                                        SatelliteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app.guard.ts:15\n                \n            \n\n\n            \n                \n                    This is the check for verifying a satellite\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        contains our metadata\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { RpcException } from '@nestjs/microservices';\n\nimport { SatelliteService } from './mongoConnection/satellite.service';\nimport Log from './lib/logger';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor (private _satelliteService: SatelliteService) {}\n    /**\n     * This is the check for verifying a satellite\n     * @param context contains our metadata\n     */\n    async canActivate(context: ExecutionContext): Promise {\n        try {\n            const jwt = context.getArgs()[0].metadata.get('jwt')[0];\n            // if (process.env.NODE_ENV !== 'development') {\n            //     //TODO: Potentially add more verification checks here\n            //     await this.authService.verify(jwt);\n            // }\n            await this._satelliteService.canLink(jwt);\n            return true;\n        } catch (err) {\n            Log.info(err);\n            throw new RpcException('BAD AUTH');\n        }\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CWL.html":{"url":"classes/CWL.html","title":"class - CWL","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CWL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/cwl.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                date\n                            \n                            \n                                description\n                            \n                            \n                                git\n                            \n                            \n                                metadata\n                            \n                            \n                                servicetags\n                            \n                            \n                                source\n                            \n                            \n                                tags\n                            \n                            \n                                upstream\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Description\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        git\n                        \n                    \n                \n            \n                \n                    \n                        Type :         git\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Metadata[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        servicetags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upstream\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:80\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type CWLDocument = CWL & Document;\n\nclass Date {\n    @Prop()\n    modified: number;\n}\n\nclass Description {\n    @Prop()\n    author: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    info: string;\n\n    @Prop()\n    label: string;\n\n    @Prop()\n    url: string;\n\n    @Prop()\n    version: string;\n}\n\nclass git {\n    @Prop()\n    message: string;\n\n    @Prop()\n    path: string;\n\n    @Prop()\n    remote: string;\n\n    @Prop()\n    sha: string;\n\n    @Prop()\n    local_path: string;\n}\n\nclass Metadata {\n    @Prop()\n    path: string;\n\n    @Prop()\n    source: string;\n}\n\n@Schema({ collection: 'CWL' })\nexport class CWL {\n    @Prop()\n    _id: string;\n\n    @Prop({ type: Date })\n    date: Date;\n\n    @Prop()\n    description: Description;\n\n    @Prop()\n    git: git;\n\n    @Prop()\n    metadata: Metadata[];\n\n    @Prop()\n    servicetags: string[];\n\n    @Prop()\n    tags: string[];\n\n    @Prop({ type: Object })\n    upstream: any;\n\n    @Prop({ type: Object })\n    source: {\n        json: string;\n        packed: string;\n        source: string;\n    };\n}\n\nexport const CWLSchema = SchemaFactory.createForClass(CWL);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CWLService.html":{"url":"injectables/CWLService.html","title":"injectable - CWLService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CWLService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/cwl.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cwlModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/mongoConnection/cwl.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cwlModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/cwl.service.ts:18\n                \n            \n\n\n            \n                \n                    Get a CWL file from the database by ID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo id of the cwl file\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\nimport { CWL, CWLDocument } from './schemas/cwl.schema';\n\n@Injectable()\nexport class CWLService {\n    constructor(\n        @InjectModel(CWL.name)\n        private cwlModel: Model,\n    ) {}\n\n    /**\n     * Get a CWL file from the database by ID\n     * @param _id mongo id of the cwl file\n     */\n    async getById(_id: string): Promise {\n        return this.cwlModel.findOne({ _id }).exec();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Config.html":{"url":"classes/Config.html","title":"class - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Config\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/apiSyncMachines.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                context\n                            \n                            \n                                id\n                            \n                            \n                                initial\n                            \n                            \n                                    Optional\n                                on\n                            \n                            \n                                states\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initial\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        on\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, of: Type})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        states\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, of: State})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type ApiSyncMachineDocument = ApiSyncMachine & Document;\n\nclass Type {\n    @Prop()\n    target?: string;\n\n    @Prop()\n    cond?: string;\n\n    @Prop()\n    actions?: string[];\n}\n\nclass State {\n    @Prop()\n    entry?: string[];\n\n    @Prop()\n    exit?: string[];\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Config {\n    @Prop()\n    id: string;\n\n    @Prop()\n    initial: string;\n\n    @Prop({type: Object})\n    context: {\n        [key: string]: any;\n    };\n\n    @Prop({type: Object, of: State})\n    states: {\n        [key: string]: State;\n    }\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Options {\n    @Prop({type: Object, of: String})\n    actions?: {\n        [key: string]: string;\n    }\n\n    @Prop({type: Object, of: String})\n    guards?: {\n        [key: string]: string;\n    }\n}\n\nexport class MachineCommand {\n    @Prop()\n    target: string;\n\n    @Prop()\n    label: string;\n\n    @Prop()\n    args?: string;\n\n    @Prop()\n    style?: string;\n}\n\n@Schema({ collection: 'api_sync_machines', minimize: false })\nexport class ApiSyncMachine {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    applyTo: string[];\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    type: string;\n\n    @Prop()\n    commands?: MachineCommand[];\n\n    @Prop()\n    config: Config;\n    \n    @Prop()\n    options: Options;\n\n    @Prop({type: Object, of: String})\n    transitions: {\n        [key: string]: string;\n    };\n}\n\nexport const ApiSyncMachineSchema = SchemaFactory.createForClass(ApiSyncMachine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateAPIMachine.html":{"url":"interfaces/CreateAPIMachine.html","title":"interface - CreateAPIMachine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateAPIMachine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            callback\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            commands\n                                        \n                                \n                                \n                                        \n                                            config\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            satelliteId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            transitions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commands\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commands:         MachineCommand[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MachineCommand[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:         Config\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Config\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         Options\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Options\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        satelliteId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        satelliteId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transitions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transitions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    // Target machine on API Sync\n    apimachine?: string;\n    // Method for stdout\n    outresponse?: string;\n    // Method for stderr maybe we don't use this. Only set error to true\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomPm2StartOptions.html":{"url":"interfaces/CustomPm2StartOptions.html","title":"interface - CustomPm2StartOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomPm2StartOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        StartOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            args\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cron\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disable_source_map_support\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            execute_command\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            interpreter_args\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            keepscript\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max_memory_restart\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source_map_support\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            watch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            watch_array\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            write\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        args\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        args:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cron\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cron:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disable_source_map_support\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disable_source_map_support:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        execute_command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        execute_command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interpreter_args\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interpreter_args:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepscript\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keepscript:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max_memory_restart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max_memory_restart:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source_map_support\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source_map_support:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        watch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        watch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        watch_array\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        watch_array:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        write\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        write:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    // Target machine on API Sync\n    apimachine?: string;\n    // Method for stdout\n    outresponse?: string;\n    // Method for stderr maybe we don't use this. Only set error to true\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Date.html":{"url":"classes/Date.html","title":"class - Date","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Date\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/cwl.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modified\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        modified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type CWLDocument = CWL & Document;\n\nclass Date {\n    @Prop()\n    modified: number;\n}\n\nclass Description {\n    @Prop()\n    author: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    info: string;\n\n    @Prop()\n    label: string;\n\n    @Prop()\n    url: string;\n\n    @Prop()\n    version: string;\n}\n\nclass git {\n    @Prop()\n    message: string;\n\n    @Prop()\n    path: string;\n\n    @Prop()\n    remote: string;\n\n    @Prop()\n    sha: string;\n\n    @Prop()\n    local_path: string;\n}\n\nclass Metadata {\n    @Prop()\n    path: string;\n\n    @Prop()\n    source: string;\n}\n\n@Schema({ collection: 'CWL' })\nexport class CWL {\n    @Prop()\n    _id: string;\n\n    @Prop({ type: Date })\n    date: Date;\n\n    @Prop()\n    description: Description;\n\n    @Prop()\n    git: git;\n\n    @Prop()\n    metadata: Metadata[];\n\n    @Prop()\n    servicetags: string[];\n\n    @Prop()\n    tags: string[];\n\n    @Prop({ type: Object })\n    upstream: any;\n\n    @Prop({ type: Object })\n    source: {\n        json: string;\n        packed: string;\n        source: string;\n    };\n}\n\nexport const CWLSchema = SchemaFactory.createForClass(CWL);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Date-1.html":{"url":"classes/Date-1.html","title":"class - Date-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Date\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/sample.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modified\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        modified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SampleDocument = Sample & Document;\n\nclass Date {\n    @Prop()\n    modified: number;\n}\n\n@Schema({ collection: 'samples' })\nexport class Sample {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    cwlId: string;\n\n    @Prop()\n    templateId?: string;\n\n    @Prop()\n    userId: string;\n\n    @Prop({ type: Object })\n    inputs: any;\n\n    @Prop({ type: Object })\n    upstream: any;\n\n    @Prop({ type: Object })\n    outputs: any;\n\n    @Prop({ type: Object })\n    preview: any;\n\n    @Prop()\n    projectId: string;\n\n    @Prop({ type: Object })\n    metadata: any;\n\n    @Prop()\n    projects: string[];\n\n    @Prop()\n    satellite_id: string;\n\n    @Prop()\n    servicetags: string[];\n\n    @Prop({ type: Object })\n    tmp_inputs: any;\n\n    @Prop({ type: Date })\n    date: Date;\n\n    @Prop({ type: Object })\n    statistics: any;\n}\n\nexport const SampleSchema = SchemaFactory.createForClass(Sample);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Date-2.html":{"url":"classes/Date-2.html","title":"class - Date-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Date\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/task.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created\n                            \n                            \n                                modified\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/task.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/task.schema.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type TasksQueueDocument = TasksQueue & Document;\n\nclass Date {\n    @Prop()\n    modified: number;\n\n    @Prop()\n    created: number;\n}\n\n@Schema({ collection: 'tasks_queue' })\nexport class TasksQueue {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    satellite_id: string;\n\n    @Prop()\n    action: string;\n\n    @Prop()\n    payload: Map;\n\n    @Prop({ type: Date })\n    date: Date;\n}\n\nexport const TasksQueueSchema = SchemaFactory.createForClass(TasksQueue);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DependencyTree.html":{"url":"interfaces/DependencyTree.html","title":"interface - DependencyTree","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DependencyTree\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apimachine\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            busresponse\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            children\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorresponse\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onlymachine\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            outresponse\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            statemachine\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apimachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apimachine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        busresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        busresponse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:         DependencyTree[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DependencyTree[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorresponse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onlymachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onlymachine:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         CustomPm2StartOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CustomPm2StartOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outresponse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statemachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statemachine:         UnProcessedStateMachineOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UnProcessedStateMachineOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    // Target machine on API Sync\n    apimachine?: string;\n    // Method for stdout\n    outresponse?: string;\n    // Method for stderr maybe we don't use this. Only set error to true\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Description.html":{"url":"classes/Description.html","title":"class - Description","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Description\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/cwl.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                description\n                            \n                            \n                                info\n                            \n                            \n                                label\n                            \n                            \n                                url\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type CWLDocument = CWL & Document;\n\nclass Date {\n    @Prop()\n    modified: number;\n}\n\nclass Description {\n    @Prop()\n    author: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    info: string;\n\n    @Prop()\n    label: string;\n\n    @Prop()\n    url: string;\n\n    @Prop()\n    version: string;\n}\n\nclass git {\n    @Prop()\n    message: string;\n\n    @Prop()\n    path: string;\n\n    @Prop()\n    remote: string;\n\n    @Prop()\n    sha: string;\n\n    @Prop()\n    local_path: string;\n}\n\nclass Metadata {\n    @Prop()\n    path: string;\n\n    @Prop()\n    source: string;\n}\n\n@Schema({ collection: 'CWL' })\nexport class CWL {\n    @Prop()\n    _id: string;\n\n    @Prop({ type: Date })\n    date: Date;\n\n    @Prop()\n    description: Description;\n\n    @Prop()\n    git: git;\n\n    @Prop()\n    metadata: Metadata[];\n\n    @Prop()\n    servicetags: string[];\n\n    @Prop()\n    tags: string[];\n\n    @Prop({ type: Object })\n    upstream: any;\n\n    @Prop({ type: Object })\n    source: {\n        json: string;\n        packed: string;\n        source: string;\n    };\n}\n\nexport const CWLSchema = SchemaFactory.createForClass(CWL);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExceptionFilter.html":{"url":"classes/ExceptionFilter.html","title":"class - ExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rpc-connection.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Catchs RPC exceptions and throws the error correctly\n\n            \n\n\n            \n                Implements\n            \n            \n                            RpcExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: RpcException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/rpc-connection.filter.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            RpcException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, RpcExceptionFilter } from '@nestjs/common';\nimport { RpcException } from '@nestjs/microservices';\nimport { Observable, throwError } from 'rxjs';\n\n/**\n * Catchs RPC exceptions and throws the error correctly\n */\n@Catch(RpcException)\nexport class ExceptionFilter implements RpcExceptionFilter {\n    catch(exception: RpcException, host: ArgumentsHost): Observable {\n        const streamConnection = host.getArgs()[0];\n        streamConnection.emit('error', new Error(exception.message));\n        return throwError(exception.getError());\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileFromClient.html":{"url":"interfaces/FileFromClient.html","title":"interface - FileFromClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileFromClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/interfaces/apiSync.interface.ts:141\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    // Target machine on API Sync\n    apimachine?: string;\n    // Method for stdout\n    outresponse?: string;\n    // Method for stderr maybe we don't use this. Only set error to true\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Lab.html":{"url":"classes/Lab.html","title":"class - Lab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Lab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/lab.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                description\n                            \n                            \n                                members\n                            \n                            \n                                modified\n                            \n                            \n                                name\n                            \n                            \n                                owner\n                            \n                            \n                                pending\n                            \n                            \n                                satellite_id\n                            \n                            \n                                satelliteList\n                            \n                            \n                                statistics\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/lab.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/lab.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/lab.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/lab.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/lab.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/lab.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pending\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/lab.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        satellite_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/lab.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        satelliteList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/lab.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statistics\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/lab.schema.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type LabDocument = Lab & Document;\n\n@Schema({ collection: 'labs' })\nexport class Lab {\n    @Prop()\n    _id: string;\n\n    @Prop({ type: Object })\n    owner: any;\n\n    @Prop()\n    description: string;\n\n    @Prop({ type: Array })\n    members: any;\n\n    @Prop()\n    modified: number;\n\n    @Prop()\n    name: string;\n\n    @Prop({ type: Array })\n    pending: any;\n\n    @Prop()\n    satellite_id: string;\n\n    @Prop({ type: Array })\n    satelliteList: any;\n\n    @Prop({ type: Object })\n    statistics: any;\n}\n\nexport const LabSchema = SchemaFactory.createForClass(Lab);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabService.html":{"url":"injectables/LabService.html","title":"injectable - LabService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LabService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/labs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Public\n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(labModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/mongoConnection/labs.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        labModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/labs.service.ts:18\n                \n            \n\n\n            \n                \n                    Get a Lab from the database by ID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo id of the Lab\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(_id: string, updatedObject: any)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/labs.service.ts:28\n                \n            \n\n\n            \n                \n                    Update one Lab by ID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of the lab\n\n                                    \n                                \n                                \n                                    updatedObject\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        object to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        error or amount upserted (which is one)\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\nimport { Lab, LabDocument } from './schemas/lab.schema';\n\n@Injectable()\nexport class LabService {\n    constructor(\n        @InjectModel(Lab.name)\n        private labModel: Model,\n    ) {}\n\n    /**\n     * Get a Lab from the database by ID\n     * @param _id mongo id of the Lab\n     */\n    async getById(_id: string): Promise {\n        return this.labModel.findOne({ _id }).exec();\n    }\n\n    /**\n     * Update one Lab by ID\n     * @param _id id of the lab\n     * @param updatedObject object to update\n     * @returns error or amount upserted (which is one)\n     */\n     public async updateOne(_id: string, updatedObject: any) {\n        try {\n            const lab = await this.labModel.updateOne({ _id }, { $set: updatedObject });\n            return { upserted: lab.nModified };\n        } catch (err) {\n            return { err };\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalFiles.html":{"url":"interfaces/LocalFiles.html","title":"interface - LocalFiles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LocalFiles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/connection.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            collection\n                                        \n                                \n                                \n                                        \n                                            show\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collection:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        show\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        show:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ClientDuplexStream, Metadata } from \"grpc\";\nimport { Satellite } from \"../mongoConnection/schemas/satellite.schema\";\nimport { Interpreter } from \"xstate\";\n\nimport { APISyncMessage, SatelliteMessage } from \".\";\n\nexport interface SatelliteConnection {\n    connected: boolean;\n    stream: SciDapDuplexStream;\n    stateMachines: { [key: string]: APISyncStateMachineObject };\n    tasks: string[];\n    priorityTasks: string[];\n    maxTasks: number;\n    satInformation: Satellite;\n    keepAliveTimer?: NodeJS.Timeout;\n    keepAlivePingTimer?: NodeJS.Timeout;\n    // used for testing\n    receievedResponse?: boolean;\n}\n\nexport interface APISyncStateMachineObject {\n    fsm: Interpreter;\n    logger: any;\n}\n\nexport interface SciDapDuplexStream extends ClientDuplexStream {\n    metadata: Metadata;\n}\n\nexport interface MessageToSatellite extends APISyncMessage {\n    satelliteId: string;\n}\n\nexport interface LocalFiles {\n    show: boolean;\n    collection: {\n        name: string;\n        path: string;\n    }[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MachineCommand.html":{"url":"classes/MachineCommand.html","title":"class - MachineCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MachineCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/apiSyncMachines.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                args\n                            \n                            \n                                label\n                            \n                            \n                                    Optional\n                                style\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        args\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        style\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:67\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type ApiSyncMachineDocument = ApiSyncMachine & Document;\n\nclass Type {\n    @Prop()\n    target?: string;\n\n    @Prop()\n    cond?: string;\n\n    @Prop()\n    actions?: string[];\n}\n\nclass State {\n    @Prop()\n    entry?: string[];\n\n    @Prop()\n    exit?: string[];\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Config {\n    @Prop()\n    id: string;\n\n    @Prop()\n    initial: string;\n\n    @Prop({type: Object})\n    context: {\n        [key: string]: any;\n    };\n\n    @Prop({type: Object, of: State})\n    states: {\n        [key: string]: State;\n    }\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Options {\n    @Prop({type: Object, of: String})\n    actions?: {\n        [key: string]: string;\n    }\n\n    @Prop({type: Object, of: String})\n    guards?: {\n        [key: string]: string;\n    }\n}\n\nexport class MachineCommand {\n    @Prop()\n    target: string;\n\n    @Prop()\n    label: string;\n\n    @Prop()\n    args?: string;\n\n    @Prop()\n    style?: string;\n}\n\n@Schema({ collection: 'api_sync_machines', minimize: false })\nexport class ApiSyncMachine {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    applyTo: string[];\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    type: string;\n\n    @Prop()\n    commands?: MachineCommand[];\n\n    @Prop()\n    config: Config;\n    \n    @Prop()\n    options: Options;\n\n    @Prop({type: Object, of: String})\n    transitions: {\n        [key: string]: string;\n    };\n}\n\nexport const ApiSyncMachineSchema = SchemaFactory.createForClass(ApiSyncMachine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageToSatellite.html":{"url":"interfaces/MessageToSatellite.html","title":"interface - MessageToSatellite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageToSatellite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/connection.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        APISyncMessage\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            satelliteId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        satelliteId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        satelliteId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ClientDuplexStream, Metadata } from \"grpc\";\nimport { Satellite } from \"../mongoConnection/schemas/satellite.schema\";\nimport { Interpreter } from \"xstate\";\n\nimport { APISyncMessage, SatelliteMessage } from \".\";\n\nexport interface SatelliteConnection {\n    connected: boolean;\n    stream: SciDapDuplexStream;\n    stateMachines: { [key: string]: APISyncStateMachineObject };\n    tasks: string[];\n    priorityTasks: string[];\n    maxTasks: number;\n    satInformation: Satellite;\n    keepAliveTimer?: NodeJS.Timeout;\n    keepAlivePingTimer?: NodeJS.Timeout;\n    // used for testing\n    receievedResponse?: boolean;\n}\n\nexport interface APISyncStateMachineObject {\n    fsm: Interpreter;\n    logger: any;\n}\n\nexport interface SciDapDuplexStream extends ClientDuplexStream {\n    metadata: Metadata;\n}\n\nexport interface MessageToSatellite extends APISyncMessage {\n    satelliteId: string;\n}\n\nexport interface LocalFiles {\n    show: boolean;\n    collection: {\n        name: string;\n        path: string;\n    }[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Metadata.html":{"url":"classes/Metadata.html","title":"class - Metadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Metadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/cwl.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                path\n                            \n                            \n                                source\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type CWLDocument = CWL & Document;\n\nclass Date {\n    @Prop()\n    modified: number;\n}\n\nclass Description {\n    @Prop()\n    author: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    info: string;\n\n    @Prop()\n    label: string;\n\n    @Prop()\n    url: string;\n\n    @Prop()\n    version: string;\n}\n\nclass git {\n    @Prop()\n    message: string;\n\n    @Prop()\n    path: string;\n\n    @Prop()\n    remote: string;\n\n    @Prop()\n    sha: string;\n\n    @Prop()\n    local_path: string;\n}\n\nclass Metadata {\n    @Prop()\n    path: string;\n\n    @Prop()\n    source: string;\n}\n\n@Schema({ collection: 'CWL' })\nexport class CWL {\n    @Prop()\n    _id: string;\n\n    @Prop({ type: Date })\n    date: Date;\n\n    @Prop()\n    description: Description;\n\n    @Prop()\n    git: git;\n\n    @Prop()\n    metadata: Metadata[];\n\n    @Prop()\n    servicetags: string[];\n\n    @Prop()\n    tags: string[];\n\n    @Prop({ type: Object })\n    upstream: any;\n\n    @Prop({ type: Object })\n    source: {\n        json: string;\n        packed: string;\n        source: string;\n    };\n}\n\nexport const CWLSchema = SchemaFactory.createForClass(CWL);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoConnectionModule.html":{"url":"modules/MongoConnectionModule.html","title":"module - MongoConnectionModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoConnectionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MongoConnectionModule\n\n\n\ncluster_MongoConnectionModule_providers\n\n\n\ncluster_MongoConnectionModule_exports\n\n\n\n\nApiSyncMachinesService \n\nApiSyncMachinesService \n\n\n\nCWLService \n\nCWLService \n\n\n\nLabService \n\nLabService \n\n\n\nSamplesService \n\nSamplesService \n\n\n\nSatelliteMachineService \n\nSatelliteMachineService \n\n\n\nSatelliteService \n\nSatelliteService \n\n\n\nSatelliteTasksService \n\nSatelliteTasksService \n\n\n\nSubDomainService \n\nSubDomainService \n\n\n\nTasksQueueService \n\nTasksQueueService \n\n\n\nMongoConnectionModule\n\nMongoConnectionModule\n\nApiSyncMachinesService  -->\n\nMongoConnectionModule->ApiSyncMachinesService \n\n\n\nCWLService  -->\n\nMongoConnectionModule->CWLService \n\n\n\nLabService  -->\n\nMongoConnectionModule->LabService \n\n\n\nSamplesService  -->\n\nMongoConnectionModule->SamplesService \n\n\n\nSatelliteMachineService  -->\n\nMongoConnectionModule->SatelliteMachineService \n\n\n\nSatelliteService  -->\n\nMongoConnectionModule->SatelliteService \n\n\n\nSatelliteTasksService  -->\n\nMongoConnectionModule->SatelliteTasksService \n\n\n\nSubDomainService  -->\n\nMongoConnectionModule->SubDomainService \n\n\n\nTasksQueueService  -->\n\nMongoConnectionModule->TasksQueueService \n\n\n\n\n\nApiSyncMachinesService\n\nApiSyncMachinesService\n\nMongoConnectionModule -->\n\nApiSyncMachinesService->MongoConnectionModule\n\n\n\n\n\nCWLService\n\nCWLService\n\nMongoConnectionModule -->\n\nCWLService->MongoConnectionModule\n\n\n\n\n\nLabService\n\nLabService\n\nMongoConnectionModule -->\n\nLabService->MongoConnectionModule\n\n\n\n\n\nSamplesService\n\nSamplesService\n\nMongoConnectionModule -->\n\nSamplesService->MongoConnectionModule\n\n\n\n\n\nSatelliteMachineService\n\nSatelliteMachineService\n\nMongoConnectionModule -->\n\nSatelliteMachineService->MongoConnectionModule\n\n\n\n\n\nSatelliteService\n\nSatelliteService\n\nMongoConnectionModule -->\n\nSatelliteService->MongoConnectionModule\n\n\n\n\n\nSatelliteTasksService\n\nSatelliteTasksService\n\nMongoConnectionModule -->\n\nSatelliteTasksService->MongoConnectionModule\n\n\n\n\n\nSubDomainService\n\nSubDomainService\n\nMongoConnectionModule -->\n\nSubDomainService->MongoConnectionModule\n\n\n\n\n\nTasksQueueService\n\nTasksQueueService\n\nMongoConnectionModule -->\n\nTasksQueueService->MongoConnectionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mongoConnection/mongoConnection.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiSyncMachinesService\n                        \n                        \n                            CWLService\n                        \n                        \n                            LabService\n                        \n                        \n                            SamplesService\n                        \n                        \n                            SatelliteMachineService\n                        \n                        \n                            SatelliteService\n                        \n                        \n                            SatelliteTasksService\n                        \n                        \n                            SubDomainService\n                        \n                        \n                            TasksQueueService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApiSyncMachinesService\n                        \n                        \n                            CWLService\n                        \n                        \n                            LabService\n                        \n                        \n                            SamplesService\n                        \n                        \n                            SatelliteMachineService\n                        \n                        \n                            SatelliteService\n                        \n                        \n                            SatelliteTasksService\n                        \n                        \n                            SubDomainService\n                        \n                        \n                            TasksQueueService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { CWLService } from './cwl.service';\nimport { SamplesService } from './samples.service';\nimport { SatelliteService } from './satellite.service';\nimport { CWL, CWLSchema } from './schemas/cwl.schema';\nimport { Sample, SampleSchema } from './schemas/sample.schema';\nimport { Satellite, SatelliteSchema } from './schemas/satellite.schema';\nimport { SubDomain, SubDomainSchema } from './schemas/subdomain.schema';\nimport { TasksQueue, TasksQueueSchema } from './schemas/task.schema';\nimport { ServiceTag, ServiceTagSchema } from './schemas/serviceTag.schema';\nimport { TasksQueueService } from './tasksQueue.service';\nimport { SubDomainService } from './subDomain.service';\nimport { ApiSyncMachinesService } from './apiSyncMachines.service';\nimport { ApiSyncMachine, ApiSyncMachineSchema } from './schemas/apiSyncMachines.schema';\nimport { SatelliteMachine, SatelliteMachineSchema } from './schemas/satelliteMachines.schema';\nimport { SatelliteMachineService } from './satelliteMachines.service';\nimport { SatelliteTask, SatelliteTaskSchema } from './schemas/satelliteTask.schema';\nimport { SatelliteTasksService } from './satelliteTasks.service';\nimport { Lab, LabSchema } from './schemas/lab.schema';\nimport { LabService } from './labs.service';\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            { name: TasksQueue.name, schema: TasksQueueSchema },\n            { name: Satellite.name, schema: SatelliteSchema },\n            { name: Sample.name, schema: SampleSchema },\n            { name: CWL.name, schema: CWLSchema },\n            { name: SubDomain.name, schema: SubDomainSchema },\n            { name: ServiceTag.name, schema: ServiceTagSchema },\n            { name: ApiSyncMachine.name, schema: ApiSyncMachineSchema },\n            { name: SatelliteMachine.name, schema: SatelliteMachineSchema },\n            { name: SatelliteTask.name, schema: SatelliteTaskSchema },\n            { name: Lab.name, schema: LabSchema },\n        ]),\n    ],\n    providers: [TasksQueueService, SamplesService, CWLService, SatelliteService, SubDomainService, ApiSyncMachinesService, SatelliteMachineService, SatelliteTasksService, LabService],\n    exports: [TasksQueueService, SamplesService, CWLService, SatelliteService, SubDomainService, ApiSyncMachinesService, SatelliteMachineService, SatelliteTasksService, LabService],\n})\nexport class MongoConnectionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OnOptions.html":{"url":"classes/OnOptions.html","title":"class - OnOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OnOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/satelliteMachines.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                actions\n                            \n                            \n                                    Optional\n                                cond\n                            \n                            \n                                    Optional\n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        cond\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SatelliteMachineDocument = SatelliteMachine & Document;\n\nclass OnOptions {\n    @Prop()\n    target?: string;\n\n    @Prop()\n    actions?: string[];\n\n    @Prop()\n    cond?: string;\n}\n\nclass StateOptions {\n    @Prop()\n    entry: string[];\n\n    @Prop()\n    exit: string[];\n\n    @Prop({type: Object, of: OnOptions})\n    on: {\n        [key: string]: OnOptions;\n    }\n}\n\nclass UnProcessedStateMachine {\n    @Prop({ type: Object, of: StateOptions })\n    states?: {\n        [key: string]: StateOptions;\n    }\n\n    @Prop({ type: Object, of: OnOptions })\n    on?: {\n        [key: string]: OnOptions;\n    }\n\n    @Prop({ type: Object, of: String })\n    guards?: {\n        [key: string]: string;\n    }\n\n    @Prop({ type: Object, of: String })\n    actions?: {\n        [key: string]: string;\n    }\n}\n\n@Schema({ collection: 'satellite_machines', minimize: false })\nexport class SatelliteMachine {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    children?: SatelliteMachine[];\n\n    @Prop({ type: Object })\n    options?: any;\n    \n    @Prop()\n    statemachine?: UnProcessedStateMachine;\n\n    @Prop()\n    onlymachine?: boolean;\n}\n\nexport const SatelliteMachineSchema = SchemaFactory.createForClass(SatelliteMachine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OptionTypes.html":{"url":"interfaces/OptionTypes.html","title":"interface - OptionTypes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OptionTypes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        StateOptions\n\n                    \n                \n                        \n                            \n                                Defined in src/interfaces/apiSync.interface.ts:60\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    // Target machine on API Sync\n    apimachine?: string;\n    // Method for stdout\n    outresponse?: string;\n    // Method for stderr maybe we don't use this. Only set error to true\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Options.html":{"url":"classes/Options.html","title":"class - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Options\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/apiSyncMachines.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                actions\n                            \n                            \n                                    Optional\n                                guards\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, of: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        guards\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, of: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type ApiSyncMachineDocument = ApiSyncMachine & Document;\n\nclass Type {\n    @Prop()\n    target?: string;\n\n    @Prop()\n    cond?: string;\n\n    @Prop()\n    actions?: string[];\n}\n\nclass State {\n    @Prop()\n    entry?: string[];\n\n    @Prop()\n    exit?: string[];\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Config {\n    @Prop()\n    id: string;\n\n    @Prop()\n    initial: string;\n\n    @Prop({type: Object})\n    context: {\n        [key: string]: any;\n    };\n\n    @Prop({type: Object, of: State})\n    states: {\n        [key: string]: State;\n    }\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Options {\n    @Prop({type: Object, of: String})\n    actions?: {\n        [key: string]: string;\n    }\n\n    @Prop({type: Object, of: String})\n    guards?: {\n        [key: string]: string;\n    }\n}\n\nexport class MachineCommand {\n    @Prop()\n    target: string;\n\n    @Prop()\n    label: string;\n\n    @Prop()\n    args?: string;\n\n    @Prop()\n    style?: string;\n}\n\n@Schema({ collection: 'api_sync_machines', minimize: false })\nexport class ApiSyncMachine {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    applyTo: string[];\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    type: string;\n\n    @Prop()\n    commands?: MachineCommand[];\n\n    @Prop()\n    config: Config;\n    \n    @Prop()\n    options: Options;\n\n    @Prop({type: Object, of: String})\n    transitions: {\n        [key: string]: string;\n    };\n}\n\nexport const ApiSyncMachineSchema = SchemaFactory.createForClass(ApiSyncMachine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Output.html":{"url":"interfaces/Output.html","title":"interface - Output","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Output\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/tasksQueue.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            basename\n                                        \n                                \n                                \n                                        \n                                            checksum\n                                        \n                                \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            listing\n                                        \n                                \n                                \n                                        \n                                            location\n                                        \n                                \n                                \n                                        \n                                            nameext\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nameroot\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            secondaryFiles\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        basename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        basename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checksum\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        checksum:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listing:         Output[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Output[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nameext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nameext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nameroot\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nameroot:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secondaryFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secondaryFiles:         Output[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Output[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Output {\n    location: string;\n    basename: string;\n    nameroot?: string;\n    nameext: string;\n    class: string;\n    checksum: string;\n    size: number;\n    listing?: Output[];\n    secondaryFiles?: Output[];\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessedStateMachine.html":{"url":"interfaces/ProcessedStateMachine.html","title":"interface - ProcessedStateMachine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessedStateMachine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/stateMachines.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            interpreted\n                                        \n                                \n                                \n                                        \n                                            logger\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        interpreted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interpreted:     Interpreter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Interpreter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logger:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Interpreter } from \"xstate\";\n\nimport { SatelliteTask } from \".\";\n\nexport interface ProcessedStateMachine {\n    interpreted: Interpreter;\n    logger: any;\n}\n\n// export interface SendSatelliteTask {\n//     satelliteid: string;\n//     tasks: SatelliteTask[]; // Fix this\n// }\n\nexport interface SendEvent {\n    to: string;\n    type: string;\n    delay?: number;\n    satelliteId: string;\n}\n\nexport interface TriggerContext {\n    to: string;\n    satelliteId: string;\n    method: string;\n    args?: any;\n    callback?: (err: string) => void;\n}\n\nexport interface StoreKey {\n    to: string;\n    satelliteId: string;\n    key: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessedTree.html":{"url":"interfaces/ProcessedTree.html","title":"interface - ProcessedTree","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessedTree\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apimachine\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            busresponse\n                                        \n                                \n                                \n                                        \n                                            children\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorresponse\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            outresponse\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stateMachine\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apimachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apimachine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        busresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        busresponse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:         ProcessedTree[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProcessedTree[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorresponse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         StartOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StartOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outresponse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stateMachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stateMachine:         StateMachineOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateMachineOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    // Target machine on API Sync\n    apimachine?: string;\n    // Method for stdout\n    outresponse?: string;\n    // Method for stderr maybe we don't use this. Only set error to true\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PublicInformation.html":{"url":"classes/PublicInformation.html","title":"class - PublicInformation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PublicInformation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/satellite.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                absoluteUrl\n                            \n                            \n                                common_project_id\n                            \n                            \n                                connected\n                            \n                            \n                                domain\n                            \n                            \n                                expiry_time_ms\n                            \n                            \n                                localip\n                            \n                            \n                                    Optional\n                                maxSimultaneousTasks\n                            \n                            \n                                    Optional\n                                newAbsoluteUrl\n                            \n                            \n                                    Optional\n                                ownerProvidedUrl\n                            \n                            \n                                port\n                            \n                            \n                                publicData\n                            \n                            \n                                    Optional\n                                publicIp\n                            \n                            \n                                remoteModules\n                            \n                            \n                                    Optional\n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        absoluteUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        common_project_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        domain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expiry_time_ms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        maxSimultaneousTasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        newAbsoluteUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ownerProvidedUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        port\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publicData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        publicIp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remoteModules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RemoteModule[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SatelliteDocument = Satellite & Document;\n\ninterface RemoteModule {\n    moduleId: string;\n    path: string;\n}\nclass PublicInformation {\n    @Prop()\n    publicData: boolean;\n\n    @Prop()\n    connected: boolean;\n\n    @Prop()\n    domain: string;\n\n    @Prop()\n    common_project_id: string;\n\n    @Prop({ type: Object })\n    remoteModules: RemoteModule[];\n\n    @Prop()\n    absoluteUrl: string;\n\n    @Prop()\n    localip: string;\n\n    @Prop()\n    port: string;\n\n    @Prop()\n    version?: string;\n\n    @Prop()\n    newAbsoluteUrl?: string;\n\n    @Prop()\n    expiry_time_ms: number;\n\n    @Prop()\n    ownerProvidedUrl?: string;\n\n    @Prop()\n    maxSimultaneousTasks?: number;\n\n    @Prop()\n    publicIp?: string;\n}\n\nclass AbsoluteUrlSettings {\n    @Prop()\n    origin: string; // automatic, fixed, owner\n\n    @Prop()\n    inactiveTimerMS: number; // Time in MS before Satellite gets unassigned\n\n    @Prop()\n    providedCerts?: boolean; // Does the owner provide their own certs\n\n    @Prop()\n    key?: string;\n\n    @Prop()\n    cert?: string;\n\n    @Prop()\n    fixedIp?: boolean;\n}\n\n\n@Schema({ collection: 'satellites' })\nexport class Satellite {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    labId: string;\n\n    @Prop()\n    type: string;\n\n    @Prop({ type: Object })\n    public: PublicInformation;\n\n    @Prop()\n    token: string;\n\n    @Prop({ type: Object })\n    auth: any;\n\n    @Prop({ type: Object })\n    sync: any;\n\n    @Prop({ type: Object })\n    absoluteUrlSettings: AbsoluteUrlSettings;\n\n    @Prop({ type: Object })\n    satMachines: any;\n\n    @Prop({ type: Object })\n    satTasks: any;\n\n    @Prop({ type: Object })\n    apiMachines: any;\n\n    @Prop()\n    scidapHome: string;\n\n    @Prop({ type: Array })\n    configOverwrites: any[];\n}\n\nexport const SatelliteSchema = SchemaFactory.createForClass(Satellite);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RemoteModule.html":{"url":"interfaces/RemoteModule.html","title":"interface - RemoteModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RemoteModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/satellite.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            moduleId\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        moduleId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moduleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SatelliteDocument = Satellite & Document;\n\ninterface RemoteModule {\n    moduleId: string;\n    path: string;\n}\nclass PublicInformation {\n    @Prop()\n    publicData: boolean;\n\n    @Prop()\n    connected: boolean;\n\n    @Prop()\n    domain: string;\n\n    @Prop()\n    common_project_id: string;\n\n    @Prop({ type: Object })\n    remoteModules: RemoteModule[];\n\n    @Prop()\n    absoluteUrl: string;\n\n    @Prop()\n    localip: string;\n\n    @Prop()\n    port: string;\n\n    @Prop()\n    version?: string;\n\n    @Prop()\n    newAbsoluteUrl?: string;\n\n    @Prop()\n    expiry_time_ms: number;\n\n    @Prop()\n    ownerProvidedUrl?: string;\n\n    @Prop()\n    maxSimultaneousTasks?: number;\n\n    @Prop()\n    publicIp?: string;\n}\n\nclass AbsoluteUrlSettings {\n    @Prop()\n    origin: string; // automatic, fixed, owner\n\n    @Prop()\n    inactiveTimerMS: number; // Time in MS before Satellite gets unassigned\n\n    @Prop()\n    providedCerts?: boolean; // Does the owner provide their own certs\n\n    @Prop()\n    key?: string;\n\n    @Prop()\n    cert?: string;\n\n    @Prop()\n    fixedIp?: boolean;\n}\n\n\n@Schema({ collection: 'satellites' })\nexport class Satellite {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    labId: string;\n\n    @Prop()\n    type: string;\n\n    @Prop({ type: Object })\n    public: PublicInformation;\n\n    @Prop()\n    token: string;\n\n    @Prop({ type: Object })\n    auth: any;\n\n    @Prop({ type: Object })\n    sync: any;\n\n    @Prop({ type: Object })\n    absoluteUrlSettings: AbsoluteUrlSettings;\n\n    @Prop({ type: Object })\n    satMachines: any;\n\n    @Prop({ type: Object })\n    satTasks: any;\n\n    @Prop({ type: Object })\n    apiMachines: any;\n\n    @Prop()\n    scidapHome: string;\n\n    @Prop({ type: Array })\n    configOverwrites: any[];\n}\n\nexport const SatelliteSchema = SchemaFactory.createForClass(Satellite);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sample.html":{"url":"classes/Sample.html","title":"class - Sample","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sample\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/sample.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                cwlId\n                            \n                            \n                                date\n                            \n                            \n                                inputs\n                            \n                            \n                                metadata\n                            \n                            \n                                outputs\n                            \n                            \n                                preview\n                            \n                            \n                                projectId\n                            \n                            \n                                projects\n                            \n                            \n                                satellite_id\n                            \n                            \n                                servicetags\n                            \n                            \n                                statistics\n                            \n                            \n                                    Optional\n                                templateId\n                            \n                            \n                                tmp_inputs\n                            \n                            \n                                upstream\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cwlId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outputs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preview\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        satellite_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        servicetags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statistics\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        templateId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tmp_inputs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upstream\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SampleDocument = Sample & Document;\n\nclass Date {\n    @Prop()\n    modified: number;\n}\n\n@Schema({ collection: 'samples' })\nexport class Sample {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    cwlId: string;\n\n    @Prop()\n    templateId?: string;\n\n    @Prop()\n    userId: string;\n\n    @Prop({ type: Object })\n    inputs: any;\n\n    @Prop({ type: Object })\n    upstream: any;\n\n    @Prop({ type: Object })\n    outputs: any;\n\n    @Prop({ type: Object })\n    preview: any;\n\n    @Prop()\n    projectId: string;\n\n    @Prop({ type: Object })\n    metadata: any;\n\n    @Prop()\n    projects: string[];\n\n    @Prop()\n    satellite_id: string;\n\n    @Prop()\n    servicetags: string[];\n\n    @Prop({ type: Object })\n    tmp_inputs: any;\n\n    @Prop({ type: Date })\n    date: Date;\n\n    @Prop({ type: Object })\n    statistics: any;\n}\n\nexport const SampleSchema = SchemaFactory.createForClass(Sample);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SatInterfaceController.html":{"url":"controllers/SatInterfaceController.html","title":"controller - SatInterfaceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SatInterfaceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/satInterface/satInterface.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api-sync\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAPIMachineForSatellite\n                            \n                            \n                                getSatelliteById\n                            \n                            \n                                getSatellites\n                            \n                            \n                                    Async\n                                removeAPIMachineForSatellite\n                            \n                            \n                                sendEvent\n                            \n                            \n                                sendTaskToSatellite\n                            \n                            \n                                    Async\n                                triggerContext\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createAPIMachineForSatellite\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAPIMachineForSatellite(id: string, machines: CreateAPIMachine[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('api-machine/:id')\n                \n            \n\n            \n                \n                    Defined in src/satInterface/satInterface.controller.ts:99\n                \n            \n\n\n            \n                \n                    Create a list of State Machines to make on the API for a satellite\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of Satellite\n\n                                    \n                                \n                                \n                                    machines\n                                    \n                                                CreateAPIMachine[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Machines to start on API for Satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A list of machines that are created on API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSatelliteById\n                        \n                    \n                \n            \n            \n                \ngetSatelliteById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('satellite-connections/:id')\n                \n            \n\n            \n                \n                    Defined in src/satInterface/satInterface.controller.ts:33\n                \n            \n\n\n            \n                \n                    Gets the Current Satellite Connection for a single Satellite\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of Satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { stateMachines: {}; connected: any; tasks: any; priorityTasks: any; maxTasks: any; }\n\n                    \n                    \n                        A Current Satellite Connection\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSatellites\n                        \n                    \n                \n            \n            \n                \ngetSatellites()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('satellite-connections')\n                \n            \n\n            \n                \n                    Defined in src/satInterface/satInterface.controller.ts:21\n                \n            \n\n\n            \n                \n                    Gets all Current Satellite Connections, probably won't use often\n\n\n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        All Current Satellite Connections\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAPIMachineForSatellite\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAPIMachineForSatellite(satId: string, machineId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('api-machine/:satid/:machineid')\n                \n            \n\n            \n                \n                    Defined in src/satInterface/satInterface.controller.ts:134\n                \n            \n\n\n            \n                \n                    Remove a machine from API-Sync by Satellite Id and Machine Name\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    satId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Satellite Id\n\n                                    \n                                \n                                \n                                    machineId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the Machine\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Removed boolean and potentially err message\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendEvent\n                        \n                    \n                \n            \n            \n                \nsendEvent(satId: string, machineId: string, event: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('api-machine/:satid/:machineid/event')\n                \n            \n\n            \n                \n                    Defined in src/satInterface/satInterface.controller.ts:158\n                \n            \n\n\n            \n                \n                    Send an event to a machine on API-Sync\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    satId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Satellite Id\n\n                                    \n                                \n                                \n                                    machineId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the Machine\n\n                                    \n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event to send\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        sent boolean and potentially err message\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendTaskToSatellite\n                        \n                    \n                \n            \n            \n                \nsendTaskToSatellite(id: string, tasks: SatelliteTask[], trees: DependencyTree[], commands: ServiceCommand[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('sat-message/:id')\n                \n            \n\n            \n                \n                    Defined in src/satInterface/satInterface.controller.ts:66\n                \n            \n\n\n            \n                \n                    Send a List of Tasks and Trees to a specific Satellite\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of Satellite\n\n                                    \n                                \n                                \n                                    tasks\n                                    \n                                                SatelliteTask[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tasks to send to the Satellite\n\n                                    \n                                \n                                \n                                    trees\n                                    \n                                                DependencyTree[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Machines to build on the Satellite\n\n                                    \n                                \n                                \n                                    commands\n                                    \n                                                ServiceCommand[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { taskId: any; }\n\n                    \n                    \n                        A Task Id of the task sent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        triggerContext\n                        \n                    \n                \n            \n            \n                \n                    \n                    triggerContext(satId: string, machineId: string, method: string, args: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('api-machine/:satid/:machineid/method')\n                \n            \n\n            \n                \n                    Defined in src/satInterface/satInterface.controller.ts:177\n                \n            \n\n\n            \n                \n                    Trigger a method on a machine on API-Sync\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    satId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Satellite Id\n\n                                    \n                                \n                                \n                                    machineId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the Machine\n\n                                    \n                                \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Method to trigger\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Optional Args for method\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        triggered boolean and potentially err message\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, forwardRef, Get, HttpException, HttpStatus, Inject, Param, Post } from \"@nestjs/common\";\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { CreateAPIMachine, SatelliteTask, DependencyTree, SatelliteConnection, ServiceCommand } from \"../interfaces\";\nimport { AppService } from \"../app.service\";\nimport Log from \"../lib/logger\";\n\n@Controller('api-sync')\nexport class SatInterfaceController {\n\n    constructor(\n        @Inject(forwardRef(() => AppService))\n        private _appService: AppService\n    ) {}\n\n    /**\n     * Gets all Current Satellite Connections, probably won't use often\n     * @returns All Current Satellite Connections\n     */\n    @Get('satellite-connections')\n    getSatellites(): { [key: string]: SatelliteConnection } {\n        Log.info('Getting all Satellite Connections');\n        const satellites = this._appService.satConnections;\n        return satellites;\n    }\n\n    /**\n     * Gets the Current Satellite Connection for a single Satellite\n     * @param id Id of Satellite\n     * @returns A Current Satellite Connection\n     */\n    @Get('satellite-connections/:id')\n    getSatelliteById(@Param('id') id: string) {\n        Log.info(`Getting Satellite Connection ${id}`);\n        if (!id) {\n            throw new HttpException('No ID provided', HttpStatus.BAD_REQUEST);\n        }\n        \n        const sat = this._appService.satConnections[id];\n\n        if (!sat) {\n            throw new HttpException('No Satellite Connection found for ID', HttpStatus.INTERNAL_SERVER_ERROR);\n        }\n        const { stateMachines, connected, tasks, priorityTasks, maxTasks } = sat;\n        const machines = [];\n        Object.keys(stateMachines).forEach((key) => {\n            const machine = stateMachines[key];\n            const uo = {\n                name: key,\n                context: machine.fsm.state.context,\n                state: machine.fsm.state.value,\n            };\n            machines.push(uo);\n        });\n        return { stateMachines: machines, connected, tasks, priorityTasks, maxTasks };\n    }\n\n    /**\n     * Send a List of Tasks and Trees to a specific Satellite\n     * @param id Id of Satellite\n     * @param tasks Tasks to send to the Satellite\n     * @param trees Machines to build on the Satellite\n     * @returns A Task Id of the task sent\n     */\n    @Post('sat-message/:id')\n    sendTaskToSatellite(@Param('id') id: string, @Body('tasks') tasks: SatelliteTask[], @Body('trees') trees: DependencyTree[], @Body('commands') commands: ServiceCommand[]) {\n        tasks = tasks || [];\n        trees = trees || [];\n        commands = commands || [];\n        Log.info(`Sending ${tasks.length} Tasks and ${trees.length} Trees and ${commands.length} Commands to ${id}`);\n        if (!id) {\n            throw new HttpException('No ID provided', HttpStatus.BAD_REQUEST);\n        }\n        \n        if (!tasks.length && !trees.length && !commands.length) {\n            throw new HttpException('No Trees and No Tasks', HttpStatus.BAD_REQUEST);\n        }\n\n        const sat = this._appService.satConnections[id];\n        if (!sat) {\n            throw new HttpException('No Satellite Connection found for ID', HttpStatus.INTERNAL_SERVER_ERROR);\n        }\n        \n        const taskId = uuidv4();\n        this._appService.sendToSat$.next({ taskId, tasks, trees, commands, satelliteid: id });\n        Log.info(`Task ${taskId} sent to Satellite ${id}`);\n        return {\n            taskId,\n        };\n    }\n\n    /**\n     * Create a list of State Machines to make on the API for a satellite\n     * @param id Id of Satellite\n     * @param machines Machines to start on API for Satellite\n     * @returns A list of machines that are created on API\n     */\n    @Post('api-machine/:id')\n    async createAPIMachineForSatellite(@Param('id') id: string, @Body('machines') machines: CreateAPIMachine[]): Promise {\n        machines = machines || [];\n        Log.info(`Sending ${machines.length} Machines to Connection for ${id}`);\n        if (!id) {\n            throw new HttpException('No ID provided', HttpStatus.BAD_REQUEST);\n        }\n        \n        if (!machines.length) {\n            throw new HttpException('No Trees and No Tasks', HttpStatus.BAD_REQUEST);\n        }\n\n        const sat = this._appService.satConnections[id];\n        if (!sat) {\n            throw new HttpException('No Satellite Connection found for ID', HttpStatus.INTERNAL_SERVER_ERROR);\n        }\n\n        const created: { [key: string]: boolean } = {};\n        machines.forEach((machine) => {\n            created[machine.config.id] = false;\n            const callback = () => created[machine.config.id] = true;\n            this._appService.createFSM.next({ ...machine, satelliteId: id, callback });\n        });\n        Log.info(`Attempting to start ${Object.keys(created).length} Machines`);\n        await new Promise((resolve) => setTimeout(() => resolve(true), 2000));\n        Log.info(`Successfully started ${Object.keys(created).filter((k) => created[k]).length} Machines`);\n        return created;\n    }\n\n    /**\n     * Remove a machine from API-Sync by Satellite Id and Machine Name\n     * @param satId Satellite Id\n     * @param machineId Name of the Machine\n     * @returns Removed boolean and potentially err message\n     */\n    @Delete('api-machine/:satid/:machineid')\n    async removeAPIMachineForSatellite(@Param('satid') satId: string, @Param('machineid') machineId: string): Promise {\n        Log.info(`Attempting to remove ${machineId} from ${satId}`);\n        const err: string = await new Promise((resolve) => {\n            this._appService.removeFSM.next({ satelliteId: satId, machine: machineId, callback: (msg) => resolve(msg)});\n        });\n        if (err) {\n            return {\n                removed: false,\n                err\n            };\n        }\n        return {\n            removed: true\n        };\n    }\n\n    /**\n     * Send an event to a machine on API-Sync\n     * @param satId Satellite Id\n     * @param machineId Name of the Machine\n     * @param event Event to send\n     * @returns sent boolean and potentially err message\n     */\n    @Post('api-machine/:satid/:machineid/event')\n    sendEvent(@Param('satid') satId: string, @Param('machineid') machineId: string, @Body('event') event: string): { sent: boolean; err?: string } {\n        Log.info(`Attempting to send ${event} to ${machineId} on ${satId}`);\n        try {\n            this._appService.sendToAPI.next({ satelliteId: satId, to: machineId, type: event });\n        } catch (err) {\n            return { sent: false, err }\n        }\n        return { sent: true }\n    }\n\n    /**\n     * Trigger a method on a machine on API-Sync\n     * @param satId Satellite Id\n     * @param machineId Name of the Machine\n     * @param method Method to trigger\n     * @param args Optional Args for method\n     * @returns triggered boolean and potentially err message\n     */\n     @Post('api-machine/:satid/:machineid/method')\n     async triggerContext(@Param('satid') satId: string, @Param('machineid') machineId: string, @Body('method') method: string, @Body('args') args: any): Promise {\n        Log.info(`Attempting to trigger ${method} on ${machineId} on ${satId}`);\n        try {\n            const err: string = await new Promise((resolve) => {\n                this._appService.triggerContext.next({ satelliteId: satId, to: machineId, method, args, callback: (i) => resolve(i) });\n            });\n            if (err) {\n                return { triggered: false, err };\n            }\n            return { triggered: true };\n        } catch (err) {\n            return { triggered: false, err };\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SatInterfaceModule.html":{"url":"modules/SatInterfaceModule.html","title":"module - SatInterfaceModule","body":"\n                   \n\n\n\n\n    Modules\n    SatInterfaceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/satInterface/satInterface.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            SatInterfaceController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AppModule } from '../app.module';\nimport { SatInterfaceController } from './satInterface.controller';\n\n@Module({\n    imports: [forwardRef(() => AppModule)],\n    controllers: [SatInterfaceController],\n})\nexport class SatInterfaceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Satellite.html":{"url":"classes/Satellite.html","title":"class - Satellite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Satellite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/satellite.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                absoluteUrlSettings\n                            \n                            \n                                apiMachines\n                            \n                            \n                                auth\n                            \n                            \n                                configOverwrites\n                            \n                            \n                                labId\n                            \n                            \n                                public\n                            \n                            \n                                satMachines\n                            \n                            \n                                satTasks\n                            \n                            \n                                scidapHome\n                            \n                            \n                                sync\n                            \n                            \n                                token\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        absoluteUrlSettings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbsoluteUrlSettings\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiMachines\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configOverwrites\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        public\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PublicInformation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        satMachines\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        satTasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scidapHome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sync\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:84\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SatelliteDocument = Satellite & Document;\n\ninterface RemoteModule {\n    moduleId: string;\n    path: string;\n}\nclass PublicInformation {\n    @Prop()\n    publicData: boolean;\n\n    @Prop()\n    connected: boolean;\n\n    @Prop()\n    domain: string;\n\n    @Prop()\n    common_project_id: string;\n\n    @Prop({ type: Object })\n    remoteModules: RemoteModule[];\n\n    @Prop()\n    absoluteUrl: string;\n\n    @Prop()\n    localip: string;\n\n    @Prop()\n    port: string;\n\n    @Prop()\n    version?: string;\n\n    @Prop()\n    newAbsoluteUrl?: string;\n\n    @Prop()\n    expiry_time_ms: number;\n\n    @Prop()\n    ownerProvidedUrl?: string;\n\n    @Prop()\n    maxSimultaneousTasks?: number;\n\n    @Prop()\n    publicIp?: string;\n}\n\nclass AbsoluteUrlSettings {\n    @Prop()\n    origin: string; // automatic, fixed, owner\n\n    @Prop()\n    inactiveTimerMS: number; // Time in MS before Satellite gets unassigned\n\n    @Prop()\n    providedCerts?: boolean; // Does the owner provide their own certs\n\n    @Prop()\n    key?: string;\n\n    @Prop()\n    cert?: string;\n\n    @Prop()\n    fixedIp?: boolean;\n}\n\n\n@Schema({ collection: 'satellites' })\nexport class Satellite {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    labId: string;\n\n    @Prop()\n    type: string;\n\n    @Prop({ type: Object })\n    public: PublicInformation;\n\n    @Prop()\n    token: string;\n\n    @Prop({ type: Object })\n    auth: any;\n\n    @Prop({ type: Object })\n    sync: any;\n\n    @Prop({ type: Object })\n    absoluteUrlSettings: AbsoluteUrlSettings;\n\n    @Prop({ type: Object })\n    satMachines: any;\n\n    @Prop({ type: Object })\n    satTasks: any;\n\n    @Prop({ type: Object })\n    apiMachines: any;\n\n    @Prop()\n    scidapHome: string;\n\n    @Prop({ type: Array })\n    configOverwrites: any[];\n}\n\nexport const SatelliteSchema = SchemaFactory.createForClass(Satellite);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SatelliteConnection.html":{"url":"interfaces/SatelliteConnection.html","title":"interface - SatelliteConnection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SatelliteConnection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/connection.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            connected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            keepAlivePingTimer\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            keepAliveTimer\n                                        \n                                \n                                \n                                        \n                                            maxTasks\n                                        \n                                \n                                \n                                        \n                                            priorityTasks\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            receievedResponse\n                                        \n                                \n                                \n                                        \n                                            satInformation\n                                        \n                                \n                                \n                                        \n                                            stateMachines\n                                        \n                                \n                                \n                                        \n                                            stream\n                                        \n                                \n                                \n                                        \n                                            tasks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepAlivePingTimer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keepAlivePingTimer:     NodeJS.Timeout\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NodeJS.Timeout\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepAliveTimer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keepAliveTimer:     NodeJS.Timeout\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NodeJS.Timeout\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxTasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxTasks:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priorityTasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priorityTasks:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        receievedResponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        receievedResponse:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        satInformation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        satInformation:         Satellite\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Satellite\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stateMachines\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stateMachines:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stream\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stream:         SciDapDuplexStream\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SciDapDuplexStream\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tasks:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ClientDuplexStream, Metadata } from \"grpc\";\nimport { Satellite } from \"../mongoConnection/schemas/satellite.schema\";\nimport { Interpreter } from \"xstate\";\n\nimport { APISyncMessage, SatelliteMessage } from \".\";\n\nexport interface SatelliteConnection {\n    connected: boolean;\n    stream: SciDapDuplexStream;\n    stateMachines: { [key: string]: APISyncStateMachineObject };\n    tasks: string[];\n    priorityTasks: string[];\n    maxTasks: number;\n    satInformation: Satellite;\n    keepAliveTimer?: NodeJS.Timeout;\n    keepAlivePingTimer?: NodeJS.Timeout;\n    // used for testing\n    receievedResponse?: boolean;\n}\n\nexport interface APISyncStateMachineObject {\n    fsm: Interpreter;\n    logger: any;\n}\n\nexport interface SciDapDuplexStream extends ClientDuplexStream {\n    metadata: Metadata;\n}\n\nexport interface MessageToSatellite extends APISyncMessage {\n    satelliteId: string;\n}\n\nexport interface LocalFiles {\n    show: boolean;\n    collection: {\n        name: string;\n        path: string;\n    }[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SatelliteMachine.html":{"url":"classes/SatelliteMachine.html","title":"class - SatelliteMachine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SatelliteMachine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/satelliteMachines.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                    Optional\n                                children\n                            \n                            \n                                inUse\n                            \n                            \n                                    Optional\n                                onlymachine\n                            \n                            \n                                    Optional\n                                options\n                            \n                            \n                                    Optional\n                                statemachine\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SatelliteMachine[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inUse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        onlymachine\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        statemachine\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UnProcessedStateMachine\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:67\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SatelliteMachineDocument = SatelliteMachine & Document;\n\nclass OnOptions {\n    @Prop()\n    target?: string;\n\n    @Prop()\n    actions?: string[];\n\n    @Prop()\n    cond?: string;\n}\n\nclass StateOptions {\n    @Prop()\n    entry: string[];\n\n    @Prop()\n    exit: string[];\n\n    @Prop({type: Object, of: OnOptions})\n    on: {\n        [key: string]: OnOptions;\n    }\n}\n\nclass UnProcessedStateMachine {\n    @Prop({ type: Object, of: StateOptions })\n    states?: {\n        [key: string]: StateOptions;\n    }\n\n    @Prop({ type: Object, of: OnOptions })\n    on?: {\n        [key: string]: OnOptions;\n    }\n\n    @Prop({ type: Object, of: String })\n    guards?: {\n        [key: string]: string;\n    }\n\n    @Prop({ type: Object, of: String })\n    actions?: {\n        [key: string]: string;\n    }\n}\n\n@Schema({ collection: 'satellite_machines', minimize: false })\nexport class SatelliteMachine {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    children?: SatelliteMachine[];\n\n    @Prop({ type: Object })\n    options?: any;\n    \n    @Prop()\n    statemachine?: UnProcessedStateMachine;\n\n    @Prop()\n    onlymachine?: boolean;\n}\n\nexport const SatelliteMachineSchema = SchemaFactory.createForClass(SatelliteMachine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SatelliteMachineService.html":{"url":"injectables/SatelliteMachineService.html","title":"injectable - SatelliteMachineService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SatelliteMachineService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/satelliteMachines.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getInitialMachines\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_satelliteMachineModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/mongoConnection/satelliteMachines.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _satelliteMachineModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getInitialMachines\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitialMachines()\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satelliteMachines.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\nimport { SatelliteMachine, SatelliteMachineDocument } from './schemas/satelliteMachines.schema';\n\n@Injectable()\nexport class SatelliteMachineService {\n    constructor(\n        @InjectModel(SatelliteMachine.name)\n        private _satelliteMachineModel: Model,\n    ) {}\n\n    async getInitialMachines(): Promise {\n        return await (await this._satelliteMachineModel.find({ inUse: true }).exec()).map((d) => d.toObject());\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SatelliteMessage.html":{"url":"interfaces/SatelliteMessage.html","title":"interface - SatelliteMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SatelliteMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            keepalive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            messages\n                                        \n                                \n                                \n                                        \n                                            sender\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            taskid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        keepalive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keepalive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messages:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taskid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        taskid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    // Target machine on API Sync\n    apimachine?: string;\n    // Method for stdout\n    outresponse?: string;\n    // Method for stderr maybe we don't use this. Only set error to true\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SatelliteOutput.html":{"url":"interfaces/SatelliteOutput.html","title":"interface - SatelliteOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SatelliteOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            method\n                                        \n                                \n                                \n                                        \n                                            output\n                                        \n                                \n                                \n                                        \n                                            satellite\n                                        \n                                \n                                \n                                        \n                                            targetmachine\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        satellite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        satellite:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetmachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetmachine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    // Target machine on API Sync\n    apimachine?: string;\n    // Method for stdout\n    outresponse?: string;\n    // Method for stderr maybe we don't use this. Only set error to true\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SatelliteService.html":{"url":"injectables/SatelliteService.html","title":"injectable - SatelliteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SatelliteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/satellite.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                satelliteModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canLink\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                getByToken\n                            \n                            \n                                    Async\n                                getUnusedSatellites\n                            \n                            \n                                    Async\n                                updateConnectedStatus\n                            \n                            \n                                    Async\n                                updateIPs\n                            \n                            \n                                    Async\n                                updateLocalFiles\n                            \n                            \n                                    Async\n                                updateNewAbsoluteUrl\n                            \n                            \n                                    Public\n                                    Async\n                                updateOne\n                            \n                            \n                                    Async\n                                updateTime\n                            \n                            \n                                    Async\n                                updateVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(satelliteModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/mongoConnection/satellite.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        satelliteModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    canLink(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satellite.service.ts:56\n                \n            \n\n\n            \n                \n                    Check if the satellite exists and can establish a link\n This is where we would check if satellite can connect\n THis is used by the gRPC Guard\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        unique JWT for satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satellite.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satellite.service.ts:30\n                \n            \n\n\n            \n                \n                    Get a satellite by its token\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        unique JWT for satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUnusedSatellites\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnusedSatellites()\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satellite.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateConnectedStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateConnectedStatus(satId: string, connected: boolean, publicIP?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satellite.service.ts:168\n                \n            \n\n\n            \n                \n                    Updates the Connected Status of a Satellite and also set's the public IP address where it is conencting from\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    satId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the Satellite\n\n                                    \n                                \n                                \n                                    connected\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the Satellite is connected\n\n                                    \n                                \n                                \n                                    publicIP\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Public Facing IP Address of Satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateIPs\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIPs(satId: string, ips: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satellite.service.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    satId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of Satellite to Update\n\n                                    \n                                \n                                \n                                    ips\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Local IP Address of Satellite (used to update Digital Ocean Record)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Updated Satellite\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateLocalFiles\n                        \n                    \n                \n            \n            \n                \n                    This is old, we should be doing all of this from central server not other way\n                \n            \n            \n                \n                    \n                    updateLocalFiles(_id: string, localFiles: LocalFiles)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satellite.service.ts:86\n                \n            \n\n\n            \n                \n                    Update the version of satellite in DB to current\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of satellite\n\n                                    \n                                \n                                \n                                    localFiles\n                                    \n                                                LocalFiles\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateNewAbsoluteUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateNewAbsoluteUrl(satId: string, newUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satellite.service.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    satId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(_id: string, updatedObject: any)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satellite.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatedObject\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateTime\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTime(_id: string, disconnect: boolean, timeToExpire?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satellite.service.ts:117\n                \n            \n\n\n            \n                \n                    Updates the expiry_time_ms of a satellite to a time two weeks from now\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        satellite Id\n\n                                    \n                                \n                                \n                                    disconnect\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        boolean for if the satellite is disconnecting\n\n                                    \n                                \n                                \n                                    timeToExpire\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        number time in MS till expiration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateVersion\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateVersion(_id: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satellite.service.ts:72\n                \n            \n\n\n            \n                \n                    Update the version of satellite in DB to current\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of satellite\n\n                                    \n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        satelliteModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel(Satellite.name)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/satellite.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { LocalFiles } from '../interfaces';\n\nimport { Satellite, SatelliteDocument } from './schemas/satellite.schema';\nimport Log from '../lib/logger';\n\n@Injectable()\nexport class SatelliteService {\n    constructor(\n        @InjectModel(Satellite.name)\n        public satelliteModel: Model,\n    ) {}\n\n\n    public async updateOne(_id: string, updatedObject: any) {\n        try {\n            const sat = await this.satelliteModel.updateOne({ _id }, { $set: updatedObject });\n            return { upserted: sat.nModified };\n        } catch (err) {\n            return { err };\n        }\n    }\n\n    /**\n     * Get a satellite by its token\n     * @param token unique JWT for satellite\n     */\n    async getByToken(token: string): Promise {\n        try {\n            const satellite = await this.satelliteModel.findOne({ token });\n            if (!satellite.absoluteUrlSettings) {\n                const settings = {\n                    origin: 'automatic',\n                    inactiveTimerMS: 14 * 24 * 60 * 60 * 1000,\n                };\n                return await this.satelliteModel.findByIdAndUpdate(satellite._id, { $set: { absoluteUrlSettings: settings } }, { new: true, useFindAndModify: false });\n            }\n            return satellite;\n        } catch (err) {\n            throw err;\n        }\n    }\n\n    async getById(_id: string) {\n        return this.satelliteModel.findOne({ _id });\n    }\n\n    /**\n     * Check if the satellite exists and can establish a link\n     *  This is where we would check if satellite can connect\n     *  THis is used by the gRPC Guard\n     * @param token unique JWT for satellite\n     */\n    async canLink(token: string): Promise {\n        try {\n            const satellite = await this.satelliteModel.findOne({ token });\n            if (!satellite) throw Error(`Satellite not found token: ${token}`);\n            // TODO: Check all the other things you want to check\n            return true;\n        } catch (err) {\n            throw err;\n        }\n    }\n\n    /**\n     * Update the version of satellite in DB to current\n     * @param _id of satellite\n     * @param version of satellite\n     */\n    async updateVersion(_id: string, version: string) {\n        try {\n            return this.satelliteModel.findOneAndUpdate({ _id }, { $set: { 'public.version': version } }, { useFindAndModify: false });\n        } catch (err) {\n            throw err;\n        }\n    }\n\n    /**\n     * Update the version of satellite in DB to current\n     * @param _id of satellite\n     * @param version of satellite\n     * @deprecated This is old, we should be doing all of this from central server not other way\n     */\n    async updateLocalFiles(_id: string, localFiles: LocalFiles) {\n        try {\n            const sample = await this.satelliteModel.findById(_id);\n            const remotes = sample.public.remoteModules;\n            let updated = false;\n            const updatedRemotes = remotes.map((remote) => {\n                const updatedRemote = { ...remote };\n                if (updatedRemote.moduleId === 'localfiles') {\n                    updatedRemote.path = localFiles.collection[0].path;\n                    updated = true;\n                }\n                return updatedRemote;\n            });\n            if (!updated) updatedRemotes.push({ moduleId: 'localfiles', path: localFiles.collection[0].path });\n\n            return this.satelliteModel.findOneAndUpdate(\n                { _id },\n                { $set: { 'public.showLocalFiles': localFiles.show, 'public.remoteModules': updatedRemotes } },\n                { useFindAndModify: false },\n            );\n        } catch (err) {\n            throw err;\n        }\n    }\n\n    /**\n     * Updates the expiry_time_ms of a satellite to a time two weeks from now\n     * @param _id satellite Id\n     * @param disconnect boolean for if the satellite is disconnecting\n     * @param timeToExpire number time in MS till expiration\n     */\n    async updateTime(_id: string, disconnect: boolean, timeToExpire?: number) {\n        try {\n            let expiryDate = Infinity;\n            if (disconnect) {\n                if (!!timeToExpire) {\n                    expiryDate = new Date().getTime() + timeToExpire;\n                } else {\n                    const twoWeeksMS = 14 * 24 * 60 * 60 * 1000;\n                    expiryDate = new Date().getTime() + twoWeeksMS;\n                }\n            }\n            const doc = await this.satelliteModel.findOneAndUpdate({ _id }, { $set: { 'public.expiry_time_ms': expiryDate } }, { useFindAndModify: false });\n            if (!doc) {\n                throw new Error('Satellite Not Found');\n            }\n            return new Date(expiryDate);\n        } catch (err) {\n            throw err;\n        }\n    }\n\n    async getUnusedSatellites(): Promise {\n        try {\n            const timeMS = new Date().getTime();\n            return await this.satelliteModel.find({ 'public.expiry_time_ms': { $lte: timeMS } }).exec();\n        } catch (err) {\n            throw err;\n        }\n    }\n\n    /**\n     * \n     * @param satId Id of Satellite to Update\n     * @param ips Local IP Address of Satellite (used to update Digital Ocean Record)\n     * @returns Updated Satellite\n     */\n    async updateIPs(satId: string, ips: string) {\n        try {\n            return this.satelliteModel.findOneAndUpdate({ _id: satId }, { $set: { 'public.localip': ips } }, { useFindAndModify: false });\n        } catch (err) {\n            throw err;\n        }\n    }\n\n    /**\n     * Updates the Connected Status of a Satellite and also set's the public IP address where it is conencting from\n     * @param satId Id of the Satellite\n     * @param connected Whether the Satellite is connected\n     * @param publicIP Public Facing IP Address of Satellite\n     * @returns \n     */\n    async updateConnectedStatus(satId: string, connected: boolean, publicIP?: string): Promise {\n        try {\n            if (publicIP) {\n                await this.satelliteModel.findByIdAndUpdate(satId, { $set: { 'public.connected': connected, 'public.publicIp': publicIP } }, { useFindAndModify: false });\n            }\n            await this.satelliteModel.findByIdAndUpdate(satId, { $set: { 'public.connected': connected } }, { useFindAndModify: false });\n            return true;\n        } catch (err) {\n            Log.error(`Failed to update connection status for ${satId}: ${err}`);\n            return false;\n        }\n    }\n\n    async updateNewAbsoluteUrl(satId: string, newUrl: string) {\n        try {\n            if (!newUrl.includes('https://')) {\n                newUrl = 'https://' + newUrl;\n            }\n            return this.satelliteModel.findByIdAndUpdate(satId, { $set: { 'public.newAbsoluteUrl': newUrl } }, { useFindAndModify: false });\n        } catch (err) {\n            throw err;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SatelliteTask.html":{"url":"classes/SatelliteTask.html","title":"class - SatelliteTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SatelliteTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/satelliteTask.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                command\n                            \n                            \n                                    Optional\n                                errorresponse\n                            \n                            \n                                inUse\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                options\n                            \n                            \n                                    Optional\n                                outresponse\n                            \n                            \n                                    Optional\n                                savelogs\n                            \n                            \n                                    Optional\n                                scriptstring\n                            \n                            \n                                    Optional\n                                streamresponse\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteTask.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        command\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteTask.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        errorresponse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteTask.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inUse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteTask.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteTask.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteTask.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        outresponse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteTask.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        savelogs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteTask.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        scriptstring\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteTask.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        streamresponse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteTask.schema.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SatelliteTaskDocument = SatelliteTask & Document;\n\n@Schema({ collection: 'satellite_tasks', minimize: false })\nexport class SatelliteTask {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    name: string;\n\n    @Prop()\n    command: string;\n\n    @Prop({ type: Object })\n    options?: any;\n\n    @Prop()\n    streamresponse?: boolean;\n\n    @Prop()\n    scriptstring?: string;\n\n    @Prop()\n    outresponse?: string;\n\n    @Prop()\n    errorresponse?: string;\n\n    @Prop()\n    savelogs?: boolean;\n}\n\nexport const SatelliteTaskSchema = SchemaFactory.createForClass(SatelliteTask);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SatelliteTasksService.html":{"url":"injectables/SatelliteTasksService.html","title":"injectable - SatelliteTasksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SatelliteTasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/satelliteTasks.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getInitialTasks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_satelliteTaskModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/mongoConnection/satelliteTasks.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _satelliteTaskModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getInitialTasks\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitialTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satelliteTasks.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\nimport { SatelliteTask, SatelliteTaskDocument } from './schemas/satelliteTask.schema';\n\n@Injectable()\nexport class SatelliteTasksService {\n    constructor(\n        @InjectModel(SatelliteTask.name)\n        private _satelliteTaskModel: Model,\n    ) {}\n\n    async getInitialTasks(): Promise {\n        return await (await this._satelliteTaskModel.find({ inUse: true }).exec()).map((d) => d.toObject());\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SciDapDuplexStream.html":{"url":"interfaces/SciDapDuplexStream.html","title":"interface - SciDapDuplexStream","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SciDapDuplexStream\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/connection.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ClientDuplexStream\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            metadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         Metadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Metadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ClientDuplexStream, Metadata } from \"grpc\";\nimport { Satellite } from \"../mongoConnection/schemas/satellite.schema\";\nimport { Interpreter } from \"xstate\";\n\nimport { APISyncMessage, SatelliteMessage } from \".\";\n\nexport interface SatelliteConnection {\n    connected: boolean;\n    stream: SciDapDuplexStream;\n    stateMachines: { [key: string]: APISyncStateMachineObject };\n    tasks: string[];\n    priorityTasks: string[];\n    maxTasks: number;\n    satInformation: Satellite;\n    keepAliveTimer?: NodeJS.Timeout;\n    keepAlivePingTimer?: NodeJS.Timeout;\n    // used for testing\n    receievedResponse?: boolean;\n}\n\nexport interface APISyncStateMachineObject {\n    fsm: Interpreter;\n    logger: any;\n}\n\nexport interface SciDapDuplexStream extends ClientDuplexStream {\n    metadata: Metadata;\n}\n\nexport interface MessageToSatellite extends APISyncMessage {\n    satelliteId: string;\n}\n\nexport interface LocalFiles {\n    show: boolean;\n    collection: {\n        name: string;\n        path: string;\n    }[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendEvent.html":{"url":"interfaces/SendEvent.html","title":"interface - SendEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SendEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/stateMachines.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            delay\n                                        \n                                \n                                \n                                        \n                                            satelliteId\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        delay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        satelliteId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        satelliteId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Interpreter } from \"xstate\";\n\nimport { SatelliteTask } from \".\";\n\nexport interface ProcessedStateMachine {\n    interpreted: Interpreter;\n    logger: any;\n}\n\n// export interface SendSatelliteTask {\n//     satelliteid: string;\n//     tasks: SatelliteTask[]; // Fix this\n// }\n\nexport interface SendEvent {\n    to: string;\n    type: string;\n    delay?: number;\n    satelliteId: string;\n}\n\nexport interface TriggerContext {\n    to: string;\n    satelliteId: string;\n    method: string;\n    args?: any;\n    callback?: (err: string) => void;\n}\n\nexport interface StoreKey {\n    to: string;\n    satelliteId: string;\n    key: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceCommand.html":{"url":"interfaces/ServiceCommand.html","title":"interface - ServiceCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ServiceCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bus\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            command\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stdin\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bus:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stdin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stdin:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    // Target machine on API Sync\n    apimachine?: string;\n    // Method for stdout\n    outresponse?: string;\n    // Method for stderr maybe we don't use this. Only set error to true\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceTag.html":{"url":"classes/ServiceTag.html","title":"class - ServiceTag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceTag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/serviceTag.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                name\n                            \n                            \n                                order\n                            \n                            \n                                priority\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/serviceTag.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/serviceTag.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/serviceTag.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/serviceTag.schema.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type ServiceTagDocument = ServiceTag & Document;\n\n@Schema({ collection: 'service_tags' })\nexport class ServiceTag {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    name: string;\n\n    @Prop()\n    order: string;\n\n    @Prop()\n    priority: boolean;\n}\n\nexport const ServiceTagSchema = SchemaFactory.createForClass(ServiceTag);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StartOptions.html":{"url":"interfaces/StartOptions.html","title":"interface - StartOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StartOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PM2StartOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            autorestart\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            keepscript\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            namespace\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autorestart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autorestart:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepscript\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keepscript:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    // Target machine on API Sync\n    apimachine?: string;\n    // Method for stdout\n    outresponse?: string;\n    // Method for stderr maybe we don't use this. Only set error to true\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/State.html":{"url":"classes/State.html","title":"class - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/apiSyncMachines.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                entry\n                            \n                            \n                                    Optional\n                                exit\n                            \n                            \n                                    Optional\n                                on\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        entry\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        exit\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        on\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, of: Type})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type ApiSyncMachineDocument = ApiSyncMachine & Document;\n\nclass Type {\n    @Prop()\n    target?: string;\n\n    @Prop()\n    cond?: string;\n\n    @Prop()\n    actions?: string[];\n}\n\nclass State {\n    @Prop()\n    entry?: string[];\n\n    @Prop()\n    exit?: string[];\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Config {\n    @Prop()\n    id: string;\n\n    @Prop()\n    initial: string;\n\n    @Prop({type: Object})\n    context: {\n        [key: string]: any;\n    };\n\n    @Prop({type: Object, of: State})\n    states: {\n        [key: string]: State;\n    }\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Options {\n    @Prop({type: Object, of: String})\n    actions?: {\n        [key: string]: string;\n    }\n\n    @Prop({type: Object, of: String})\n    guards?: {\n        [key: string]: string;\n    }\n}\n\nexport class MachineCommand {\n    @Prop()\n    target: string;\n\n    @Prop()\n    label: string;\n\n    @Prop()\n    args?: string;\n\n    @Prop()\n    style?: string;\n}\n\n@Schema({ collection: 'api_sync_machines', minimize: false })\nexport class ApiSyncMachine {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    applyTo: string[];\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    type: string;\n\n    @Prop()\n    commands?: MachineCommand[];\n\n    @Prop()\n    config: Config;\n    \n    @Prop()\n    options: Options;\n\n    @Prop({type: Object, of: String})\n    transitions: {\n        [key: string]: string;\n    };\n}\n\nexport const ApiSyncMachineSchema = SchemaFactory.createForClass(ApiSyncMachine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StateMachineModules.html":{"url":"modules/StateMachineModules.html","title":"module - StateMachineModules","body":"\n                   \n\n\n\n\n    Modules\n    StateMachineModules\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StateMachineModules\n\n\n\ncluster_StateMachineModules_providers\n\n\n\ncluster_StateMachineModules_imports\n\n\n\ncluster_StateMachineModules_exports\n\n\n\n\nMongoConnectionModule\n\nMongoConnectionModule\n\n\n\nStateMachineModules\n\nStateMachineModules\n\nStateMachineModules -->\n\nMongoConnectionModule->StateMachineModules\n\n\n\n\n\nStateMachinesService \n\nStateMachinesService \n\nStateMachinesService  -->\n\nStateMachineModules->StateMachinesService \n\n\n\n\n\nStateMachinesService\n\nStateMachinesService\n\nStateMachineModules -->\n\nStateMachinesService->StateMachineModules\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stateMachines/stateMachines.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StateMachinesService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MongoConnectionModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StateMachinesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { forwardRef, Module } from '@nestjs/common';\n\nimport { AppModule } from '../app.module';\nimport { MongoConnectionModule } from '../mongoConnection/mongoConnection.module';\nimport { StateMachinesService } from './stateMachines.service';\n\n@Module({\n    imports: [\n        HttpModule,\n        MongoConnectionModule,\n        forwardRef(() => AppModule),\n    ],\n    providers: [StateMachinesService],\n    exports: [StateMachinesService],\n})\nexport class StateMachineModules {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StateMachineOptions.html":{"url":"interfaces/StateMachineOptions.html","title":"interface - StateMachineOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StateMachineOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            actions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            guards\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            on\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            states\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guards\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        guards:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        on\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        on:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        states\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        states:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    // Target machine on API Sync\n    apimachine?: string;\n    // Method for stdout\n    outresponse?: string;\n    // Method for stderr maybe we don't use this. Only set error to true\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateMachinesService.html":{"url":"injectables/StateMachinesService.html","title":"injectable - StateMachinesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StateMachinesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stateMachines/stateMachines.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _fs\n                            \n                            \n                                    Private\n                                _fsPromises\n                            \n                            \n                                    Private\n                                _path\n                            \n                            \n                                    Public\n                                dbStream$\n                            \n                            \n                                    Public\n                                satStream$\n                            \n                            \n                                    Public\n                                sendEvent$\n                            \n                            \n                                    Public\n                                storeValue$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createStateMachine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_cwlService: CWLService, _sampleService: SamplesService, _satelliteService: SatelliteService, _subDomainService: SubDomainService, _tasksQueueService: TasksQueueService, _labService: LabService, _httpService: HttpService, _configService: ConfigService, _appService: AppService)\n                    \n                \n                        \n                            \n                                Defined in src/stateMachines/stateMachines.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _cwlService\n                                                  \n                                                        \n                                                                        CWLService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _sampleService\n                                                  \n                                                        \n                                                                        SamplesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _satelliteService\n                                                  \n                                                        \n                                                                        SatelliteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _subDomainService\n                                                  \n                                                        \n                                                                        SubDomainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _tasksQueueService\n                                                  \n                                                        \n                                                                        TasksQueueService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _labService\n                                                  \n                                                        \n                                                                        LabService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _appService\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createStateMachine\n                        \n                    \n                \n            \n            \n                \n                    \n                    createStateMachine(config: any, options: any, transitions: any, satelliteId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/stateMachines/stateMachines.service.ts:57\n                \n            \n\n\n            \n                \n                    Create a State Machine and setup transitions for it\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains config setup for State Machine\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains Actions and Guards\n\n                                    \n                                \n                                \n                                    transitions\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Actions to perform on Transition States\n\n                                    \n                                \n                                \n                                    satelliteId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the relevant Satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Interpreted Finite State Machine and a specific Logger for this State Machine\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _fs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : fs\n                    \n                \n                    \n                        \n                                Defined in src/stateMachines/stateMachines.service.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _fsPromises\n                        \n                    \n                \n            \n                \n                    \n                        Default value : fs.promises\n                    \n                \n                    \n                        \n                                Defined in src/stateMachines/stateMachines.service.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _path\n                        \n                    \n                \n            \n                \n                    \n                        Default value : path\n                    \n                \n                    \n                        \n                                Defined in src/stateMachines/stateMachines.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dbStream$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/stateMachines/stateMachines.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        satStream$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/stateMachines/stateMachines.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendEvent$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/stateMachines/stateMachines.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        storeValue$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/stateMachines/stateMachines.service.ts:43\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { ConfigService } from '@nestjs/config';\nimport { Subject } from 'rxjs';\nimport { CWLService } from '../mongoConnection/cwl.service';\nimport { createMachine, interpret, Interpreter } from 'xstate';\nconst path = require('path');\nimport fs = require('fs');\n\nimport { ProcessedStateMachine, SendEvent, SatelliteTask, StoreKey, APISyncMessage, ServiceCommand } from '../interfaces';\nimport { stateLogger } from '../lib/logger';\nimport { SamplesService } from '../mongoConnection/samples.service';\nimport { SatelliteService } from '../mongoConnection/satellite.service';\nimport { SubDomainService } from '../mongoConnection/subDomain.service';\nimport { TasksQueueService } from '../mongoConnection/tasksQueue.service';\nimport { LabService } from '../mongoConnection/labs.service';\nimport { AppService } from '../app.service';\n\n@Injectable()\nexport class StateMachinesService {\n    constructor (\n        private _cwlService: CWLService,\n        private _sampleService: SamplesService,\n        private _satelliteService: SatelliteService,\n        private _subDomainService: SubDomainService,\n        private _tasksQueueService: TasksQueueService,\n        private _labService: LabService,\n        private _httpService: HttpService,\n        private _configService: ConfigService,\n        @Inject(forwardRef(() => AppService))\n        private _appService: AppService,\n    ) {}\n    // Currently does nothing real\n    public dbStream$ = new Subject();\n\n    // Subject that sends tasks to the appropriate Satellite\n    public satStream$ = new Subject();\n\n    // Subject that sends messages to other State Machines relevant to the same satellite\n    public sendEvent$ = new Subject();\n\n    // Subject that stores a key value pair on a state machien\n    public storeValue$ = new Subject();\n\n    private _path = path;\n    private _fs = fs;\n    private _fsPromises = fs.promises;\n\n    /**\n     * Create a State Machine and setup transitions for it\n     * @param config Contains config setup for State Machine\n     * @param options Contains Actions and Guards\n     * @param transitions Actions to perform on Transition States\n     * @param satelliteId Id of the relevant Satellite\n     * @returns Interpreted Finite State Machine and a specific Logger for this State Machine\n     */\n    public async createStateMachine(config: any, options: any, transitions: any, satelliteId: string): Promise {\n        const updatedOptions = { ...options };\n        const updatedConfig = { ...config };\n        const logger = await stateLogger(config.id, satelliteId);\n        \n        const AsyncFunction = Object.getPrototypeOf(async function(){}).constructor\n\n        // Update the config for any keys that are marked as functions\n        const updatedContext = {};\n        if (config.context) {\n            Object.keys(config.context).forEach((k) => {\n                const value = config.context[k];\n                if (typeof value === 'string' && value.includes('func::')) {\n                    updatedContext[k] = (args) => {\n                        try {\n                            const script = value.replace('func::', '');\n                            // Don't require the target if sending to itself\n                            const send = (type: string, target?: string | number, delay?: number) => {\n                                let to: string;\n                                if (!target || typeof target === 'number') {\n                                    to = config.id;\n                                    if (typeof target === 'number') {\n                                        delay = target;\n                                    }\n                                } else {\n                                    to = target;\n                                }\n                                this.sendEvent$.next({ to, type, delay, satelliteId });\n                            };\n                            const satTasks = (tasks: SatelliteTask[]) => this.satStream$.next({ satelliteid: satelliteId, tasks });\n                            const satCommands = (commands: ServiceCommand[]) => this.satStream$.next({ satelliteid: satelliteId, commands });\n                            // Don't require the target if storing on itself\n                            const store = (key: string, value: any, target?: string, func?: any) => {\n                                let to = target || config.id;\n                                this.storeValue$.next({ satelliteId, to, key, value })\n                            };\n                            const context = (key: string) => this._appService.satConnections[satelliteId].stateMachines[config.id].fsm.state.context[key];\n                            new AsyncFunction('logger', 'satelliteId', 'args', 'send', 'satTasks', 'satCommands', 'store', 'context', script).call(this, logger, satelliteId, args, send, satTasks, satCommands, store, context);\n                        } catch (err) {\n                            logger.error(`Failed to run context ${k}: ${err}`);\n                        }\n                    }\n                } else {\n                    updatedContext[k] = value;\n                }\n\n            });\n        }\n\n        // Update the actions to allow the functions to run correctly\n        const updatedActions = {};\n        if (updatedOptions.actions) {\n            const actions = updatedOptions.actions;\n            Object.keys(actions).forEach(\n                (k) => updatedActions[k] = (ctx) => {\n                        try {\n                            // Don't require the target if sending to itself\n                            const send = (type: string, target?: string | number, delay?: number) => {\n                                let to: string;\n                                if (!target || typeof target === 'number') {\n                                    to = config.id;\n                                    if (typeof target === 'number') {\n                                        delay = target;\n                                    }\n                                } else {\n                                    to = target;\n                                }\n                                this.sendEvent$.next({ to, type, delay, satelliteId });\n                            };\n                            new AsyncFunction('ctx', 'logger', 'satelliteId', 'send', actions[k]).call(this, ctx, logger, satelliteId, send);\n                        } catch (err) {\n                            logger.error(`Failed to run action ${k}: ${err}`);\n                        }\n                    }\n            );\n        }\n        \n        // Update teh guards to allow the functions to run correctly\n        const updatedGuards = {};\n        if (updatedOptions.guards) {\n            const guards = updatedOptions.guards;\n            Object.keys(guards).forEach(\n                (k) =>\n                    (updatedGuards[k] = (ctx) => {\n                        try {\n                            return new AsyncFunction('ctx', 'logger', 'satelliteId', guards[k]).call(this, ctx, logger, satelliteId);\n                        } catch (err) {\n                            logger.error(`Failed to run guard ${k}: ${err}`);\n                        }\n                    }),\n            );\n        }\n\n        updatedOptions.actions = updatedActions;\n        updatedOptions.guards = updatedGuards;\n        \n        updatedConfig.context = updatedContext;\n\n        const machine = createMachine(updatedConfig, updatedOptions);\n        const interpreted = interpret(machine);\n\n        // Correctly Parse the functions for Transitions\n        const updatedTransitions = {};\n        if (transitions) {\n            Object.keys(transitions).forEach(\n                (k) =>\n                    (updatedTransitions[k] = (state) => {\n                        try {\n                            new AsyncFunction('state', 'logger', 'satelliteId', transitions[k]).call(this, state, logger, satelliteId);\n                        } catch (err) {\n                            logger.error(`Failed to run transition ${k}: ${err}`);\n                        }\n                    }),\n            );\n        }\n\n        interpreted.start();\n\n        // Setup the Transitions for the StateMachine\n        interpreted.onTransition((state) => {\n            logger.info(`Current State is ${state.value}`);\n            if (typeof state.value !== 'string') {\n                logger.error(`Invalid state: ${state.value} - type ${typeof state.value}`);\n                return;\n            }\n            if (updatedTransitions[state.value]) {\n                try {\n                    updatedTransitions[state.value](state);\n                } catch (err) {\n                    logger.error(`Error with transition to ${state.value}: ${err}`);\n                }\n            } else {\n                logger.debug(`No custom action for ${state.value}`);\n            }\n        });\n\n        return { interpreted, logger };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StateOptions.html":{"url":"classes/StateOptions.html","title":"class - StateOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StateOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/satelliteMachines.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entry\n                            \n                            \n                                exit\n                            \n                            \n                                on\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        entry\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exit\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        on\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, of: OnOptions})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SatelliteMachineDocument = SatelliteMachine & Document;\n\nclass OnOptions {\n    @Prop()\n    target?: string;\n\n    @Prop()\n    actions?: string[];\n\n    @Prop()\n    cond?: string;\n}\n\nclass StateOptions {\n    @Prop()\n    entry: string[];\n\n    @Prop()\n    exit: string[];\n\n    @Prop({type: Object, of: OnOptions})\n    on: {\n        [key: string]: OnOptions;\n    }\n}\n\nclass UnProcessedStateMachine {\n    @Prop({ type: Object, of: StateOptions })\n    states?: {\n        [key: string]: StateOptions;\n    }\n\n    @Prop({ type: Object, of: OnOptions })\n    on?: {\n        [key: string]: OnOptions;\n    }\n\n    @Prop({ type: Object, of: String })\n    guards?: {\n        [key: string]: string;\n    }\n\n    @Prop({ type: Object, of: String })\n    actions?: {\n        [key: string]: string;\n    }\n}\n\n@Schema({ collection: 'satellite_machines', minimize: false })\nexport class SatelliteMachine {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    children?: SatelliteMachine[];\n\n    @Prop({ type: Object })\n    options?: any;\n    \n    @Prop()\n    statemachine?: UnProcessedStateMachine;\n\n    @Prop()\n    onlymachine?: boolean;\n}\n\nexport const SatelliteMachineSchema = SchemaFactory.createForClass(SatelliteMachine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoreKey.html":{"url":"interfaces/StoreKey.html","title":"interface - StoreKey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StoreKey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/stateMachines.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            satelliteId\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        satelliteId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        satelliteId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Interpreter } from \"xstate\";\n\nimport { SatelliteTask } from \".\";\n\nexport interface ProcessedStateMachine {\n    interpreted: Interpreter;\n    logger: any;\n}\n\n// export interface SendSatelliteTask {\n//     satelliteid: string;\n//     tasks: SatelliteTask[]; // Fix this\n// }\n\nexport interface SendEvent {\n    to: string;\n    type: string;\n    delay?: number;\n    satelliteId: string;\n}\n\nexport interface TriggerContext {\n    to: string;\n    satelliteId: string;\n    method: string;\n    args?: any;\n    callback?: (err: string) => void;\n}\n\nexport interface StoreKey {\n    to: string;\n    satelliteId: string;\n    key: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubDomain.html":{"url":"classes/SubDomain.html","title":"class - SubDomain","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubDomain\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/subdomain.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                absoluteUrl\n                            \n                            \n                                certs\n                            \n                            \n                                dnsRecordId\n                            \n                            \n                                inUse\n                            \n                            \n                                satellite_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/subdomain.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        absoluteUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/subdomain.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        certs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/subdomain.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dnsRecordId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/subdomain.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inUse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/subdomain.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        satellite_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/subdomain.schema.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SubDomainDocument = SubDomain & Document;\n\n@Schema({ collection: 'sub_domains' })\nexport class SubDomain {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    satellite_id: string;\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    absoluteUrl: string;\n\n    @Prop()\n    dnsRecordId: string;\n\n    @Prop({ type: Object })\n    certs: {\n        key: string;\n        ca: string;\n        cert: string;\n    };\n}\n\nexport const SubDomainSchema = SchemaFactory.createForClass(SubDomain);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubDomainService.html":{"url":"injectables/SubDomainService.html","title":"injectable - SubDomainService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubDomainService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/subDomain.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getBySatId\n                            \n                            \n                                    Async\n                                getDevInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subDomainModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/mongoConnection/subDomain.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subDomainModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBySatId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBySatId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/subDomain.service.ts:18\n                \n            \n\n\n            \n                \n                    Get a satellite by its token, if no subdomain is found, find an unused subdomain and assign it\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDevInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDevInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/subDomain.service.ts:29\n                \n            \n\n\n            \n                \n                    Gets information for certs for development satellite\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\nimport { SubDomain, SubDomainDocument } from './schemas/subdomain.schema';\n\n@Injectable()\nexport class SubDomainService {\n    constructor(\n        @InjectModel(SubDomain.name)\n        private subDomainModel: Model,\n    ) {}\n\n    /**\n     * Get a satellite by its token, if no subdomain is found, find an unused subdomain and assign it\n     * @param token unique JWT for satellite\n     */\n    async getBySatId(id: string): Promise {\n        let subDomain = await this.subDomainModel.findOne({ satellite_id: id }).exec();\n        if (!subDomain) {\n            subDomain = await this.subDomainModel.findOneAndUpdate({ inUse: false }, { $set: { satellite_id: id, inUse: true } }, { useFindAndModify: false }).exec();\n        }\n        return subDomain;\n    }\n\n    /**\n     * Gets information for certs for development satellite\n     */\n    async getDevInfo(): Promise {\n        return await this.subDomainModel.findOne({ satellite_id: 'test' }).exec();\n    }\n\n    // async clearOldSatellite(satellite_id: string): Promise {\n    //     try {\n    //         return this.subDomainModel.findOneAndUpdate({ satellite_id }, { $set: { satellite_id: '', inUse: false } }, { useFindAndModify: false });\n    //     } catch (err) {\n    //         throw err;\n    //     }\n    // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TasksQueue.html":{"url":"classes/TasksQueue.html","title":"class - TasksQueue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TasksQueue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/task.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                action\n                            \n                            \n                                date\n                            \n                            \n                                payload\n                            \n                            \n                                satellite_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/task.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/task.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/task.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/task.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        satellite_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/task.schema.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type TasksQueueDocument = TasksQueue & Document;\n\nclass Date {\n    @Prop()\n    modified: number;\n\n    @Prop()\n    created: number;\n}\n\n@Schema({ collection: 'tasks_queue' })\nexport class TasksQueue {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    satellite_id: string;\n\n    @Prop()\n    action: string;\n\n    @Prop()\n    payload: Map;\n\n    @Prop({ type: Date })\n    date: Date;\n}\n\nexport const TasksQueueSchema = SchemaFactory.createForClass(TasksQueue);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksQueueService.html":{"url":"injectables/TasksQueueService.html","title":"injectable - TasksQueueService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TasksQueueService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/tasksQueue.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findTaskBySampleId\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                getBySatId\n                            \n                            \n                                    Private\n                                nth\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateDownloadProgress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tasksQueueModel: Model, sampleService: SamplesService, serviceTagModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/mongoConnection/tasksQueue.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tasksQueueModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sampleService\n                                                  \n                                                        \n                                                                        SamplesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceTagModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(_id: string, satellite_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/tasksQueue.service.ts:63\n                \n            \n\n\n            \n                \n                    Delete a task by id and satellite id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo id of task\n\n                                    \n                                \n                                \n                                    satellite_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo id of satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findTaskBySampleId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTaskBySampleId(sampleId: string, satelliteId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/tasksQueue.service.ts:162\n                \n            \n\n\n            \n                \n                    Finds a Task Queue Object by Sample Id and Satellite Id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of sample to find task by\n\n                                    \n                                \n                                \n                                    satelliteId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Satellite Id that task belongs to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A Task Queue Object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(task_id: string, satellite_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/tasksQueue.service.ts:47\n                \n            \n\n\n            \n                \n                    Get task by id, must include matching satellite id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo id of task\n\n                                    \n                                \n                                \n                                    satellite_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo id of satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBySatId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBySatId(satellite_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/tasksQueue.service.ts:26\n                \n            \n\n\n            \n                \n                    Find all of the tasks for a given satellite\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    satellite_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo id of the satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        nth\n                        \n                    \n                \n            \n            \n                \n                    \n                    nth(n: number)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/tasksQueue.service.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(task_id: string, updatedInfo: any)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/tasksQueue.service.ts:103\n                \n            \n\n\n            \n                \n                    Update the progress of a given task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo id of task\n\n                                    \n                                \n                                \n                                    updatedInfo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        task info to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateDownloadProgress\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDownloadProgress(taskId: string, fileId: string, status: string, progress: number, satId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/tasksQueue.service.ts:127\n                \n            \n\n\n            \n                \n                    Update Download Progress by Task ID and File ID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    taskId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo id of task\n\n                                    \n                                \n                                \n                                    fileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id to find file to update\n\n                                    \n                                \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        status of download\n\n                                    \n                                \n                                \n                                    progress\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        0 to 100 represents download progress\n\n                                    \n                                \n                                \n                                    satId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo id of satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\n// import { updatedInfoTasksQueue } from '../interfaces';\nimport { TasksQueueDocument, TasksQueue } from './schemas/task.schema';\nimport { SamplesService } from './samples.service';\nimport Log from '../lib/logger';\nimport { ServiceTag, ServiceTagDocument } from './schemas/serviceTag.schema';\n\n@Injectable()\nexport class TasksQueueService {\n    constructor(\n        @InjectModel(TasksQueue.name)\n        private tasksQueueModel: Model,\n        @Inject(forwardRef(() => SamplesService))\n        private sampleService: SamplesService,\n        @InjectModel(ServiceTag.name)\n        private serviceTagModel: Model,\n    ) {}\n\n    /**\n     * Find all of the tasks for a given satellite\n     * @param satellite_id mongo id of the satellite\n     */\n    async getBySatId(satellite_id: string): Promise {\n        const priorityTag = await this.serviceTagModel.findOne({ priority: true }).exec();\n        const tasks = await this.tasksQueueModel.find({ satellite_id }).exec();\n        if (!priorityTag) return { queue: tasks, priorityQueue: [] };\n        return tasks.reduce(\n            (final, task) => {\n                const service_tags = task.payload.get('service_tags');\n                if (!service_tags) final.queue.push(task);\n                else if (task.payload.get('service_tags').includes(priorityTag._id)) final.priorityQueue.push(task);\n                else final.queue.push(task);\n                return final;\n            },\n            { queue: [], priorityQueue: [] },\n        );\n    }\n\n    /**\n     * Get task by id, must include matching satellite id\n     * @param task_id mongo id of task\n     * @param satellite_id mongo id of satellite\n     */\n    async getById(task_id: string, satellite_id: string): Promise {\n        try {\n            const task = await this.tasksQueueModel.findById(task_id).exec();\n            if (!task) throw Error(`Task ${task_id} not found`);\n            if (task.satellite_id === satellite_id) return task;\n            throw Error(`${satellite_id} attempted to access wrong task`);\n        } catch (err) {\n            throw err;\n        }\n    }\n\n    /**\n     * Delete a task by id and satellite id\n     * @param _id mongo id of task\n     * @param satellite_id mongo id of satellite\n     */\n    async delete(_id: string, satellite_id: string): Promise {\n        try {\n            const task = await this.tasksQueueModel.findById(_id).exec();\n            if (!task) throw Error(`Task ${_id} not found`);\n            if (task.satellite_id !== satellite_id) throw Error('Attempted to access wrong task');\n            const tasksBySat = await this.tasksQueueModel.find({ satellite_id: task.satellite_id });\n            tasksBySat.forEach(async (t) => {\n                if (t._id === task._id) return;\n                if (t.date.created  {\n    async update(task_id: string, updatedInfo: any): Promise {\n        const newUpdatedInfo = { ...updatedInfo };\n        const task = await this.tasksQueueModel.findById(task_id);\n        const updatedPayload = new Map();\n        task.payload.forEach((value, key) => {\n            updatedPayload.set(key, value);\n        });\n        if (newUpdatedInfo.payload) {\n            Object.keys(newUpdatedInfo.payload).forEach((key) => {\n                updatedPayload.set(key, newUpdatedInfo.payload[key]);\n            });\n            newUpdatedInfo.payload = updatedPayload;\n        }\n        return await this.tasksQueueModel.findByIdAndUpdate(task_id, { ...newUpdatedInfo }, { useFindAndModify: false }).exec();\n    }\n\n    /**\n     * Update Download Progress by Task ID and File ID\n     * @param taskId mongo id of task\n     * @param fileId id to find file to update\n     * @param status status of download\n     * @param progress 0 to 100 represents download progress\n     * @param satId mongo id of satellite\n     */\n    async updateDownloadProgress(taskId: string, fileId: string, status: string, progress: number, satId: string) {\n        try {\n            const task = await this.getById(taskId, satId);\n            const downloads = task.payload.get('downloads');\n            const download = { ...downloads[fileId] };\n            if (status === 'finished') {\n                download.downloaded = true;\n            } else {\n                download.progress = progress;\n            }\n            const toUpdate = `payload.downloads.${fileId}`;\n            await this.tasksQueueModel.findByIdAndUpdate(taskId, { $set: { [toUpdate]: download } }, { useFindAndModify: false });\n\n            const preview = {\n                state: status,\n                dagId: '',\n                runId: task.payload.get('sample_id'),\n                progress: progress,\n            };\n            await this.sampleService.updateProgress(preview);\n        } catch (err) {\n            throw err;\n        }\n    }\n\n    private nth(n: number): string {\n        return [, 'st', 'nd', 'rd'][(n / 10) % 10 ^ 1 && n % 10] || 'th';\n    }\n\n    /**\n     * Finds a Task Queue Object by Sample Id and Satellite Id\n     * @param sampleId Id of sample to find task by\n     * @param satelliteId Satellite Id that task belongs to\n     * @returns A Task Queue Object\n     */\n    async findTaskBySampleId(sampleId: string, satelliteId: string): Promise {\n        try {\n            const task = await this.tasksQueueModel.findOne({ satellite_id: satelliteId, 'payload.sample_id': sampleId }).exec();\n            if (!task) throw new Error(`No Task with sample: ${sampleId} for satellite: ${satelliteId}`);\n            return task;\n        } catch (err) {\n            throw err;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TriggerContext.html":{"url":"interfaces/TriggerContext.html","title":"interface - TriggerContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TriggerContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/stateMachines.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            args\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            callback\n                                        \n                                \n                                \n                                        \n                                            method\n                                        \n                                \n                                \n                                        \n                                            satelliteId\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        args\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        args:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        satelliteId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        satelliteId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Interpreter } from \"xstate\";\n\nimport { SatelliteTask } from \".\";\n\nexport interface ProcessedStateMachine {\n    interpreted: Interpreter;\n    logger: any;\n}\n\n// export interface SendSatelliteTask {\n//     satelliteid: string;\n//     tasks: SatelliteTask[]; // Fix this\n// }\n\nexport interface SendEvent {\n    to: string;\n    type: string;\n    delay?: number;\n    satelliteId: string;\n}\n\nexport interface TriggerContext {\n    to: string;\n    satelliteId: string;\n    method: string;\n    args?: any;\n    callback?: (err: string) => void;\n}\n\nexport interface StoreKey {\n    to: string;\n    satelliteId: string;\n    key: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Type.html":{"url":"classes/Type.html","title":"class - Type","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Type\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/apiSyncMachines.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                actions\n                            \n                            \n                                    Optional\n                                cond\n                            \n                            \n                                    Optional\n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        cond\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type ApiSyncMachineDocument = ApiSyncMachine & Document;\n\nclass Type {\n    @Prop()\n    target?: string;\n\n    @Prop()\n    cond?: string;\n\n    @Prop()\n    actions?: string[];\n}\n\nclass State {\n    @Prop()\n    entry?: string[];\n\n    @Prop()\n    exit?: string[];\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Config {\n    @Prop()\n    id: string;\n\n    @Prop()\n    initial: string;\n\n    @Prop({type: Object})\n    context: {\n        [key: string]: any;\n    };\n\n    @Prop({type: Object, of: State})\n    states: {\n        [key: string]: State;\n    }\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Options {\n    @Prop({type: Object, of: String})\n    actions?: {\n        [key: string]: string;\n    }\n\n    @Prop({type: Object, of: String})\n    guards?: {\n        [key: string]: string;\n    }\n}\n\nexport class MachineCommand {\n    @Prop()\n    target: string;\n\n    @Prop()\n    label: string;\n\n    @Prop()\n    args?: string;\n\n    @Prop()\n    style?: string;\n}\n\n@Schema({ collection: 'api_sync_machines', minimize: false })\nexport class ApiSyncMachine {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    applyTo: string[];\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    type: string;\n\n    @Prop()\n    commands?: MachineCommand[];\n\n    @Prop()\n    config: Config;\n    \n    @Prop()\n    options: Options;\n\n    @Prop({type: Object, of: String})\n    transitions: {\n        [key: string]: string;\n    };\n}\n\nexport const ApiSyncMachineSchema = SchemaFactory.createForClass(ApiSyncMachine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnProcessedStateMachine.html":{"url":"classes/UnProcessedStateMachine.html","title":"class - UnProcessedStateMachine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnProcessedStateMachine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/satelliteMachines.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                actions\n                            \n                            \n                                    Optional\n                                guards\n                            \n                            \n                                    Optional\n                                on\n                            \n                            \n                                    Optional\n                                states\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, of: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        guards\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, of: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        on\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, of: OnOptions})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        states\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, of: StateOptions})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SatelliteMachineDocument = SatelliteMachine & Document;\n\nclass OnOptions {\n    @Prop()\n    target?: string;\n\n    @Prop()\n    actions?: string[];\n\n    @Prop()\n    cond?: string;\n}\n\nclass StateOptions {\n    @Prop()\n    entry: string[];\n\n    @Prop()\n    exit: string[];\n\n    @Prop({type: Object, of: OnOptions})\n    on: {\n        [key: string]: OnOptions;\n    }\n}\n\nclass UnProcessedStateMachine {\n    @Prop({ type: Object, of: StateOptions })\n    states?: {\n        [key: string]: StateOptions;\n    }\n\n    @Prop({ type: Object, of: OnOptions })\n    on?: {\n        [key: string]: OnOptions;\n    }\n\n    @Prop({ type: Object, of: String })\n    guards?: {\n        [key: string]: string;\n    }\n\n    @Prop({ type: Object, of: String })\n    actions?: {\n        [key: string]: string;\n    }\n}\n\n@Schema({ collection: 'satellite_machines', minimize: false })\nexport class SatelliteMachine {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    children?: SatelliteMachine[];\n\n    @Prop({ type: Object })\n    options?: any;\n    \n    @Prop()\n    statemachine?: UnProcessedStateMachine;\n\n    @Prop()\n    onlymachine?: boolean;\n}\n\nexport const SatelliteMachineSchema = SchemaFactory.createForClass(SatelliteMachine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UnProcessedStateMachineOptions.html":{"url":"interfaces/UnProcessedStateMachineOptions.html","title":"interface - UnProcessedStateMachineOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UnProcessedStateMachineOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            actions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            guards\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            on\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            states\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guards\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        guards:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        on\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        on:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        states\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        states:         OptionTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OptionTypes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    // Target machine on API Sync\n    apimachine?: string;\n    // Method for stdout\n    outresponse?: string;\n    // Method for stderr maybe we don't use this. Only set error to true\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            variable\n            crypto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            variable\n            fs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            variable\n            fsPromises\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            variable\n            path\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            variable\n            pingKillTimer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            variable\n            pingTimer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.guard.ts\n            \n            guard\n            AuthGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            variable\n            fs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            variable\n            path\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            APISyncComplete\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            APISyncMessage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            APISyncService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            CreateAPIMachine\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            CustomPm2StartOptions\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            DependencyTree\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            FileFromClient\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            MachineCommand\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            OnOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            OptionTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            ProcessedTree\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            SatelliteMessage\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            SatelliteOutput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            SatelliteTask\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            ServiceCommand\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            StartOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            StateMachineOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            StateOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            UnProcessedStateMachineOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/connection.interface.ts\n            \n            interface\n            APISyncStateMachineObject\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interfaces/connection.interface.ts\n            \n            interface\n            LocalFiles\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interfaces/connection.interface.ts\n            \n            interface\n            MessageToSatellite\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interfaces/connection.interface.ts\n            \n            interface\n            SatelliteConnection\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/interfaces/connection.interface.ts\n            \n            interface\n            SciDapDuplexStream\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interfaces/stateMachines.interface.ts\n            \n            interface\n            ProcessedStateMachine\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interfaces/stateMachines.interface.ts\n            \n            interface\n            SendEvent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/stateMachines.interface.ts\n            \n            interface\n            StoreKey\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/stateMachines.interface.ts\n            \n            interface\n            TriggerContext\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/interfaces/tasksQueue.interface.ts\n            \n            interface\n            Output\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/lib/logger.ts\n            \n            variable\n            stateLogger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mongoConnection/apiSyncMachines.service.ts\n            \n            injectable\n            ApiSyncMachinesService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mongoConnection/cwl.service.ts\n            \n            injectable\n            CWLService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/mongoConnection/labs.service.ts\n            \n            injectable\n            LabService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/mongoConnection/samples.service.ts\n            \n            injectable\n            SamplesService\n            \n                68 %\n                (11/16)\n            \n        \n        \n            \n                \n                src/mongoConnection/satellite.service.ts\n            \n            injectable\n            SatelliteService\n            \n                42 %\n                (6/14)\n            \n        \n        \n            \n                \n                src/mongoConnection/satelliteMachines.service.ts\n            \n            injectable\n            SatelliteMachineService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mongoConnection/satelliteTasks.service.ts\n            \n            injectable\n            SatelliteTasksService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/apiSyncMachines.schema.ts\n            \n            class\n            ApiSyncMachine\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/apiSyncMachines.schema.ts\n            \n            class\n            Config\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/apiSyncMachines.schema.ts\n            \n            class\n            MachineCommand\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/apiSyncMachines.schema.ts\n            \n            class\n            Options\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/apiSyncMachines.schema.ts\n            \n            class\n            State\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/apiSyncMachines.schema.ts\n            \n            class\n            Type\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/apiSyncMachines.schema.ts\n            \n            variable\n            ApiSyncMachineSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/cwl.schema.ts\n            \n            class\n            CWL\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/cwl.schema.ts\n            \n            class\n            Date\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/cwl.schema.ts\n            \n            class\n            Description\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/cwl.schema.ts\n            \n            class\n            git\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/cwl.schema.ts\n            \n            class\n            Metadata\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/cwl.schema.ts\n            \n            variable\n            CWLSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/lab.schema.ts\n            \n            class\n            Lab\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/lab.schema.ts\n            \n            variable\n            LabSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/sample.schema.ts\n            \n            class\n            Date\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/sample.schema.ts\n            \n            class\n            Sample\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/sample.schema.ts\n            \n            variable\n            SampleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satellite.schema.ts\n            \n            class\n            AbsoluteUrlSettings\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satellite.schema.ts\n            \n            class\n            PublicInformation\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satellite.schema.ts\n            \n            class\n            Satellite\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satellite.schema.ts\n            \n            interface\n            RemoteModule\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satellite.schema.ts\n            \n            variable\n            SatelliteSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satelliteMachines.schema.ts\n            \n            class\n            OnOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satelliteMachines.schema.ts\n            \n            class\n            SatelliteMachine\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satelliteMachines.schema.ts\n            \n            class\n            StateOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satelliteMachines.schema.ts\n            \n            class\n            UnProcessedStateMachine\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satelliteMachines.schema.ts\n            \n            variable\n            SatelliteMachineSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satelliteTask.schema.ts\n            \n            class\n            SatelliteTask\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satelliteTask.schema.ts\n            \n            variable\n            SatelliteTaskSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/serviceTag.schema.ts\n            \n            class\n            ServiceTag\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/serviceTag.schema.ts\n            \n            variable\n            ServiceTagSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/subdomain.schema.ts\n            \n            class\n            SubDomain\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/subdomain.schema.ts\n            \n            variable\n            SubDomainSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/task.schema.ts\n            \n            class\n            Date\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/task.schema.ts\n            \n            class\n            TasksQueue\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/task.schema.ts\n            \n            variable\n            TasksQueueSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mongoConnection/subDomain.service.ts\n            \n            injectable\n            SubDomainService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/mongoConnection/tasksQueue.service.ts\n            \n            injectable\n            TasksQueueService\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/rpc-connection.filter.ts\n            \n            class\n            ExceptionFilter\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/satInterface/satInterface.controller.ts\n            \n            controller\n            SatInterfaceController\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/stateMachines/stateMachines.service.ts\n            \n            injectable\n            StateMachinesService\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/stateMachines/stateMachines.service.ts\n            \n            variable\n            path\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @grpc/proto-loader : 0.5.5\n        \n            @nestjs/axios : 0.0.4\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^1.1.6\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/microservices : 7.5.1\n        \n            @nestjs/mongoose : ^7.2.0\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/schedule : ^1.0.2\n        \n            bunyan : ^1.8.15\n        \n            crypto : ^1.0.1\n        \n            cwlts : ^1.23.2\n        \n            grpc : 1.24.4\n        \n            mongoose : ^5.11.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            uuid : ^8.3.2\n        \n            xstate : ^4.26.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/git.html":{"url":"classes/git.html","title":"class - git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  git\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/cwl.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                local_path\n                            \n                            \n                                message\n                            \n                            \n                                path\n                            \n                            \n                                remote\n                            \n                            \n                                sha\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        local_path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remote\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sha\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type CWLDocument = CWL & Document;\n\nclass Date {\n    @Prop()\n    modified: number;\n}\n\nclass Description {\n    @Prop()\n    author: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    info: string;\n\n    @Prop()\n    label: string;\n\n    @Prop()\n    url: string;\n\n    @Prop()\n    version: string;\n}\n\nclass git {\n    @Prop()\n    message: string;\n\n    @Prop()\n    path: string;\n\n    @Prop()\n    remote: string;\n\n    @Prop()\n    sha: string;\n\n    @Prop()\n    local_path: string;\n}\n\nclass Metadata {\n    @Prop()\n    path: string;\n\n    @Prop()\n    source: string;\n}\n\n@Schema({ collection: 'CWL' })\nexport class CWL {\n    @Prop()\n    _id: string;\n\n    @Prop({ type: Date })\n    date: Date;\n\n    @Prop()\n    description: Description;\n\n    @Prop()\n    git: git;\n\n    @Prop()\n    metadata: Metadata[];\n\n    @Prop()\n    servicetags: string[];\n\n    @Prop()\n    tags: string[];\n\n    @Prop({ type: Object })\n    upstream: any;\n\n    @Prop({ type: Object })\n    source: {\n        json: string;\n        packed: string;\n        source: string;\n    };\n}\n\nexport const CWLSchema = SchemaFactory.createForClass(CWL);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoConnectionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SatInterfaceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StateMachineModules\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_MongoConnectionModule\n\n\n\ncluster_MongoConnectionModule_exports\n\n\n\ncluster_MongoConnectionModule_providers\n\n\n\ncluster_StateMachineModules\n\n\n\ncluster_StateMachineModules_exports\n\n\n\ncluster_StateMachineModules_providers\n\n\n\n\nMongoConnectionModule\n\nMongoConnectionModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nMongoConnectionModule->AppModule\n\n\n\n\n\nApiSyncMachinesService \n\nApiSyncMachinesService \n\nApiSyncMachinesService  -->\n\nMongoConnectionModule->ApiSyncMachinesService \n\n\n\n\n\nCWLService \n\nCWLService \n\nCWLService  -->\n\nMongoConnectionModule->CWLService \n\n\n\n\n\nLabService \n\nLabService \n\nLabService  -->\n\nMongoConnectionModule->LabService \n\n\n\n\n\nSamplesService \n\nSamplesService \n\nSamplesService  -->\n\nMongoConnectionModule->SamplesService \n\n\n\n\n\nSatelliteMachineService \n\nSatelliteMachineService \n\nSatelliteMachineService  -->\n\nMongoConnectionModule->SatelliteMachineService \n\n\n\n\n\nSatelliteService \n\nSatelliteService \n\nSatelliteService  -->\n\nMongoConnectionModule->SatelliteService \n\n\n\n\n\nSatelliteTasksService \n\nSatelliteTasksService \n\nSatelliteTasksService  -->\n\nMongoConnectionModule->SatelliteTasksService \n\n\n\n\n\nSubDomainService \n\nSubDomainService \n\nSubDomainService  -->\n\nMongoConnectionModule->SubDomainService \n\n\n\n\n\nTasksQueueService \n\nTasksQueueService \n\nTasksQueueService  -->\n\nMongoConnectionModule->TasksQueueService \n\n\n\n\n\nStateMachineModules\n\nStateMachineModules\n\nStateMachineModules -->\n\nMongoConnectionModule->StateMachineModules\n\n\n\n\n\nAppService \n\nAppService \n\nAppService  -->\n\nAppModule->AppService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nApiSyncMachinesService\n\nApiSyncMachinesService\n\nMongoConnectionModule -->\n\nApiSyncMachinesService->MongoConnectionModule\n\n\n\n\n\nCWLService\n\nCWLService\n\nMongoConnectionModule -->\n\nCWLService->MongoConnectionModule\n\n\n\n\n\nLabService\n\nLabService\n\nMongoConnectionModule -->\n\nLabService->MongoConnectionModule\n\n\n\n\n\nSamplesService\n\nSamplesService\n\nMongoConnectionModule -->\n\nSamplesService->MongoConnectionModule\n\n\n\n\n\nSatelliteMachineService\n\nSatelliteMachineService\n\nMongoConnectionModule -->\n\nSatelliteMachineService->MongoConnectionModule\n\n\n\n\n\nSatelliteService\n\nSatelliteService\n\nMongoConnectionModule -->\n\nSatelliteService->MongoConnectionModule\n\n\n\n\n\nSatelliteTasksService\n\nSatelliteTasksService\n\nMongoConnectionModule -->\n\nSatelliteTasksService->MongoConnectionModule\n\n\n\n\n\nSubDomainService\n\nSubDomainService\n\nMongoConnectionModule -->\n\nSubDomainService->MongoConnectionModule\n\n\n\n\n\nTasksQueueService\n\nTasksQueueService\n\nMongoConnectionModule -->\n\nTasksQueueService->MongoConnectionModule\n\n\n\n\n\nStateMachinesService \n\nStateMachinesService \n\nStateMachinesService  -->\n\nStateMachineModules->StateMachinesService \n\n\n\n\n\nStateMachinesService\n\nStateMachinesService\n\nStateMachineModules -->\n\nStateMachinesService->StateMachineModules\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    27 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    30 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiSyncMachineDocument   (src/.../apiSyncMachines.schema.ts)\n                        \n                        \n                            CWLDocument   (src/.../cwl.schema.ts)\n                        \n                        \n                            LabDocument   (src/.../lab.schema.ts)\n                        \n                        \n                            SampleDocument   (src/.../sample.schema.ts)\n                        \n                        \n                            SatelliteDocument   (src/.../satellite.schema.ts)\n                        \n                        \n                            SatelliteMachineDocument   (src/.../satelliteMachines.schema.ts)\n                        \n                        \n                            SatelliteTaskDocument   (src/.../satelliteTask.schema.ts)\n                        \n                        \n                            ServiceTagDocument   (src/.../serviceTag.schema.ts)\n                        \n                        \n                            SubDomainDocument   (src/.../subdomain.schema.ts)\n                        \n                        \n                            TasksQueueDocument   (src/.../task.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/mongoConnection/schemas/apiSyncMachines.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ApiSyncMachineDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/mongoConnection/schemas/cwl.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CWLDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/mongoConnection/schemas/lab.schema.ts\n    \n    \n        \n            \n                \n                    \n                    LabDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/mongoConnection/schemas/sample.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SampleDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/mongoConnection/schemas/satellite.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SatelliteDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/mongoConnection/schemas/satelliteMachines.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SatelliteMachineDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/mongoConnection/schemas/satelliteTask.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SatelliteTaskDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/mongoConnection/schemas/serviceTag.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ServiceTagDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/mongoConnection/schemas/subdomain.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SubDomainDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/mongoConnection/schemas/task.schema.ts\n    \n    \n        \n            \n                \n                    \n                    TasksQueueDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiSyncMachineSchema   (src/.../apiSyncMachines.schema.ts)\n                        \n                        \n                            crypto   (src/.../app.controller.ts)\n                        \n                        \n                            CWLSchema   (src/.../cwl.schema.ts)\n                        \n                        \n                            fs   (src/.../app.controller.ts)\n                        \n                        \n                            fs   (src/.../app.service.ts)\n                        \n                        \n                            fsPromises   (src/.../app.controller.ts)\n                        \n                        \n                            LabSchema   (src/.../lab.schema.ts)\n                        \n                        \n                            path   (src/.../app.controller.ts)\n                        \n                        \n                            path   (src/.../app.service.ts)\n                        \n                        \n                            path   (src/.../stateMachines.service.ts)\n                        \n                        \n                            pingKillTimer   (src/.../app.controller.ts)\n                        \n                        \n                            pingTimer   (src/.../app.controller.ts)\n                        \n                        \n                            SampleSchema   (src/.../sample.schema.ts)\n                        \n                        \n                            SatelliteMachineSchema   (src/.../satelliteMachines.schema.ts)\n                        \n                        \n                            SatelliteSchema   (src/.../satellite.schema.ts)\n                        \n                        \n                            SatelliteTaskSchema   (src/.../satelliteTask.schema.ts)\n                        \n                        \n                            ServiceTagSchema   (src/.../serviceTag.schema.ts)\n                        \n                        \n                            stateLogger   (src/.../logger.ts)\n                        \n                        \n                            SubDomainSchema   (src/.../subdomain.schema.ts)\n                        \n                        \n                            TasksQueueSchema   (src/.../task.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/mongoConnection/schemas/apiSyncMachines.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiSyncMachineSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(ApiSyncMachine)\n                    \n                \n\n\n        \n    \n\n    src/app.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        crypto\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require(\"crypto\")\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('fs')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fsPromises\n                        \n                    \n                \n            \n                \n                    \n                        Default value : fs.promises\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('path')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pingKillTimer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60000\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pingTimer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30000\n                    \n                \n\n\n        \n    \n\n    src/mongoConnection/schemas/cwl.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CWLSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(CWL)\n                    \n                \n\n\n        \n    \n\n    src/app.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('fs')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('path')\n                    \n                \n\n\n        \n    \n\n    src/mongoConnection/schemas/lab.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LabSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Lab)\n                    \n                \n\n\n        \n    \n\n    src/stateMachines/stateMachines.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('path')\n                    \n                \n\n\n        \n    \n\n    src/mongoConnection/schemas/sample.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SampleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Sample)\n                    \n                \n\n\n        \n    \n\n    src/mongoConnection/schemas/satelliteMachines.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SatelliteMachineSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(SatelliteMachine)\n                    \n                \n\n\n        \n    \n\n    src/mongoConnection/schemas/satellite.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SatelliteSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Satellite)\n                    \n                \n\n\n        \n    \n\n    src/mongoConnection/schemas/satelliteTask.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SatelliteTaskSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(SatelliteTask)\n                    \n                \n\n\n        \n    \n\n    src/mongoConnection/schemas/serviceTag.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ServiceTagSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(ServiceTag)\n                    \n                \n\n\n        \n    \n\n    src/lib/logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        stateLogger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (name: string, satelliteId: string) => {\n    const logDir = resolve(__dirname, '../../satellite-logs', satelliteId);\n    try {\n        await fsPromises.access(logDir);\n    } catch (err) {\n        await fsPromises.mkdir(logDir);\n    }\n\n    return bunyan.createLogger({\n        name: `${satelliteId} State Machine ${name}`,\n        streams:\n            process.env.API_ENV === 'test' && !process.env.LOGS\n                ? []\n                : [\n                      {\n                          level: 'info',\n                          path: resolve(__dirname, logDir, 'statemachine.log'),\n                      },\n                      {\n                          level: process.env.LOG_LEVEL ? process.env.LOG_LEVEL : 'info',\n                          stream: process.stdout,\n                      },\n                  ],\n    });\n}\n                    \n                \n\n\n        \n    \n\n    src/mongoConnection/schemas/subdomain.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SubDomainSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(SubDomain)\n                    \n                \n\n\n        \n    \n\n    src/mongoConnection/schemas/task.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TasksQueueSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(TasksQueue)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
