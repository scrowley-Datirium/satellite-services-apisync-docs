var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/APISyncComplete.html",[0,0.355,1,1.55]],["body/interfaces/APISyncComplete.html",[0,0.702,1,1.808,2,0.71,3,0.092,4,0.092,5,0.092,6,1.287,7,2.551,8,1.13,9,0.53,10,0.478,11,3.242,12,0.217,13,0.014,14,1.265,15,1.457,16,2.795,17,1.11,18,2.347,19,1.952,20,1.338,21,1.552,22,1.598,23,1.338,24,0.25,25,1.239,26,1.338,27,1.338,28,1.338,29,0.965,30,1.808,31,1.147,32,0.813,33,1.314,34,1.239,35,2.057,36,1.408,37,1.679,38,1.878,39,1.345,40,1.679,41,2.135,42,1.408,43,1.808,44,1.151,45,1.831,46,1.11,47,1.742,48,1.509,49,2.305,50,1.846,51,1.338,52,2.217,53,1.338,54,1.338,55,1.287,56,2.592,57,2.103,58,1.742,59,0.901,60,2.217,61,1.952,62,1.27,63,2.135,64,2.158,65,1.187,66,1.5,67,1.808,68,0.84,69,1.808,70,1.878,71,1.563,72,1.563,73,0.932,74,0.932,75,1.338,76,0.932,77,1.62,78,1.034,79,1.071,80,1.952,81,2.305,82,1.45,83,1.913,84,1.952,85,2.305,86,1.952,87,0.698,88,1.952,89,2.217,90,1.952,91,1.287,92,1.952,93,1.338,94,1.287,95,1.338,96,1.239,97,0.956,98,1.287,99,1.338,100,1.338,101,1.338,102,1.338,103,1.338,104,1.338,105,1.878,106,1.287,107,1.287,108,1.287,109,1.338,110,1.287,111,1.338,112,1.338,113,1.034,114,1.338,115,0.15,116,1.338,117,0.999,118,1.338,119,1.287,120,1.151,121,1.287,122,1.239,123,1.338,124,1.338,125,1.194,126,1.338,127,1.194,128,1.239,129,1.151,130,1.457,131,0.965,132,1.071,133,0.901,134,1.071,135,1.338,136,1.338,137,0.007,138,0.007]],["title/interfaces/APISyncMessage.html",[0,0.355,29,1.207]],["body/interfaces/APISyncMessage.html",[0,0.697,1,1.171,2,0.67,3,0.087,4,0.087,5,0.087,6,1.216,8,1.104,9,0.529,12,0.211,13,0.014,14,1.224,15,1.398,16,2.745,17,1.049,18,2.284,19,1.872,20,1.264,21,1.502,22,1.566,23,1.264,24,0.247,25,1.171,26,1.264,27,1.264,28,1.264,29,1.35,30,2.438,31,1.547,32,1.499,33,1.66,34,2.284,35,2.349,36,1.898,37,2.121,38,2.533,39,1.359,40,1.611,41,2.065,42,1.35,43,1.734,44,1.087,45,1.794,46,1.049,47,1.671,48,1.447,49,2.23,50,1.786,51,1.264,52,2.145,53,1.264,54,1.264,55,1.216,56,2.533,57,2.046,58,1.671,59,0.851,60,2.145,61,1.872,62,1.218,63,2.065,64,2.108,65,1.138,66,1.451,67,1.734,68,0.805,69,1.734,70,1.801,71,1.499,72,1.499,73,0.881,74,0.881,75,1.264,76,0.881,77,1.553,78,0.977,79,1.012,80,1.872,81,2.23,82,1.403,83,1.85,84,1.872,85,2.23,86,1.872,87,0.669,88,1.872,89,2.145,90,1.872,91,1.216,92,1.872,93,1.264,94,1.216,95,1.264,96,1.171,97,0.925,98,1.216,99,1.264,100,1.264,101,1.264,102,1.264,103,1.264,104,1.264,105,1.801,106,1.216,107,1.216,108,1.216,109,1.264,110,1.216,111,1.264,112,1.264,113,0.977,114,1.264,115,0.226,116,1.264,117,0.943,118,1.264,119,1.216,120,1.087,121,1.216,122,1.171,123,1.264,124,1.264,125,1.128,126,1.264,127,1.128,128,1.171,129,1.087,130,1.398,131,0.911,132,1.012,133,0.851,134,1.012,135,1.264,136,1.264,137,0.007,138,0.007,139,0.131,140,0.459,141,1.161]],["title/interfaces/APISyncService.html",[0,0.355,25,1.55]],["body/interfaces/APISyncService.html",[0,0.697,1,1.173,2,0.672,3,0.087,4,0.087,5,0.087,6,1.218,8,1.105,9,0.528,10,0.798,12,0.212,13,0.014,14,1.567,15,1.4,16,3.113,17,1.051,18,2.286,19,1.875,20,1.267,21,1.503,22,1.567,23,1.267,24,0.248,25,1.737,26,1.875,27,1.875,28,1.875,29,0.913,30,1.737,31,1.102,32,0.77,33,1.263,34,1.173,35,1.992,36,1.352,37,1.613,38,1.804,39,1.329,40,1.613,41,2.068,42,1.352,43,1.737,44,1.089,45,1.795,46,1.051,47,1.673,48,1.45,49,2.233,50,1.788,51,1.267,52,2.148,53,1.267,54,1.267,55,1.218,56,2.535,57,2.048,58,1.673,59,0.853,60,2.148,61,1.875,62,1.22,63,2.068,64,2.11,65,1.14,66,1.453,67,1.737,68,1.133,69,1.737,70,1.804,71,1.502,72,1.502,73,0.882,74,0.882,75,1.267,76,0.882,77,1.556,78,0.979,79,1.014,80,1.875,81,2.233,82,1.404,83,1.853,84,1.875,85,2.233,86,1.875,87,0.67,88,1.875,89,2.148,90,1.875,91,1.218,92,1.875,93,1.267,94,1.218,95,1.267,96,1.173,97,0.926,98,1.218,99,1.267,100,1.267,101,1.267,102,1.267,103,1.267,104,1.267,105,1.804,106,1.218,107,1.218,108,1.218,109,1.267,110,1.218,111,1.267,112,1.267,113,0.979,114,1.267,115,0.203,116,1.267,117,0.945,118,1.267,119,1.218,120,1.089,121,1.218,122,1.173,123,1.267,124,1.267,125,1.13,126,1.267,127,1.13,128,1.173,129,1.089,130,1.4,131,0.913,132,1.014,133,0.853,134,1.014,135,1.267,136,1.267,137,0.007,138,0.007,139,0.131,141,0.829,142,1.875,143,3.96,144,3.96,145,3.96,146,3.069,147,2.233,148,3.051,149,2.233,150,3.069,151,3.069]],["title/interfaces/APISyncStateMachineObject.html",[0,0.355,152,2.415]],["body/interfaces/APISyncStateMachineObject.html",[0,0.672,2,1.132,3,0.146,4,0.146,5,0.146,8,0.763,9,0.487,12,0.264,13,0.014,14,1.611,15,1.593,24,0.244,29,1.935,31,1.254,32,1.298,39,1.262,68,0.918,77,2.226,78,1.65,79,1.709,87,0.763,97,1.113,115,0.207,117,1.593,137,0.01,138,0.01,139,0.221,140,0.658,152,4.232,153,3.265,154,4.44,155,3.338,156,3.809,157,4.377,158,3.482,159,2.523,160,3.265,161,2.523,162,2.916,163,2.916,164,2.641,165,2.314,166,3.079,167,3.665,168,3.079,169,3.079,170,3.079,171,3.265,172,3.482,173,4.377,174,3.482,175,3.482,176,2.916,177,2.916,178,3.482,179,1.172,180,1.771]],["title/classes/AbsoluteUrlSettings.html",[181,0.073,182,2.415]],["body/classes/AbsoluteUrlSettings.html",[0,0.363,3,0.117,4,0.117,5,0.117,8,0.942,9,0.517,10,1.089,12,0.199,13,0.013,24,0.203,39,1.31,48,1.323,83,1.42,87,1.01,97,1.093,115,0.261,137,0.009,138,0.009,139,0.177,140,0.569,141,1.177,161,2.022,165,1.855,179,0.939,180,1.42,181,0.114,182,4.076,183,1.076,184,2.468,185,4.031,186,4.621,187,4.299,188,4.299,189,4.621,190,1.79,191,2.286,192,4.146,193,4.146,194,4.146,195,4.146,196,4.146,197,4.146,198,1.46,199,1.113,200,0.763,201,1.511,202,0.818,203,2.617,204,3.551,205,2.791,206,3.551,207,3.001,208,3.001,209,3.001,210,2.063,211,3.001,212,2.791,213,3.001,214,3.001,215,2.022,216,3.001,217,2.791,218,3.001,219,3.001,220,2.617,221,2.791,222,3.001,223,3.788,224,2.617,225,2.791,226,3.001,227,2.617,228,3.001,229,3.001,230,2.468,231,0.972,232,3.001,233,2.337,234,2.617,235,2.617,236,2.791,237,2.617,238,2.791,239,3.001,240,2.791,241,0.79,242,2.468,243,2.791]],["title/classes/ApiSyncMachine.html",[181,0.073,244,2.071]],["body/classes/ApiSyncMachine.html",[3,0.116,4,0.116,5,0.116,8,1.112,9,0.524,10,1.132,12,0.198,13,0.014,21,2.048,22,1.727,24,0.234,36,1.895,39,0.995,45,1.505,62,1.107,65,1.034,66,1.505,73,1.185,74,1.185,76,1.185,82,1.07,115,0.262,130,1.961,131,1.895,133,1.145,134,1.362,137,0.009,138,0.009,139,0.176,140,0.567,141,0.859,179,0.934,181,0.132,183,1.07,190,1.86,191,2.252,198,1.455,199,1.107,200,0.758,201,1.505,202,0.813,210,2.06,231,1.492,241,0.785,244,3.251,245,2.209,246,4.019,247,2.528,248,4.122,249,4.122,250,4.122,251,4.122,252,4.122,253,4.122,254,1.636,255,2.825,256,4.122,257,4.122,258,2.324,259,2.734,260,1.463,261,2.602,262,2.209,263,2.602,264,2.011,265,1.575,266,2.209,267,2.454]],["title/injectables/ApiSyncMachinesService.html",[268,1.294,269,2.561]],["body/injectables/ApiSyncMachinesService.html",[3,0.159,4,0.159,5,0.159,10,1.009,12,0.272,13,0.013,24,0.179,59,1.56,68,0.997,115,0.179,137,0.011,138,0.011,139,0.24,141,0.86,142,2.823,147,2.318,149,2.318,181,0.101,200,1.033,202,1.108,244,2.868,247,2.229,258,3.166,268,2.182,269,4.318,270,2.739,271,4.894,272,3.044,273,6.691,274,3.061,275,5.616,276,4.329,277,5.616,278,6.84,279,5.616,280,3.193,281,1.993,282,3.166,283,4.894,284,5.616,285,2.621,286,2.318,287,3.061,288,5.616,289,4.419,290,4.419]],["title/controllers/AppController.html",[291,2.731,292,2.936]],["body/controllers/AppController.html",[2,0.323,3,0.042,4,0.042,5,0.042,8,0.799,9,0.394,10,0.709,12,0.246,13,0.014,14,1.163,15,0.455,17,0.505,21,0.41,22,0.592,24,0.047,31,1.747,32,1.358,34,1.684,36,0.752,38,1.003,45,1.053,46,2.069,47,2.082,48,1.406,50,1.295,58,0.93,59,1.504,65,0.37,68,1.072,71,1.094,78,0.471,79,0.488,82,0.383,87,0.373,94,1.314,96,0.564,97,1.003,110,1.907,113,1.978,115,0.197,117,0.778,120,2.007,125,0.93,131,0.752,132,2.176,137,0.004,138,0.005,139,0.063,141,0.736,142,1.042,143,3.416,144,2.201,145,3.416,147,1.983,149,1.983,154,0.879,155,1.13,162,3.187,163,0.832,164,2.765,165,0.66,166,0.879,167,2.21,168,0.879,169,0.879,170,0.879,171,2.09,176,0.832,180,0.505,181,0.026,185,2.474,190,0.803,220,2.09,224,2.09,230,1.971,235,2.09,236,2.229,237,2.09,238,2.967,240,2.639,241,1.506,259,1.684,260,1.175,265,0.564,269,1.594,272,2.419,274,0.66,281,0.524,285,2.895,286,1.042,287,3.27,291,1.701,292,1.828,293,0.994,294,1.162,295,2.526,296,2.526,297,2.526,298,2.526,299,2.526,300,3.311,301,1.476,302,3.716,303,2.526,304,2.526,305,1.476,306,3.92,307,2.526,308,1.476,309,2.526,310,4.187,311,1.476,312,2.526,313,2.201,314,3.416,315,2.886,316,0.806,317,3.311,318,4.612,319,2.396,320,2.526,321,2.837,322,2.886,323,2.526,324,1.476,325,2.526,326,3.311,327,2.526,328,2.526,329,2.526,330,2.526,331,2.201,332,2.526,333,1.476,334,1.476,335,1.476,336,1.476,337,1.476,338,1.068,339,1.988,340,1.068,341,2.201,342,0.994,343,1.476,344,1.476,345,1.476,346,1.701,347,1.476,348,3.311,349,3.92,350,1.476,351,1.476,352,1.068,353,1.068,354,1.286,355,1.068,356,1.068,357,1.476,358,1.424,359,1.068,360,1.068,361,1.286,362,1.476,363,1.504,364,1.286,365,1.353,366,1.068,367,1.504,368,1.286,369,1.476,370,0.879,371,0.879,372,1.594,373,1.476,374,1.594,375,1.476,376,1.162,377,1.162,378,1.988,379,1.286,380,1.476,381,2.526,382,1.988,383,1.286,384,2.396,385,1.476,386,1.476,387,1.476,388,1.476,389,1.286,390,1.286,391,1.162,392,1.286,393,1.068,394,1.286,395,1.286,396,1.286,397,1.476,398,1.476,399,1.476,400,1.162,401,1.476,402,3.311,403,1.504,404,1.476,405,1.476,406,1.476,407,2.887,408,1.988,409,1.476,410,2.526,411,2.758,412,2.913,413,1.476,414,1.476,415,1.476,416,1.476,417,1.476,418,1.476,419,1.162,420,1.476,421,1.476,422,1.476,423,1.476,424,1.476,425,4.187,426,1.476,427,1.476,428,3.311,429,3.032,430,4.804,431,3.311,432,1.476,433,2.526,434,3.311,435,2.1,436,1.476,437,2.201,438,1.476,439,2.526,440,1.476,441,1.286,442,1.988,443,2.201,444,1.476,445,0.932,446,1.476,447,0.994,448,1.476,449,1.476,450,4.04,451,1.476,452,1.286,453,1.476,454,1.476,455,1.162,456,1.353,457,1.286,458,1.476,459,1.476,460,1.476,461,3.311,462,2.886,463,2.886,464,3.311,465,3.311,466,1.068,467,1.476,468,2.526,469,1.476,470,1.476,471,1.476,472,1.476,473,1.476,474,3.92,475,1.286,476,1.476,477,1.476,478,1.286,479,1.286,480,1.476,481,1.286,482,1.476,483,1.476,484,1.476,485,2.201,486,2.886,487,1.476,488,1.476,489,1.476,490,1.476,491,1.476,492,1.476,493,1.476,494,1.476,495,2.639,496,2.639,497,1.476,498,1.476,499,1.476,500,2.526,501,1.476,502,1.476,503,1.476,504,1.476,505,1.476,506,1.476,507,1.286,508,1.476,509,1.476,510,1.476,511,1.476,512,1.476,513,1.476,514,3.311,515,3.311,516,2.526,517,1.476,518,1.476,519,1.476,520,1.476,521,1.476,522,1.476,523,1.286,524,2.526,525,1.068,526,1.476,527,1.476,528,2.526,529,1.476,530,2.201,531,1.476,532,1.476,533,1.476,534,2.396,535,2.201,536,1.476,537,1.476,538,1.476,539,1.476,540,1.476,541,2.526,542,1.476,543,2.526,544,1.476,545,3.311,546,1.476,547,2.526,548,1.476,549,3.085,550,1.476,551,1.476,552,2.526,553,2.526,554,2.526,555,0.994,556,1.476,557,1.476,558,2.526,559,1.476,560,3.311,561,1.828,562,1.286,563,1.286,564,2.526,565,1.988,566,2.526,567,1.162,568,1.476,569,3.311,570,1.476,571,1.476,572,1.476,573,0.994,574,1.476,575,1.162,576,1.476,577,1.476,578,1.476,579,1.476,580,1.476,581,1.476,582,1.476,583,1.476,584,1.476,585,1.476,586,1.476,587,3.311,588,1.476,589,1.476,590,1.476,591,2.201,592,1.476,593,1.286,594,1.476,595,1.476,596,1.476,597,1.476,598,1.476,599,0.994,600,1.476,601,1.476,602,1.476,603,1.476,604,2.25,605,1.476,606,1.476,607,1.476,608,1.476,609,1.476,610,1.476,611,1.286,612,1.476,613,1.476,614,3.92,615,1.476,616,3.92,617,1.476,618,2.201,619,1.476,620,2.526,621,1.286,622,1.476,623,2.526,624,1.476,625,1.476,626,1.476,627,1.476,628,1.476,629,1.476,630,2.526,631,1.476,632,1.286,633,1.162,634,1.476,635,1.476,636,1.476,637,1.476,638,1.476,639,2.526,640,1.476,641,1.476,642,1.476,643,1.476,644,1.476,645,1.476,646,1.476,647,1.476,648,1.476,649,1.476,650,1.476,651,1.476,652,1.476,653,1.476,654,1.162,655,1.286,656,2.201,657,1.476,658,1.476,659,1.476,660,1.476,661,1.286,662,1.476,663,1.476,664,1.476,665,2.526,666,1.286,667,1.476,668,1.476,669,1.476,670,1.476,671,1.476,672,1.476,673,1.476,674,1.476,675,2.526,676,1.476,677,2.201]],["title/modules/AppModule.html",[678,2.287,679,2.561]],["body/modules/AppModule.html",[3,0.141,4,0.141,5,0.141,12,0.29,13,0.014,24,0.158,59,1.385,137,0.01,138,0.01,181,0.089,200,0.917,272,2.057,281,1.769,292,5.058,293,4.276,339,5.791,340,3.607,342,3.356,358,4.64,359,3.607,678,3.58,679,5.095,680,2.967,681,4.009,682,4.344,683,4.344,684,4.344,685,4.344,686,4.905,687,4.596,688,3.607,689,3.356,690,4.985,691,4.998,692,5.058,693,4.998,694,4.16,695,5.535,696,6.351,697,4.344,698,4.985,699,3.922,700,4.985,701,4.596,702,4.985,703,4.276,704,4.985,705,4.344,706,6.091,707,4.985,708,4.985,709,4.985,710,4.985,711,4.985,712,4.985,713,4.985,714,4.985,715,3.356]],["title/injectables/AppService.html",[268,1.294,358,2.287]],["body/injectables/AppService.html",[2,0.549,3,0.071,4,0.071,5,0.135,8,0.575,9,0.335,10,1.033,12,0.248,13,0.014,17,0.858,21,1.083,22,1.369,24,0.08,29,0.746,31,1.416,32,1.551,46,2.284,47,1.435,48,1.243,59,0.696,62,1.448,65,0.977,66,1.448,68,0.691,71,1.287,97,1.058,98,0.995,115,0.171,129,0.89,131,1.738,137,0.006,138,0.006,139,0.107,140,0.394,141,0.597,142,1.608,147,1.608,149,2.225,154,2.845,155,1.121,161,1.901,164,1.99,165,1.743,180,0.858,181,0.045,190,0.608,233,4.469,241,1.49,254,0.995,259,2.655,265,1.489,268,1.243,270,1.222,272,2.828,274,1.743,280,1.819,281,0.89,285,2.517,286,2.225,287,2.139,302,2.82,310,2.184,316,0.799,319,1.814,346,1.687,352,1.814,355,1.814,358,2.197,363,3.476,364,2.184,365,2.889,366,1.814,370,1.492,371,1.492,392,3.396,393,3.459,403,1.492,407,1.28,411,1.222,412,2.316,419,1.972,435,3.934,442,1.972,450,1.972,456,3.313,495,2.623,496,2.623,525,1.814,534,4.474,535,2.184,555,1.687,561,4.474,604,2.982,611,2.184,618,2.184,654,3.066,677,2.184,689,1.687,694,1.492,699,1.972,706,3.396,715,1.687,716,1.972,717,4.78,718,4.78,719,4.78,720,4.78,721,4.78,722,3.04,723,5.391,724,5.391,725,3.896,726,2.506,727,4.166,728,3.209,729,4.78,730,3.403,731,3.896,732,3.896,733,2.506,734,4.78,735,5.388,736,5.972,737,3.896,738,5.613,739,3.761,740,2.506,741,3.896,742,3.896,743,2.506,744,3.896,745,3.396,746,1.972,747,6.217,748,2.506,749,2.506,750,2.506,751,2.506,752,2.506,753,2.506,754,1.343,755,2.184,756,2.184,757,3.218,758,2.506,759,1.814,760,2.506,761,2.506,762,2.184,763,2.506,764,2.506,765,2.506,766,2.506,767,2.506,768,2.506,769,2.506,770,2.506,771,2.506,772,2.506,773,2.506,774,2.506,775,2.506,776,2.506,777,2.506,778,3.896,779,2.506,780,2.506,781,2.506,782,3.896,783,5.078,784,3.396,785,2.506,786,2.506,787,2.506,788,2.506,789,2.506,790,2.506,791,2.506,792,2.506,793,5.391,794,3.896,795,2.506,796,3.896,797,2.506,798,2.184,799,2.506,800,2.506,801,2.506,802,2.506,803,5.391,804,4.78,805,2.506,806,5.391,807,6.182,808,3.896,809,3.896,810,3.896,811,3.896,812,3.896,813,3.896,814,3.896,815,2.506,816,4.78,817,2.506,818,1.972,819,2.506,820,3.396,821,3.896,822,3.896,823,5.84,824,2.506,825,2.506,826,3.896,827,2.184,828,2.506,829,2.184,830,2.506,831,2.506,832,2.506,833,3.896,834,2.506,835,2.506,836,2.184,837,2.506,838,2.506,839,2.184,840,2.506,841,2.506,842,2.506,843,1.413,844,2.184,845,2.506]],["title/guards/AuthGuard.html",[356,2.936,846,2.731]],["body/guards/AuthGuard.html",[3,0.144,4,0.144,5,0.144,10,0.948,12,0.262,13,0.013,14,1.456,24,0.162,59,1.412,65,1.275,68,1.141,97,1.1,115,0.204,122,1.942,137,0.01,138,0.01,139,0.217,141,0.985,142,2.653,147,2.653,149,2.097,181,0.091,235,3.207,241,0.968,262,3.445,268,2.051,272,2.91,274,2.876,280,3.001,281,1.804,285,2.372,286,2.097,287,2.876,316,1.621,338,3.677,356,4.653,365,3.971,366,3.677,370,3.025,371,3.025,393,4.653,407,2.595,411,2.478,412,2.182,435,2.723,445,3.207,466,3.677,525,4.653,575,3.998,604,2.595,735,4.428,820,4.428,847,4.428,848,7.411,849,5.081,850,5.081,851,6.429,852,7.411,853,5.081,854,6.429,855,5.603,856,4.428,857,4.428,858,5.081,859,5.081,860,3.998,861,4.428,862,5.081,863,4.428,864,5.081,865,5.081,866,5.081,867,5.081]],["title/classes/CWL.html",[181,0.073,868,2.174]],["body/classes/CWL.html",[3,0.163,4,0.211,5,0.122,9,0.519,10,1.158,12,0.204,13,0.013,14,1.691,24,0.207,87,0.635,113,1.374,115,0.259,133,1.197,137,0.009,138,0.009,139,0.184,140,0.584,148,3.671,179,0.976,180,1.976,181,0.13,183,1.118,190,1.903,191,2.271,198,1.498,199,1.157,200,0.792,201,1.55,202,0.85,210,1.868,215,2.101,231,1.526,241,0.821,254,1.71,255,2.397,316,2.432,868,3.727,869,2.428,870,3.468,871,4.444,872,3.875,873,4.383,874,4.307,875,4.307,876,4.307,877,4.307,878,4.307,879,4.307,880,4.307,881,4.307,882,4.307,883,2.564,884,2.199,885,2.564,886,2.9,887,2.719,888,2.9,889,2.9,890,2.9,891,2.9,892,2.428,893,2.719]],["title/injectables/CWLService.html",[268,1.294,894,2.561]],["body/injectables/CWLService.html",[3,0.151,4,0.151,5,0.219,9,0.448,10,0.978,12,0.267,13,0.013,24,0.17,68,1.176,115,0.211,137,0.01,138,0.01,139,0.228,141,1.016,142,2.735,147,2.735,149,2.202,181,0.096,200,0.981,202,1.053,231,1.69,260,2.677,268,2.114,270,2.602,272,2.976,274,2.966,276,4.252,280,3.094,281,1.894,282,3.008,285,2.49,286,2.202,316,1.702,604,2.724,868,4.156,883,3.176,894,4.184,895,4.65,896,4.797,897,5.335,898,5.335,899,6.628,900,5.216,901,5.335,902,5.216,903,5.216,904,4.65,905,5.335,906,5.335,907,3.592]],["title/classes/Config.html",[21,1.127,181,0.073]],["body/classes/Config.html",[3,0.121,4,0.121,5,0.121,8,1.123,9,0.524,10,1.068,12,0.204,13,0.013,21,1.929,22,1.523,24,0.237,36,1.276,39,0.761,45,1.545,62,1.744,65,1.076,66,1.545,73,1.233,74,1.233,76,1.233,82,1.113,115,0.261,130,1.773,131,1.276,133,1.191,134,1.417,137,0.009,138,0.009,139,0.183,140,0.582,141,0.882,179,0.971,181,0.134,183,1.113,190,1.756,191,2.238,198,1.494,199,1.151,200,0.789,201,1.545,202,0.846,210,2.128,231,1.005,241,0.817,244,2.939,245,2.297,246,2.707,247,1.702,254,2.579,255,2.918,258,2.417,259,2.982,260,2.306,261,4.101,262,3.481,263,2.707,264,2.091,265,1.639,266,2.297,267,2.552,908,4.288,909,4.288,910,4.288,911,4.288,912,4.288]],["title/interfaces/CreateAPIMachine.html",[0,0.355,129,1.44]],["body/interfaces/CreateAPIMachine.html",[0,0.697,1,1.176,2,0.673,3,0.087,4,0.087,5,0.087,6,1.221,8,1.105,9,0.529,12,0.212,13,0.014,14,1.227,15,1.402,16,2.749,17,1.053,18,2.288,19,1.878,20,1.269,21,1.975,22,1.756,23,1.269,24,0.248,25,1.176,26,1.269,27,1.269,28,1.269,29,0.915,30,1.739,31,1.55,32,0.772,33,1.265,34,1.176,35,1.995,36,1.902,37,1.616,38,1.807,39,1.33,40,1.616,41,2.071,42,1.354,43,1.739,44,1.092,45,1.797,46,1.053,47,1.676,48,1.452,49,2.236,50,1.79,51,1.269,52,2.151,53,1.269,54,1.269,55,1.221,56,2.537,57,2.05,58,1.676,59,0.855,60,2.151,61,1.878,62,1.222,63,2.071,64,2.112,65,1.142,66,1.455,67,1.739,68,0.808,69,1.739,70,1.807,71,1.504,72,1.504,73,0.884,74,0.884,75,1.269,76,0.884,77,1.558,78,0.981,79,1.016,80,1.878,81,2.236,82,1.406,83,1.855,84,1.878,85,2.236,86,1.878,87,0.671,88,1.878,89,2.151,90,1.878,91,1.221,92,1.878,93,1.269,94,1.221,95,1.269,96,1.176,97,0.927,98,1.221,99,1.269,100,1.269,101,1.269,102,1.269,103,1.269,104,1.269,105,1.807,106,1.221,107,1.221,108,1.221,109,1.269,110,1.221,111,1.269,112,1.269,113,0.981,114,1.269,115,0.235,116,1.269,117,0.947,118,1.269,119,1.221,120,1.092,121,1.221,122,1.176,123,1.269,124,1.269,125,1.133,126,1.269,127,1.133,128,1.176,129,1.616,130,1.845,131,1.782,132,1.978,133,0.855,134,1.016,135,1.269,136,1.269,137,0.007,138,0.007,139,0.131,140,0.46,141,1.025,254,1.807,321,3.294]],["title/interfaces/CustomPm2StartOptions.html",[0,0.355,41,1.55]],["body/interfaces/CustomPm2StartOptions.html",[0,0.688,1,1.071,2,0.614,3,0.079,4,0.079,5,0.079,6,1.113,8,1.082,9,0.53,12,0.202,13,0.014,14,1.161,15,1.579,16,2.666,17,0.96,18,2.348,19,1.753,20,1.157,21,1.424,22,1.515,23,1.157,24,0.244,25,1.071,26,1.157,27,1.157,28,1.157,29,0.834,30,1.623,31,1.03,32,0.703,33,1.18,34,1.071,35,1.887,36,1.264,37,1.507,38,1.686,39,1.36,40,1.507,41,2.185,42,1.264,43,1.623,44,0.995,45,1.736,46,0.96,47,1.887,48,1.635,49,2.115,50,1.694,51,1.157,52,2.035,53,1.157,54,1.157,55,1.113,56,2.811,57,2.299,58,1.564,59,0.779,60,2.035,61,1.753,62,1.14,63,1.959,64,2.03,65,1.065,66,1.376,67,1.623,68,0.754,69,1.623,70,1.686,71,1.403,72,1.403,73,0.806,74,0.806,75,1.157,76,0.806,77,1.755,78,1.355,79,1.403,80,2.535,81,2.668,82,1.743,83,2.213,84,2.36,85,2.668,86,2.668,87,0.906,88,2.668,89,2.745,90,2.36,91,1.686,92,2.36,93,2.36,94,1.686,95,1.753,96,1.623,97,0.979,98,2.27,99,2.36,100,2.36,101,2.36,102,2.36,103,1.157,104,1.157,105,1.686,106,1.113,107,1.113,108,1.113,109,1.157,110,1.113,111,1.157,112,1.157,113,0.894,114,1.157,115,0.239,116,1.157,117,0.864,118,1.157,119,1.113,120,0.995,121,1.113,122,1.071,123,1.157,124,1.157,125,1.032,126,1.157,127,1.032,128,1.071,129,0.995,130,1.308,131,0.834,132,0.926,133,0.779,134,0.926,135,1.157,136,1.157,137,0.007,138,0.007,139,0.12,140,0.43,141,1.223]],["title/classes/Date.html",[181,0.073,870,1.815]],["body/classes/Date.html",[3,0.178,4,0.207,5,0.139,9,0.522,10,0.725,12,0.223,13,0.013,14,1.573,24,0.221,87,0.929,113,1.568,115,0.241,133,1.366,137,0.01,138,0.01,139,0.21,140,0.637,148,2.772,179,1.114,180,2.156,181,0.136,183,1.276,190,1.192,191,2.278,198,1.634,199,1.32,200,0.904,201,1.69,202,0.97,210,1.69,215,2.398,231,1.152,241,0.937,316,2.336,868,3.721,869,2.772,870,3.387,871,4.134,872,2.927,873,3.31,883,2.927,884,3.546,885,2.927,886,3.31,887,3.104,888,3.31,889,3.31,890,3.31,891,3.31,892,2.772,893,3.104,913,4.917]],["title/classes/Date-1.html",[181,0.061,384,2.449,870,1.514]],["body/classes/Date-1.html",[3,0.146,4,0.146,5,0.146,9,0.5,10,0.762,12,0.23,13,0.013,14,1.17,24,0.226,87,0.958,115,0.26,137,0.01,138,0.01,139,0.221,140,0.657,148,2.911,179,1.17,181,0.116,183,1.34,190,1.252,191,2.266,198,1.685,199,1.386,200,0.95,201,1.744,202,1.019,210,2.137,231,1.21,241,0.984,870,3.437,872,3.073,884,3.628,914,3.476,915,5.163,916,4.063,917,3.661,918,4.5,919,4.5,920,4.5,921,4.5,922,4.5,923,4.063,924,4.063,925,4.5,926,4.5,927,2.911,928,4.5,929,4.063,930,3.476,931,4.063]],["title/classes/Date-2.html",[181,0.061,818,2.663,870,1.514]],["body/classes/Date-2.html",[3,0.155,4,0.155,5,0.155,9,0.454,10,0.996,12,0.239,13,0.013,24,0.232,87,1.124,115,0.242,120,1.952,137,0.011,138,0.011,139,0.235,140,0.683,179,1.245,181,0.121,183,1.427,190,1.637,191,2.218,198,1.753,199,1.476,200,1.011,201,1.813,202,1.085,231,1.289,241,1.048,757,3.701,870,3.501,884,3.732,927,3.1,932,3.701,933,5.751,934,5.498,935,5.498,936,4.262,937,4.791,938,4.791,939,4.326,940,3.701,941,4.326]],["title/interfaces/DependencyTree.html",[0,0.355,35,1.494]],["body/interfaces/DependencyTree.html",[0,0.694,1,1.134,2,0.65,3,0.084,4,0.084,5,0.084,6,1.178,8,1.096,9,0.529,12,0.208,13,0.014,14,1.202,15,1.365,16,2.717,17,1.016,18,2.249,19,1.829,20,1.225,21,1.474,22,1.686,23,1.225,24,0.246,25,1.134,26,1.225,27,1.225,28,1.225,29,0.883,30,1.694,31,1.075,32,0.745,33,1.232,34,1.134,35,2.432,36,1.319,37,1.573,38,1.76,39,1.35,40,2.235,41,2.406,42,1.874,43,2.249,44,2.089,45,1.838,46,1.518,47,1.953,48,1.692,49,2.726,50,2.08,51,1.829,52,2.622,53,1.829,54,1.829,55,1.76,56,2.622,57,2.156,58,1.953,59,1.232,60,2.622,61,2.598,62,1.19,63,2.027,64,2.08,65,1.112,66,1.424,67,1.694,68,0.787,69,1.694,70,1.76,71,1.465,72,1.465,73,0.853,74,0.853,75,1.225,76,0.853,77,1.518,78,0.947,79,0.981,80,1.829,81,2.189,82,1.377,83,1.816,84,1.829,85,2.189,86,1.829,87,0.654,88,1.829,89,2.106,90,1.829,91,1.178,92,1.829,93,1.225,94,1.178,95,1.225,96,1.134,97,0.908,98,1.178,99,1.225,100,1.225,101,1.225,102,1.225,103,1.225,104,1.225,105,1.76,106,1.178,107,1.178,108,1.178,109,1.225,110,1.178,111,1.225,112,1.225,113,0.947,114,1.225,115,0.233,116,1.225,117,0.914,118,1.225,119,1.178,120,1.054,121,1.178,122,1.134,123,1.225,124,1.225,125,1.093,126,1.225,127,1.093,128,1.134,129,1.054,130,1.365,131,0.883,132,0.981,133,0.825,134,0.981,135,1.225,136,1.225,137,0.007,138,0.007,139,0.127,140,0.448,141,1.177]],["title/classes/Description.html",[181,0.073,316,1.294]],["body/classes/Description.html",[3,0.2,4,0.2,5,0.128,9,0.524,10,1.117,12,0.211,13,0.013,14,1.512,24,0.212,87,0.668,113,1.445,115,0.254,133,1.855,137,0.009,138,0.009,139,0.194,140,0.604,148,2.554,179,1.026,180,2.044,181,0.132,183,1.176,190,1.836,191,2.279,198,1.549,199,1.217,200,0.833,201,1.603,202,0.894,210,1.603,215,3.257,231,1.062,241,0.863,316,2.463,868,3.577,869,2.554,870,3.175,871,3.974,872,2.697,873,3.05,883,2.697,884,2.313,885,3.974,886,4.495,887,2.86,888,3.05,889,3.05,890,3.05,891,3.05,892,2.554,893,2.86,942,4.53,943,4.53,944,4.53,945,4.53,946,4.53,947,4.53]],["title/classes/ExceptionFilter.html",[181,0.073,360,2.936]],["body/classes/ExceptionFilter.html",[3,0.155,4,0.155,5,0.155,10,0.809,12,0.258,13,0.013,16,2.899,17,1.879,24,0.174,58,2.483,68,0.974,115,0.174,137,0.011,138,0.011,139,0.234,141,0.841,142,2.783,147,2.265,149,2.265,181,0.098,183,1.424,241,1.046,281,1.948,286,2.265,316,1.75,338,3.971,360,4.881,361,5.878,411,3.562,435,2.94,462,5.878,463,5.878,856,6.638,857,5.878,948,5.878,949,4.782,950,6.744,951,5.878,952,7.302,953,6.744,954,7.302,955,7.617,956,5.487,957,5.487,958,5.487,959,5.487,960,5.487,961,5.487,962,5.487,963,5.487,964,5.487]],["title/interfaces/FileFromClient.html",[0,0.355,128,1.55]],["body/interfaces/FileFromClient.html",[0,0.702,1,1.239,2,0.71,3,0.092,4,0.092,5,0.092,6,1.287,7,2.551,8,1.13,9,0.53,10,0.478,12,0.217,13,0.014,14,1.265,15,1.457,16,2.795,17,1.11,18,2.347,19,1.952,20,1.338,21,1.552,22,1.598,23,1.338,24,0.25,25,1.239,26,1.338,27,1.338,28,1.338,29,0.965,30,1.808,31,1.147,32,0.813,33,1.314,34,1.239,35,2.057,36,1.408,37,1.679,38,1.878,39,1.345,40,1.679,41,2.135,42,1.408,43,1.808,44,1.151,45,1.831,46,1.11,47,1.742,48,1.509,49,2.305,50,1.846,51,1.338,52,2.217,53,1.338,54,1.338,55,1.287,56,2.592,57,2.103,58,1.742,59,0.901,60,2.217,61,1.952,62,1.27,63,2.135,64,2.158,65,1.187,66,1.5,67,1.808,68,0.84,69,1.808,70,1.878,71,1.563,72,1.563,73,0.932,74,0.932,75,1.338,76,0.932,77,1.62,78,1.034,79,1.071,80,1.952,81,2.305,82,1.45,83,1.913,84,1.952,85,2.305,86,1.952,87,0.698,88,1.952,89,2.217,90,1.952,91,1.287,92,1.952,93,1.338,94,1.287,95,1.338,96,1.239,97,0.956,98,1.287,99,1.338,100,1.338,101,1.338,102,1.338,103,1.338,104,1.338,105,1.878,106,1.287,107,1.287,108,1.287,109,1.338,110,1.287,111,1.338,112,1.338,113,1.034,114,1.338,115,0.15,116,1.338,117,0.999,118,1.338,119,1.287,120,1.151,121,1.287,122,1.239,123,1.338,124,1.338,125,1.194,126,1.338,127,1.194,128,1.808,129,1.151,130,1.457,131,0.965,132,1.071,133,0.901,134,1.071,135,1.338,136,1.338,137,0.007,138,0.007,965,3.242]],["title/classes/Lab.html",[181,0.073,966,2.731]],["body/classes/Lab.html",[3,0.132,4,0.132,5,0.132,9,0.49,10,1.187,12,0.216,13,0.013,24,0.216,68,1.203,83,2.616,87,0.899,115,0.264,137,0.01,138,0.01,139,0.2,140,0.617,179,1.06,181,0.084,183,1.214,190,1.952,191,2.228,198,1.582,199,1.256,200,0.86,201,1.637,202,0.923,210,1.929,223,4.565,231,1.589,241,0.891,255,2.744,316,2.163,884,3.463,927,3.823,929,5.336,966,4.565,967,3.385,968,6.781,969,6.781,970,6.781,971,4.677,972,4.677,973,4.677,974,4.677,975,4.677,976,4.677,977,4.677,978,4.677,979,4.677,980,4.677,981,3.681,982,4.677,983,3.385,984,4.076]],["title/injectables/LabService.html",[268,1.294,985,2.561]],["body/injectables/LabService.html",[3,0.13,4,0.13,5,0.13,9,0.472,10,0.991,12,0.252,13,0.014,24,0.146,57,1.571,58,2.216,68,1.192,115,0.214,137,0.009,138,0.009,139,0.196,141,1.029,142,2.484,147,2.773,149,2.773,181,0.082,200,0.844,202,0.905,210,1.616,231,1.781,233,3.787,241,0.874,260,2.789,268,1.92,270,2.238,272,3.137,274,2.693,276,4.021,280,2.81,281,1.629,282,2.587,285,2.142,286,2.773,287,2.053,316,1.92,407,2.343,411,2.238,412,2.585,599,4.801,604,3.43,746,3.61,836,6.216,896,4.356,900,4.737,902,4.737,903,4.737,907,3.089,966,5.4,981,3.61,985,3.8,986,3.999,987,5.246,988,4.588,989,4.588,990,6.019,991,4.588,992,5.246,993,6.454,994,4.588,995,6.019,996,5.855,997,3.999,998,4.588,999,4.588,1000,4.588,1001,4.588]],["title/interfaces/LocalFiles.html",[0,0.355,177,2.287]],["body/interfaces/LocalFiles.html",[0,0.671,2,1.124,3,0.145,4,0.145,5,0.145,8,0.757,9,0.486,12,0.263,13,0.013,14,1.605,15,1.582,24,0.244,29,1.926,31,1.245,32,1.288,39,1.361,68,0.911,77,2.216,78,1.638,79,1.697,87,0.757,97,1.108,115,0.237,117,1.582,137,0.01,138,0.01,139,0.219,140,0.655,152,3.852,153,3.242,154,3.057,155,2.298,156,3.305,157,4.357,158,3.458,159,2.505,160,3.242,161,2.505,162,2.895,163,2.895,164,2.622,165,2.298,166,3.057,167,3.649,168,3.057,169,3.057,170,3.057,171,3.242,172,3.458,173,4.357,174,3.458,175,3.458,176,2.895,177,3.649,178,5.009,179,1.685,180,1.758,254,2.569]],["title/classes/MachineCommand.html",[130,1.25,181,0.073]],["body/classes/MachineCommand.html",[3,0.124,4,0.124,5,0.124,8,1.129,9,0.526,10,1.033,12,0.207,13,0.013,21,1.824,22,1.539,24,0.238,36,1.303,39,0.777,45,1.88,62,1.176,65,1.099,66,1.567,73,1.259,74,1.259,76,1.259,82,1.704,115,0.255,130,2.022,131,1.303,133,1.824,134,2.169,137,0.009,138,0.009,139,0.187,140,0.591,141,1.073,179,0.992,181,0.134,183,1.137,190,1.698,191,2.252,198,1.515,199,1.176,200,0.805,201,1.567,202,0.864,210,2.056,231,1.026,241,0.834,244,2.98,245,2.346,246,2.764,247,1.738,255,2.819,258,2.469,259,2.82,260,1.554,261,2.764,262,2.346,263,2.764,264,2.136,265,1.674,266,2.346,267,2.607,1002,4.379,1003,4.379,1004,4.379,1005,4.379]],["title/interfaces/MessageToSatellite.html",[0,0.355,176,2.287]],["body/interfaces/MessageToSatellite.html",[0,0.673,2,1.138,3,0.147,4,0.147,5,0.147,8,0.767,9,0.5,12,0.264,13,0.013,14,1.615,15,1.602,24,0.245,29,2.121,31,1.812,32,1.305,39,1.265,68,0.923,77,2.44,78,1.659,79,1.718,87,0.767,97,1.117,115,0.165,117,1.602,137,0.01,138,0.01,139,0.222,140,0.66,152,3.883,153,3.283,154,3.096,155,2.327,156,3.331,157,4.392,158,3.501,159,2.537,160,3.283,161,2.537,162,2.932,163,2.932,164,2.656,165,2.327,166,3.096,167,3.678,168,3.096,169,3.096,170,3.096,171,3.283,172,3.501,173,4.392,174,3.501,175,3.501,176,3.678,177,2.932,178,3.501,179,1.178,180,1.781]],["title/classes/Metadata.html",[14,0.919,181,0.073]],["body/classes/Metadata.html",[3,0.176,4,0.218,5,0.137,9,0.523,10,0.919,12,0.22,13,0.013,14,1.648,24,0.219,87,0.713,113,1.542,115,0.245,133,1.343,137,0.01,138,0.01,139,0.207,140,0.63,148,2.725,179,1.095,180,2.491,181,0.135,183,1.255,190,1.51,191,2.278,198,1.616,199,1.298,200,0.889,201,1.672,202,0.954,210,1.672,215,2.358,231,1.133,241,0.921,316,2.321,868,3.691,869,2.725,870,3.256,871,4.101,872,2.878,873,3.255,883,2.878,884,2.469,885,2.878,886,3.255,887,3.052,888,3.255,889,3.255,890,3.255,891,3.255,892,2.725,893,3.052,1006,4.834,1007,4.834]],["title/modules/MongoConnectionModule.html",[678,2.287,686,2.561]],["body/modules/MongoConnectionModule.html",[3,0.104,4,0.104,5,0.104,12,0.29,13,0.014,24,0.117,33,1.02,68,1.364,97,0.628,137,0.008,138,0.008,181,0.066,198,1.995,200,0.675,242,3.079,244,1.875,266,2.771,269,4.952,281,1.303,283,3.199,365,4.203,367,4.669,372,4.952,374,4.952,678,2.916,680,2.185,681,3.265,686,5.287,687,3.743,688,2.657,689,2.471,691,4.07,692,2.657,693,4.07,697,3.199,728,4.669,730,4.952,868,1.967,892,2.916,894,4.952,904,3.199,917,2.07,930,3.482,936,2.317,940,3.482,966,2.471,983,3.743,985,4.952,997,3.199,1008,3.199,1009,3.199,1010,3.199,1011,3.671,1012,3.671,1013,3.199,1014,3.671,1015,3.671,1016,3.199,1017,2.471,1018,3.743,1019,3.199,1020,3.199,1021,2.471,1022,3.743,1023,3.199,1024,3.671,1025,3.671,1026,3.671,1027,2.07,1028,3.079,1029,3.199,1030,3.671,1031,3.743,1032,3.199,1033,3.671,1034,3.671,1035,3.671,1036,3.671,1037,3.671,1038,3.671,1039,3.671,1040,3.671,1041,3.671,1042,3.671,1043,3.671,1044,3.671,1045,3.671]],["title/classes/OnOptions.html",[64,1.34,181,0.073]],["body/classes/OnOptions.html",[3,0.133,4,0.133,5,0.133,8,1.101,9,0.518,10,1.003,12,0.217,13,0.013,22,1.103,24,0.216,39,1.086,40,1.671,42,1.401,44,1.671,45,1.827,62,1.264,64,2.529,65,1.181,66,1.934,72,2.248,73,1.354,74,1.354,76,1.956,115,0.254,137,0.01,138,0.01,139,0.201,140,0.619,141,1.173,179,1.066,181,0.129,183,1.222,190,1.65,191,2.248,198,1.589,199,1.264,200,0.866,201,1.644,202,0.929,210,2.055,231,1.103,241,0.897,247,1.869,255,1.734,264,2.296,265,1.799,1027,3.835,1028,2.802,1046,2.802,1047,4.708,1048,4.708,1049,4.708,1050,2.972,1051,3.864,1052,3.407,1053,3.17]],["title/interfaces/OptionTypes.html",[0,0.355,63,1.55]],["body/interfaces/OptionTypes.html",[0,0.702,1,1.238,2,0.709,3,0.091,4,0.091,5,0.091,6,1.285,7,2.548,8,1.13,9,0.53,10,0.478,12,0.217,13,0.014,14,1.264,15,1.456,16,2.794,17,1.109,18,2.346,19,1.951,20,1.336,21,1.551,22,1.597,23,1.336,24,0.25,25,1.238,26,1.336,27,1.336,28,1.336,29,0.964,30,1.806,31,1.146,32,0.812,33,1.313,34,1.238,35,2.055,36,1.407,37,1.678,38,1.876,39,1.345,40,1.678,41,2.133,42,1.407,43,1.806,44,1.149,45,1.83,46,1.109,47,1.74,48,1.508,49,2.304,50,1.844,51,1.336,52,2.216,53,1.336,54,1.336,55,1.285,56,2.591,57,2.101,58,1.74,59,0.9,60,2.216,61,1.951,62,1.269,63,2.346,64,2.157,65,1.186,66,1.499,67,1.806,68,0.839,69,1.806,70,1.876,71,1.562,72,1.844,73,0.931,74,0.931,75,1.336,76,0.931,77,1.618,78,1.033,79,1.07,80,1.951,81,2.304,82,1.449,83,1.911,84,1.951,85,2.304,86,1.951,87,0.697,88,1.951,89,2.216,90,1.951,91,1.285,92,1.951,93,1.336,94,1.285,95,1.336,96,1.238,97,0.956,98,1.285,99,1.336,100,1.336,101,1.336,102,1.336,103,1.336,104,1.336,105,1.876,106,1.285,107,1.285,108,1.285,109,1.336,110,1.285,111,1.336,112,1.336,113,1.033,114,1.336,115,0.15,116,1.336,117,0.998,118,1.336,119,1.285,120,1.149,121,1.285,122,1.238,123,1.336,124,1.336,125,1.192,126,1.336,127,1.192,128,1.238,129,1.149,130,1.456,131,0.964,132,1.07,133,0.9,134,1.07,135,1.336,136,1.336,137,0.007,138,0.007,1054,3.238]],["title/classes/Options.html",[22,0.951,181,0.073]],["body/classes/Options.html",[3,0.126,4,0.126,5,0.126,8,1.135,9,0.526,10,0.873,12,0.209,13,0.013,21,1.844,22,1.655,24,0.24,36,1.331,39,0.794,45,1.59,62,1.201,65,1.665,66,1.896,73,1.286,74,1.286,76,1.286,82,1.161,115,0.256,130,1.824,131,1.331,133,1.243,134,1.478,137,0.009,138,0.009,139,0.191,140,0.599,141,1.082,179,1.013,181,0.135,183,1.161,190,1.436,191,2.237,198,1.537,199,1.201,200,0.823,201,1.59,202,0.883,210,2.124,231,1.049,241,0.852,244,3.023,245,2.397,246,2.824,247,1.776,254,2.35,255,2.912,258,2.522,259,2.85,260,1.588,261,2.824,262,2.397,263,2.824,264,2.182,265,1.71,266,2.397,267,2.663,1055,4.474,1056,4.474]],["title/interfaces/Output.html",[0,0.355,127,1.494]],["body/interfaces/Output.html",[0,0.465,2,1.164,3,0.15,4,0.15,5,0.187,9,0.524,13,0.013,24,0.169,87,1.062,115,0.259,127,2.981,137,0.01,138,0.01,139,0.227,140,0.669,141,1.21,160,3.355,181,0.135,210,1.427,316,1.696,902,4.183,917,2.997,923,4.183,1057,4.633,1058,7.532,1059,7.532,1060,7.532,1061,7.532,1062,7.532,1063,7.532,1064,7.532,1065,7.532]],["title/interfaces/ProcessedStateMachine.html",[0,0.355,843,2.287]],["body/interfaces/ProcessedStateMachine.html",[0,0.677,2,1.157,3,0.149,4,0.149,5,0.149,8,0.78,9,0.513,12,0.233,13,0.014,24,0.246,31,1.823,32,1.326,33,1.831,42,1.961,50,1.747,71,1.747,82,1.372,87,0.78,97,0.905,115,0.239,132,1.747,137,0.01,138,0.01,139,0.226,140,0.667,155,3.364,156,3.839,159,2.578,260,1.876,403,4.475,412,2.27,429,3.337,456,2.832,573,3.559,722,2.98,754,2.832,843,3.715,1066,3.559,1067,3.826,1068,3.826,1069,4.834,1070,3.826,1071,3.559,1072,3.147]],["title/interfaces/ProcessedTree.html",[0,0.355,67,1.55]],["body/interfaces/ProcessedTree.html",[0,0.696,1,1.156,2,0.662,3,0.085,4,0.085,5,0.085,6,1.201,8,1.101,9,0.53,12,0.21,13,0.014,14,1.215,15,1.385,16,2.734,17,1.035,18,2.542,19,1.855,20,1.248,21,1.49,22,1.694,23,1.248,24,0.247,25,1.156,26,1.248,27,1.248,28,1.248,29,0.9,30,1.718,31,1.09,32,0.759,33,1.249,34,1.156,35,1.975,36,1.337,37,1.595,38,1.784,39,1.325,40,2.253,41,2.05,42,1.888,43,1.718,44,1.073,45,1.786,46,1.035,47,1.655,48,1.434,49,2.745,50,1.772,51,1.248,52,2.64,53,1.248,54,1.248,55,1.201,56,2.519,57,2.033,58,1.655,59,0.84,60,2.64,61,2.619,62,1.207,63,2.05,64,2.097,65,1.128,66,1.44,67,2.425,68,1.126,69,2.27,70,1.784,71,1.485,72,1.485,73,0.869,74,0.869,75,1.248,76,0.869,77,1.539,78,0.965,79,0.999,80,1.855,81,2.214,82,1.392,83,1.837,84,1.855,85,2.214,86,1.855,87,0.663,88,1.855,89,2.129,90,1.855,91,1.201,92,1.855,93,1.248,94,1.201,95,1.248,96,1.156,97,0.918,98,1.201,99,1.248,100,1.248,101,1.248,102,1.248,103,1.248,104,1.248,105,1.784,106,1.201,107,1.201,108,1.201,109,1.248,110,1.201,111,1.248,112,1.248,113,0.965,114,1.248,115,0.234,116,1.248,117,0.932,118,1.248,119,1.201,120,1.073,121,1.201,122,1.156,123,1.248,124,1.248,125,1.114,126,1.248,127,1.114,128,1.156,129,1.073,130,1.385,131,0.9,132,0.999,133,0.84,134,0.999,135,1.248,136,1.248,137,0.007,138,0.007,139,0.129,140,0.455,141,1.127]],["title/classes/PublicInformation.html",[181,0.073,206,2.561]],["body/classes/PublicInformation.html",[0,0.324,3,0.105,4,0.105,5,0.105,8,0.546,9,0.518,10,1.176,12,0.184,13,0.013,24,0.191,39,1.265,48,1.182,83,1.268,87,1.014,97,1.03,115,0.264,137,0.008,138,0.008,139,0.158,140,0.527,141,1.18,161,1.807,165,2.692,179,0.839,180,1.268,181,0.108,182,3.582,183,0.961,184,2.205,185,2.338,186,2.681,187,2.494,188,2.494,189,2.681,190,1.933,191,2.283,198,1.351,199,0.995,200,0.681,201,1.398,202,0.731,203,2.338,204,3.798,205,2.494,206,3.798,207,4.355,208,4.355,209,4.355,210,2.04,211,4.355,212,4.051,213,4.355,214,4.355,215,2.935,216,4.355,217,4.051,218,4.355,219,4.355,220,3.798,221,2.494,222,2.681,223,3.504,224,2.338,225,2.494,226,2.681,227,2.338,228,2.681,229,2.681,230,2.205,231,0.868,232,2.681,233,2.088,234,2.338,235,2.338,236,2.494,237,2.338,238,2.494,239,2.681,240,2.494,241,0.706,242,2.205,243,2.494,255,1.364,1073,3.704,1074,3.704,1075,3.704,1076,3.704,1077,3.704,1078,3.704,1079,3.704,1080,3.704,1081,3.704,1082,3.704,1083,3.704,1084,3.704,1085,3.704,1086,3.704]],["title/interfaces/RemoteModule.html",[0,0.355,204,2.561]],["body/interfaces/RemoteModule.html",[0,0.393,2,0.984,3,0.127,4,0.127,5,0.127,8,0.663,9,0.522,12,0.21,13,0.013,24,0.211,39,1.256,48,1.434,83,1.539,87,0.981,97,1.138,115,0.259,137,0.009,138,0.009,139,0.192,140,0.601,161,2.193,165,2.011,179,1.018,180,2.422,181,0.119,182,3.959,184,2.676,185,2.837,186,3.253,187,3.026,188,3.026,189,3.253,191,2.286,198,1.541,199,1.207,200,0.827,201,1.595,202,0.887,203,2.837,204,4.198,205,4.763,206,3.749,207,3.253,208,3.253,209,3.253,210,2.101,211,3.253,212,3.026,213,3.253,214,3.253,215,2.193,216,3.253,217,3.026,218,3.253,219,3.253,220,2.837,221,3.026,222,3.253,223,3.998,224,2.837,225,3.026,226,3.253,227,2.837,228,3.253,229,3.253,230,2.676,231,1.054,232,3.253,233,2.534,234,2.837,235,2.837,236,3.026,237,2.837,238,3.026,239,3.253,240,3.026,241,0.856,242,2.676,243,3.026]],["title/classes/Sample.html",[181,0.073,917,2.287]],["body/classes/Sample.html",[3,0.114,4,0.114,5,0.114,9,0.506,10,1.203,12,0.196,13,0.014,14,1.43,24,0.201,87,0.598,115,0.266,137,0.009,138,0.009,139,0.173,140,0.56,141,0.849,148,3.558,179,0.918,181,0.099,183,1.052,190,1.978,191,2.249,198,1.438,199,1.088,200,0.745,201,1.487,202,0.8,210,2.17,231,1.479,241,0.772,255,2.814,870,3.419,872,3.757,884,2.07,914,2.729,916,3.189,917,3.558,918,3.532,919,5.5,920,5.5,921,5.5,922,5.5,923,4.966,924,4.966,925,5.5,926,5.5,927,3.558,928,5.5,929,4.966,930,2.729,931,3.189,1087,4.053,1088,4.053,1089,4.053,1090,4.053,1091,4.053,1092,4.053,1093,4.053,1094,4.053,1095,4.053,1096,4.053,1097,4.053,1098,4.053,1099,4.053,1100,4.053,1101,4.053,1102,4.053]],["title/controllers/SatInterfaceController.html",[291,2.731,1103,2.936]],["body/controllers/SatInterfaceController.html",[2,0.434,3,0.056,4,0.056,5,0.056,8,0.604,9,0.498,10,0.868,12,0.184,13,0.014,24,0.063,30,1.988,31,1.261,32,1.828,33,1.312,34,2.604,35,1.739,36,1.751,37,1.676,39,1.089,46,2.495,47,2.552,48,1.957,50,2.251,56,1.284,59,1.312,68,1.265,82,1.527,97,1.38,113,1.779,115,0.202,121,0.788,129,1.676,132,1.56,137,0.005,138,0.005,139,0.085,141,0.94,142,1.335,147,2.302,149,2.903,161,1.578,162,3.577,164,1.652,165,1.832,168,2.437,169,2.437,170,2.437,181,0.036,190,1.427,227,2.981,241,1.321,254,1.284,259,1.758,260,2.862,262,1.063,265,1.988,272,2.618,274,0.888,280,2.604,281,0.704,285,0.926,286,2.756,287,1.832,291,1.336,293,1.336,302,5.368,313,2.819,316,1.779,318,4.993,358,2.308,359,1.436,370,1.181,371,1.181,390,5.127,391,1.561,400,2.545,407,1.652,408,1.561,411,1.578,412,3.13,419,2.545,435,3.578,437,1.729,441,4.533,442,3.222,445,3.872,447,2.757,450,1.561,452,1.729,496,4.799,523,5.346,549,4.629,555,2.177,562,1.729,563,1.729,565,1.561,567,3.222,575,4.39,604,3.683,655,1.729,666,4.862,694,1.181,715,1.336,722,1.823,738,3.716,739,4.827,754,1.733,759,1.436,829,2.819,933,3.716,1069,4.392,1103,2.341,1104,1.729,1105,1.984,1106,3.234,1107,3.234,1108,4.722,1109,3.234,1110,3.234,1111,1.984,1112,5.578,1113,3.234,1114,1.984,1115,1.984,1116,4.722,1117,3.234,1118,1.984,1119,1.984,1120,3.234,1121,3.234,1122,1.984,1123,7.355,1124,3.234,1125,3.234,1126,1.984,1127,4.094,1128,4.722,1129,1.984,1130,3.234,1131,1.984,1132,1.984,1133,3.234,1134,3.234,1135,1.984,1136,3.234,1137,1.984,1138,3.234,1139,1.984,1140,5.201,1141,1.984,1142,1.984,1143,1.984,1144,1.984,1145,3.234,1146,1.729,1147,1.984,1148,1.984,1149,1.984,1150,1.984,1151,1.984,1152,6.134,1153,4.094,1154,5.201,1155,4.094,1156,4.094,1157,1.984,1158,1.984,1159,1.984,1160,1.984,1161,1.984,1162,1.984,1163,1.984,1164,1.984,1165,1.984,1166,1.984,1167,3.234,1168,3.234,1169,3.234,1170,1.984,1171,1.984,1172,1.984,1173,1.984,1174,3.234,1175,3.234,1176,4.722,1177,1.984,1178,1.984,1179,1.984,1180,1.984,1181,1.984,1182,1.984,1183,4.094,1184,1.984,1185,1.984,1186,1.984,1187,1.984,1188,1.984,1189,1.984,1190,1.984,1191,1.984,1192,1.984]],["title/modules/SatInterfaceModule.html",[678,2.287,701,2.936]],["body/modules/SatInterfaceModule.html",[3,0.173,4,0.173,5,0.173,12,0.271,13,0.013,24,0.195,137,0.011,138,0.011,181,0.11,281,2.176,293,4.853,678,4.064,679,4.55,680,3.648,692,4.436,694,4.291,701,5.217,1103,5.542,1193,6.129,1194,5.341,1195,6.129]],["title/classes/Satellite.html",[97,0.694,181,0.073]],["body/classes/Satellite.html",[0,0.332,3,0.107,4,0.107,5,0.107,8,0.56,9,0.515,10,1.173,12,0.187,13,0.013,24,0.194,39,1.171,48,1.945,83,1.813,87,0.899,97,1.129,115,0.265,137,0.008,138,0.008,139,0.162,140,0.536,161,1.852,165,1.699,179,0.86,180,1.3,181,0.109,182,4.278,183,0.985,184,2.26,185,2.397,186,2.748,187,2.556,188,2.556,189,2.748,190,1.928,191,2.273,198,1.374,199,1.02,200,0.698,201,1.422,202,0.749,203,2.397,204,3.343,205,2.556,206,3.849,207,2.748,208,2.748,209,2.748,210,2.161,211,2.748,212,2.556,213,2.748,214,2.748,215,1.852,216,2.748,217,2.556,218,2.748,219,2.748,220,2.397,221,2.556,222,2.748,223,3.565,224,2.397,225,2.556,226,2.748,227,2.397,228,2.748,229,2.748,230,2.26,231,1.429,232,4.413,233,3.438,234,3.849,235,3.849,236,4.105,237,3.849,238,4.105,239,4.413,240,4.105,241,0.723,242,2.26,243,2.556,255,2.77,1196,3.797,1197,3.797,1198,3.797,1199,3.797,1200,3.797,1201,3.797,1202,3.797,1203,3.797,1204,3.797,1205,3.797,1206,3.797,1207,3.797,1208,3.797]],["title/interfaces/SatelliteConnection.html",[0,0.355,164,2.071]],["body/interfaces/SatelliteConnection.html",[0,0.647,2,1.001,3,0.129,4,0.129,5,0.129,8,0.675,9,0.498,12,0.252,13,0.013,14,1.519,15,1.409,24,0.235,29,1.787,31,1.109,32,1.787,39,1.373,68,0.812,77,2.057,78,1.916,79,1.985,87,0.989,97,1.219,115,0.258,117,1.409,137,0.009,138,0.009,139,0.195,140,0.608,141,1.163,152,3.576,153,2.887,154,2.722,155,2.046,156,3.067,157,4.044,158,3.079,159,2.231,160,3.792,161,2.93,162,3.387,163,3.387,164,3.067,165,3.187,166,4.24,167,4.016,168,4.24,169,4.24,170,4.24,171,4.496,172,4.796,173,5.112,174,4.796,175,4.796,176,2.578,177,2.578,178,3.079,179,1.036,180,1.566,254,2.385,316,1.459]],["title/classes/SatelliteMachine.html",[181,0.073,1027,2.287]],["body/classes/SatelliteMachine.html",[3,0.126,4,0.126,5,0.126,8,1.083,9,0.512,10,1.113,12,0.209,13,0.014,22,1.555,24,0.211,39,1.253,40,2.355,42,1.975,44,2.355,45,1.201,62,1.201,64,2.427,65,1.122,66,1.59,72,2.193,73,1.286,74,1.286,76,1.286,115,0.258,137,0.009,138,0.009,139,0.191,140,0.599,141,1.197,179,1.013,181,0.126,183,1.161,190,1.83,191,2.247,198,1.537,199,1.201,200,0.823,201,1.59,202,0.883,210,2.067,231,1.555,241,0.852,247,2.634,255,2.18,264,2.182,265,1.71,1027,4.141,1028,2.663,1046,2.663,1050,2.824,1051,4.189,1052,3.238,1053,3.012,1209,4.474,1210,4.474,1211,4.474,1212,4.474,1213,4.474,1214,4.474]],["title/injectables/SatelliteMachineService.html",[268,1.294,372,2.561]],["body/injectables/SatelliteMachineService.html",[3,0.159,4,0.159,5,0.159,10,1.009,12,0.272,13,0.013,24,0.179,59,1.56,68,0.997,115,0.179,137,0.011,138,0.011,139,0.24,141,0.86,142,2.823,147,2.318,149,2.318,181,0.101,200,1.033,202,1.108,247,2.229,268,2.182,270,2.739,272,3.044,273,6.691,274,3.061,276,4.329,280,3.193,281,1.993,282,3.166,285,2.621,286,2.318,287,3.061,289,4.419,290,4.419,372,4.318,1027,3.166,1029,4.894,1050,3.545,1215,4.894,1216,5.616,1217,5.616,1218,6.84,1219,5.616,1220,5.616,1221,5.616]],["title/interfaces/SatelliteMessage.html",[0,0.355,117,1.25]],["body/interfaces/SatelliteMessage.html",[0,0.698,1,1.187,2,0.68,3,0.088,4,0.088,5,0.088,6,1.233,8,1.107,9,0.53,12,0.213,13,0.014,14,1.234,15,1.412,16,2.757,17,1.063,18,2.299,19,1.892,20,1.282,21,1.514,22,1.574,23,1.282,24,0.248,25,1.187,26,1.282,27,1.282,28,1.282,29,0.924,30,2.452,31,1.112,32,0.779,33,1.274,34,1.187,35,2.006,36,1.364,37,1.627,38,2.547,39,1.362,40,1.627,41,2.082,42,1.364,43,1.752,44,1.102,45,1.955,46,1.063,47,1.688,48,1.462,49,2.249,50,1.8,51,1.282,52,2.163,53,1.282,54,1.282,55,1.233,56,2.547,57,2.06,58,1.688,59,0.863,60,2.163,61,1.892,62,1.231,63,2.082,64,2.12,65,1.15,66,1.463,67,1.752,68,0.813,69,1.752,70,1.82,71,1.515,72,1.515,73,0.893,74,0.893,75,1.282,76,0.893,77,1.57,78,0.991,79,1.026,80,1.892,81,2.249,82,1.414,83,1.866,84,1.892,85,2.249,86,1.892,87,0.676,88,1.892,89,2.163,90,1.892,91,1.233,92,1.892,93,1.282,94,1.233,95,1.282,96,1.187,97,0.933,98,1.233,99,1.282,100,1.282,101,1.282,102,1.282,103,1.282,104,1.282,105,1.82,106,1.233,107,1.233,108,1.233,109,1.282,110,1.233,111,1.282,112,1.282,113,0.991,114,1.282,115,0.231,116,1.282,117,1.412,118,2.483,119,2.388,120,1.102,121,1.233,122,1.187,123,1.282,124,1.282,125,1.144,126,1.282,127,1.144,128,1.187,129,1.102,130,1.412,131,0.924,132,1.026,133,0.863,134,1.026,135,1.282,136,1.282,137,0.007,138,0.007,139,0.133,140,0.464,141,0.922,254,1.82]],["title/interfaces/SatelliteOutput.html",[0,0.355,125,1.494]],["body/interfaces/SatelliteOutput.html",[0,0.699,1,1.192,2,0.683,3,0.088,4,0.088,5,0.088,6,1.238,8,1.108,9,0.53,12,0.213,13,0.014,14,1.237,15,1.417,16,2.761,17,1.068,18,2.304,19,1.898,20,1.287,21,1.518,22,1.576,23,1.287,24,0.248,25,1.192,26,1.287,27,1.287,28,1.287,29,0.928,30,1.758,31,1.115,32,0.782,33,1.278,34,1.192,35,2.011,36,1.368,37,1.632,38,1.826,39,1.363,40,1.632,41,2.088,42,1.368,43,1.758,44,1.107,45,1.806,46,1.068,47,1.693,48,1.467,49,2.254,50,2.222,51,1.287,52,2.168,53,1.287,54,1.287,55,1.238,56,2.552,57,2.064,58,2.367,59,0.867,60,2.168,61,1.898,62,1.235,63,2.088,64,2.124,65,1.154,66,1.467,67,1.758,68,0.816,69,1.758,70,1.826,71,1.519,72,1.519,73,0.897,74,0.897,75,1.287,76,0.897,77,1.575,78,0.995,79,1.031,80,1.898,81,2.254,82,1.418,83,1.87,84,1.898,85,2.254,86,1.898,87,0.678,88,1.898,89,2.168,90,1.898,91,1.238,92,1.898,93,1.287,94,1.238,95,1.287,96,1.192,97,1.151,98,1.238,99,1.287,100,1.287,101,1.287,102,1.287,103,1.287,104,1.287,105,1.826,106,1.238,107,1.238,108,1.238,109,1.287,110,1.238,111,1.287,112,1.287,113,0.995,114,1.287,115,0.221,116,1.287,117,0.961,118,1.287,119,1.238,120,1.107,121,1.238,122,1.192,123,1.287,124,1.287,125,1.693,126,2.488,127,2.22,128,1.192,129,1.107,130,1.417,131,0.928,132,1.031,133,0.867,134,1.031,135,1.287,136,1.287,137,0.007,138,0.007,139,0.133,140,0.465,141,0.705]],["title/injectables/SatelliteService.html",[268,1.294,365,2.174]],["body/injectables/SatelliteService.html",[2,0.427,3,0.055,4,0.055,5,0.055,9,0.501,10,1.018,12,0.196,13,0.014,15,0.983,24,0.062,39,1.081,57,2.159,59,1.299,68,1.179,78,1.491,87,0.76,97,1.392,115,0.216,122,0.745,137,0.005,138,0.005,139,0.083,140,0.323,141,1.018,142,1.316,147,2.742,149,2.847,162,1.1,163,1.798,165,2.903,177,3.555,180,0.668,181,0.035,182,1.161,187,1.313,188,1.313,190,0.473,200,0.359,202,0.385,203,1.231,205,1.313,215,3.164,217,2.147,220,3.493,221,1.313,224,2.951,225,2.147,231,1.642,233,3.657,234,4.095,241,1.266,260,1.964,265,2.479,268,1.017,270,0.951,272,3.266,274,1.427,276,2.906,280,2.844,281,0.692,282,1.1,286,2.93,287,2.822,316,1.863,365,1.709,370,1.161,371,1.161,407,3.313,411,3.164,412,3.2,425,1.7,435,2.965,445,4.095,447,2.147,466,3.383,478,4.823,479,4.823,481,4.493,486,2.78,496,3.932,507,2.78,525,4.005,530,2.78,549,1.535,591,4.823,593,4.074,599,4.246,604,3.577,633,3.184,654,4.056,739,3.679,746,4.596,762,4.074,846,2.147,887,1.231,896,2.308,900,2.51,907,1.313,917,1.1,987,2.78,992,2.78,993,4.074,996,1.7,1016,1.7,1071,2.147,1222,1.7,1223,4.675,1224,3.189,1225,3.189,1226,4.675,1227,3.189,1228,3.189,1229,3.189,1230,3.189,1231,3.189,1232,3.189,1233,1.95,1234,1.95,1235,3.189,1236,1.95,1237,3.189,1238,3.189,1239,3.189,1240,4.074,1241,1.95,1242,3.189,1243,1.95,1244,1.95,1245,3.189,1246,1.95,1247,4.675,1248,3.189,1249,3.189,1250,3.189,1251,3.189,1252,3.189,1253,3.189,1254,1.95,1255,3.189,1256,3.189,1257,3.189,1258,3.189,1259,3.189,1260,3.189,1261,1.95,1262,3.189,1263,5.534,1264,1.95,1265,1.95,1266,3.189,1267,5.155,1268,1.95,1269,3.189,1270,3.189,1271,3.189,1272,3.189,1273,3.189,1274,3.189,1275,3.189,1276,1.95,1277,3.189,1278,1.95,1279,1.95,1280,1.95,1281,4.047,1282,1.95,1283,3.189,1284,3.189,1285,3.189,1286,4.074,1287,3.189,1288,1.95,1289,4.795,1290,1.95,1291,1.95,1292,1.95,1293,4.675,1294,1.95,1295,1.95,1296,1.95,1297,1.95,1298,1.95,1299,3.189,1300,1.95,1301,3.189,1302,1.95,1303,1.95,1304,3.189,1305,1.95,1306,1.95,1307,1.95,1308,1.95,1309,1.95,1310,4.047,1311,3.189,1312,3.189,1313,3.189,1314,1.95,1315,1.95,1316,3.189,1317,1.95,1318,1.95,1319,1.95,1320,4.047,1321,3.189,1322,1.95,1323,1.95,1324,1.95,1325,1.95]],["title/classes/SatelliteTask.html",[33,1.127,181,0.073]],["body/classes/SatelliteTask.html",[3,0.131,4,0.131,5,0.131,9,0.506,10,1.185,12,0.214,13,0.013,22,1.582,24,0.215,33,1.875,39,1.352,52,2.679,60,2.679,68,1.198,105,2.679,106,2.679,107,2.679,108,2.679,115,0.259,137,0.01,138,0.01,139,0.198,140,0.613,141,1.248,179,1.049,181,0.083,183,1.202,190,1.948,191,2.249,198,1.572,199,1.244,200,0.852,201,1.627,202,0.914,210,1.627,231,1.582,241,0.883,247,2.679,255,1.706,264,2.259,265,1.77,1031,3.352,1326,3.352,1327,4.632,1328,4.632,1329,4.632,1330,4.632,1331,4.632,1332,4.632,1333,4.632,1334,4.632,1335,4.632,1336,4.632,1337,3.645,1338,4.632,1339,4.037]],["title/injectables/SatelliteTasksService.html",[268,1.294,374,2.561]],["body/injectables/SatelliteTasksService.html",[3,0.159,4,0.159,5,0.159,10,1.009,12,0.272,13,0.013,24,0.179,33,1.56,59,1.56,68,0.997,115,0.179,137,0.011,138,0.011,139,0.24,141,0.86,142,2.823,147,2.318,149,2.318,181,0.101,200,1.033,202,1.108,247,2.229,268,2.182,270,2.739,272,3.044,274,3.061,276,4.329,280,3.193,281,1.993,282,3.166,285,2.621,286,2.318,287,3.061,289,4.419,290,4.419,374,4.318,1032,4.894,1337,4.419,1340,4.894,1341,7.678,1342,5.616,1343,5.616,1344,6.84,1345,5.616,1346,5.616,1347,5.616]],["title/interfaces/SciDapDuplexStream.html",[0,0.355,167,2.287]],["body/interfaces/SciDapDuplexStream.html",[0,0.673,2,1.138,3,0.147,4,0.147,5,0.147,8,0.767,9,0.488,12,0.264,13,0.013,14,1.826,15,1.602,24,0.245,29,1.941,31,1.261,32,1.305,39,1.265,68,0.923,77,2.44,78,1.659,79,1.718,87,0.767,97,1.117,115,0.165,117,1.602,137,0.01,138,0.01,139,0.222,140,0.66,152,3.883,153,3.283,154,3.096,155,2.327,156,3.331,157,4.799,158,3.501,159,2.537,160,3.283,161,2.537,162,2.932,163,2.932,164,2.656,165,2.327,166,3.096,167,4.018,168,3.096,169,3.096,170,3.096,171,3.283,172,3.501,173,4.392,174,3.501,175,3.501,176,2.932,177,2.932,178,3.501,179,1.178,180,1.781]],["title/interfaces/SendEvent.html",[0,0.355,754,2.174]],["body/interfaces/SendEvent.html",[0,0.667,2,1.103,3,0.142,4,0.142,5,0.142,8,0.743,9,0.521,12,0.226,13,0.014,24,0.242,31,1.919,32,1.264,33,1.776,42,2.198,50,1.664,71,1.664,82,1.307,87,1.036,97,1.094,115,0.259,132,1.664,137,0.01,138,0.01,139,0.215,140,0.647,141,0.979,155,2.254,156,3.265,159,2.457,260,2.269,403,2.998,412,2.163,429,4.663,456,2.699,573,4.304,722,2.84,754,3.425,843,2.84,1066,3.391,1067,3.645,1068,3.645,1069,5.246,1070,4.627,1071,4.304,1072,2.998]],["title/interfaces/ServiceCommand.html",[0,0.355,37,1.44]],["body/interfaces/ServiceCommand.html",[0,0.699,1,1.196,2,0.685,3,0.088,4,0.088,5,0.088,6,1.242,8,1.109,9,0.53,12,0.214,13,0.014,14,1.24,15,1.42,16,2.764,17,1.071,18,2.308,19,1.902,20,1.291,21,1.521,22,1.578,23,1.291,24,0.248,25,1.196,26,1.291,27,1.291,28,1.291,29,0.931,30,1.762,31,1.118,32,0.785,33,1.281,34,1.196,35,2.015,36,1.372,37,1.943,38,1.83,39,1.335,40,1.636,41,2.092,42,1.372,43,1.762,44,1.111,45,1.958,46,1.071,47,1.697,48,1.47,49,2.259,50,1.808,51,1.291,52,2.173,53,1.291,54,1.291,55,1.242,56,2.555,57,2.067,58,1.697,59,0.869,60,2.173,61,1.902,62,1.238,63,2.092,64,2.127,65,1.156,66,1.47,67,1.762,68,0.818,69,1.762,70,1.83,71,1.523,72,1.523,73,0.9,74,0.9,75,1.291,76,0.9,77,1.578,78,0.998,79,1.034,80,1.902,81,2.259,82,1.42,83,1.874,84,1.902,85,2.259,86,1.902,87,0.68,88,1.902,89,2.173,90,1.902,91,1.242,92,1.902,93,1.291,94,1.242,95,1.291,96,1.196,97,0.937,98,1.242,99,1.291,100,1.291,101,1.291,102,1.291,103,1.291,104,1.291,105,2.555,106,1.242,107,1.242,108,1.242,109,1.291,110,1.242,111,1.291,112,1.291,113,0.998,114,1.291,115,0.214,116,1.291,117,0.964,118,1.291,119,1.242,120,1.111,121,1.242,122,1.196,123,1.291,124,1.291,125,1.152,126,1.291,127,1.152,128,1.196,129,1.111,130,1.42,131,0.931,132,1.034,133,0.869,134,1.034,135,2.492,136,2.492,137,0.007,138,0.007,139,0.134,140,0.466,141,1.032]],["title/classes/ServiceTag.html",[181,0.073,1021,2.731]],["body/classes/ServiceTag.html",[3,0.154,4,0.154,5,0.154,9,0.493,10,1.121,12,0.238,13,0.013,24,0.232,39,1.193,68,1.293,115,0.248,137,0.011,138,0.011,139,0.233,140,0.68,179,1.236,181,0.098,183,1.416,190,1.843,191,2.202,198,1.744,199,1.465,200,1.003,201,1.805,202,1.077,231,1.707,241,1.04,783,5.732,1021,4.904,1022,3.949,1348,3.949,1349,7.283,1350,5.456,1351,5.456,1352,5.456,1353,5.456,1354,4.294,1355,4.755,1356,4.755]],["title/interfaces/StartOptions.html",[0,0.355,18,1.55]],["body/interfaces/StartOptions.html",[0,0.7,1,1.202,2,0.689,3,0.089,4,0.089,5,0.089,6,1.249,8,1.111,9,0.529,12,0.214,13,0.014,14,1.244,15,1.426,16,2.769,17,1.077,18,2.466,19,2.266,20,1.298,21,1.525,22,1.581,23,1.298,24,0.249,25,1.202,26,1.298,27,1.298,28,1.298,29,0.936,30,1.769,31,1.122,32,0.789,33,1.286,34,1.202,35,2.021,36,1.377,37,1.643,38,1.837,39,1.388,40,1.643,41,2.098,42,1.377,43,1.769,44,1.117,45,1.812,46,1.077,47,1.704,48,1.476,49,2.266,50,1.814,51,1.298,52,2.179,53,1.298,54,1.298,55,1.249,56,2.561,57,2.073,58,1.704,59,0.874,60,2.179,61,1.91,62,1.243,63,2.098,64,2.132,65,1.161,66,1.474,67,1.769,68,0.821,69,1.769,70,1.837,71,1.529,72,1.529,73,0.905,74,0.905,75,1.298,76,0.905,77,1.88,78,1.004,79,1.04,80,2.662,81,2.266,82,1.425,83,1.88,84,1.91,85,2.266,86,1.91,87,0.683,88,1.91,89,2.179,90,1.91,91,1.249,92,1.91,93,1.298,94,1.249,95,1.298,96,1.202,97,0.94,98,1.249,99,1.298,100,1.298,101,1.298,102,1.298,103,2.498,104,2.498,105,1.837,106,1.249,107,1.249,108,1.249,109,1.298,110,1.249,111,1.298,112,1.298,113,1.004,114,1.298,115,0.205,116,1.298,117,0.969,118,1.298,119,1.249,120,1.117,121,1.249,122,1.202,123,1.298,124,1.298,125,1.158,126,1.298,127,1.158,128,1.202,129,1.117,130,1.426,131,0.936,132,1.04,133,0.874,134,1.04,135,1.298,136,1.298,137,0.007,138,0.007,139,0.134,140,0.468,141,1.034]],["title/classes/State.html",[181,0.073,259,1.742]],["body/classes/State.html",[3,0.125,4,0.125,5,0.125,8,1.132,9,0.525,10,0.973,12,0.208,13,0.013,21,1.834,22,1.547,24,0.239,36,1.317,39,0.785,45,1.578,62,1.189,65,1.11,66,1.578,73,1.898,74,1.898,76,1.273,82,1.149,115,0.257,130,1.811,131,1.317,133,1.23,134,1.462,137,0.009,138,0.009,139,0.189,140,0.595,141,1.153,179,1.003,181,0.135,183,1.149,190,1.6,191,2.245,198,1.526,199,1.189,200,0.814,201,1.578,202,0.873,210,2.094,231,1.037,241,0.843,244,3.002,245,2.372,246,2.794,247,1.757,254,1.757,255,2.871,258,2.495,259,3.02,260,1.571,261,2.794,262,2.372,263,2.794,264,2.159,265,1.692,266,2.372,267,2.635,1357,4.426,1358,4.426,1359,4.426]],["title/modules/StateMachineModules.html",[678,2.287,703,2.731]],["body/modules/StateMachineModules.html",[3,0.156,4,0.156,5,0.156,12,0.277,13,0.013,24,0.176,137,0.011,138,0.011,181,0.099,281,1.967,342,3.73,363,4.968,678,3.825,679,4.282,680,3.298,681,4.282,686,5.036,687,4.91,688,4.009,689,3.73,691,5.338,692,4.91,693,5.338,694,4.038,695,5.913,703,5.534,705,4.828,1194,4.828,1360,4.828,1361,4.828,1362,5.54,1363,4.828,1364,5.54,1365,5.54]],["title/interfaces/StateMachineOptions.html",[0,0.355,69,1.55]],["body/interfaces/StateMachineOptions.html",[0,0.699,1,1.195,2,0.684,3,0.088,4,0.088,5,0.088,6,1.241,8,1.109,9,0.529,12,0.214,13,0.014,14,1.239,15,1.419,16,2.763,17,1.07,18,2.306,19,1.901,20,1.29,21,1.52,22,1.578,23,1.29,24,0.248,25,1.195,26,1.29,27,1.29,28,1.29,29,0.93,30,1.76,31,1.117,32,0.784,33,1.28,34,1.195,35,2.014,36,1.371,37,1.635,38,1.828,39,1.334,40,1.635,41,2.09,42,1.371,43,1.76,44,1.11,45,1.807,46,1.07,47,1.696,48,1.469,49,2.257,50,1.807,51,1.29,52,2.171,53,1.29,54,1.29,55,1.241,56,2.554,57,2.066,58,1.696,59,0.868,60,2.171,61,1.901,62,1.728,63,2.09,64,2.126,65,1.614,66,1.807,67,1.76,68,0.817,69,2.09,70,1.828,71,1.522,72,1.522,73,0.899,74,0.899,75,1.29,76,0.899,77,1.577,78,0.997,79,1.033,80,1.901,81,2.257,82,1.419,83,1.873,84,1.901,85,2.257,86,1.901,87,0.679,88,1.901,89,2.171,90,1.901,91,1.241,92,1.901,93,1.29,94,1.241,95,1.29,96,1.195,97,0.936,98,1.241,99,1.29,100,1.29,101,1.29,102,1.29,103,1.29,104,1.29,105,1.828,106,1.241,107,1.241,108,1.241,109,1.29,110,1.241,111,1.29,112,1.29,113,0.997,114,1.29,115,0.239,116,1.29,117,0.963,118,1.29,119,1.241,120,1.11,121,1.241,122,1.195,123,1.29,124,1.29,125,1.151,126,1.29,127,1.151,128,1.195,129,1.11,130,1.419,131,0.93,132,1.033,133,0.868,134,1.033,135,1.29,136,1.29,137,0.007,138,0.007,139,0.134,140,0.466,141,1.094,254,2.672]],["title/injectables/StateMachinesService.html",[268,1.294,363,2.415]],["body/injectables/StateMachinesService.html",[2,0.477,3,0.062,4,0.062,5,0.062,8,0.736,9,0.447,10,0.967,12,0.258,13,0.014,17,0.747,21,1.618,22,1.28,24,0.069,29,0.649,31,1.844,32,1.095,33,0.97,36,1.039,37,1.239,42,0.649,45,1.996,46,2.244,55,1.733,62,0.937,65,1.252,66,1.564,68,0.619,70,1.981,82,1.133,87,0.937,96,0.833,97,0.854,115,0.194,119,0.866,120,1.239,131,1.95,137,0.006,138,0.006,139,0.093,140,0.353,141,0.535,142,1.441,147,1.441,149,1.441,155,3.073,156,1.113,159,1.063,180,1.495,181,0.039,233,4.107,237,2.755,241,1.458,259,3.092,260,1.239,262,2.674,268,1.113,270,1.063,272,1.802,274,1.562,280,1.629,281,0.774,285,3.498,286,1.802,287,0.976,302,1.578,314,3.042,315,3.804,316,0.695,318,4.583,319,4.215,339,3.927,340,1.578,341,4.349,342,1.468,346,2.939,352,1.578,355,1.578,358,3.078,359,1.578,363,2.078,365,2.674,366,1.578,367,2.97,368,1.9,371,1.298,377,2.747,389,1.9,391,3.435,393,3.159,394,3.804,395,3.804,396,3.804,400,2.747,403,2.97,407,2.788,411,2.663,412,2.887,429,3.677,435,3.747,443,1.9,455,3.435,456,3.806,457,1.9,534,4.426,555,2.35,599,2.939,604,2.548,656,1.9,661,1.9,694,1.298,715,1.468,727,3.804,728,2.97,730,3.15,745,4.349,747,6.095,754,2.674,755,1.9,756,1.9,759,1.578,798,1.9,843,1.229,844,3.042,846,1.468,855,4.349,894,3.15,951,3.804,985,3.15,1072,1.298,1366,1.716,1367,4.365,1368,4.365,1369,4.365,1370,4.365,1371,4.365,1372,4.365,1373,3.491,1374,2.18,1375,4.365,1376,4.365,1377,2.18,1378,3.491,1379,3.491,1380,2.18,1381,5.459,1382,3.491,1383,2.18,1384,2.18,1385,2.18,1386,2.18,1387,2.18,1388,2.18,1389,2.18,1390,2.18,1391,2.18,1392,2.18,1393,1.716,1394,2.18,1395,2.18,1396,2.18,1397,3.491,1398,2.18,1399,2.18,1400,2.18,1401,2.18,1402,3.491,1403,2.18,1404,2.18,1405,2.18,1406,2.18,1407,2.18,1408,2.18,1409,3.927,1410,3.491,1411,2.18,1412,2.18,1413,2.18,1414,6.116,1415,2.18,1416,3.491,1417,2.18,1418,2.18,1419,4.365,1420,4.365,1421,4.365,1422,3.491,1423,3.491,1424,4.365,1425,2.18,1426,2.18,1427,2.18,1428,2.18,1429,4.99,1430,6.116,1431,3.491,1432,3.491,1433,4.365,1434,2.18,1435,2.18,1436,3.491,1437,2.18,1438,2.18,1439,3.491,1440,4.365,1441,2.18,1442,2.18,1443,2.18,1444,2.18,1445,2.18,1446,2.18,1447,2.18,1448,2.18,1449,2.18,1450,2.18,1451,2.18,1452,2.18,1453,2.18,1454,2.18,1455,5.824,1456,2.18,1457,2.18,1458,2.18,1459,2.18,1460,2.18]],["title/classes/StateOptions.html",[72,1.34,181,0.073]],["body/classes/StateOptions.html",[3,0.134,4,0.134,5,0.134,8,1.104,9,0.517,10,1.007,12,0.218,13,0.014,22,1.113,24,0.217,39,1.092,40,1.685,42,1.412,44,1.685,45,1.275,62,1.275,64,2.535,65,1.191,66,1.653,72,2.388,73,1.964,74,1.964,76,1.365,115,0.256,137,0.01,138,0.01,139,0.203,140,0.623,179,1.075,181,0.129,183,1.232,190,1.656,191,2.244,198,1.597,199,1.275,200,0.873,201,1.653,202,0.937,210,2.097,231,1.113,241,0.904,247,1.884,254,1.884,255,2.266,264,2.315,265,1.814,1027,3.85,1028,2.825,1046,2.825,1050,2.996,1051,3.885,1052,3.435,1053,3.196,1461,4.747,1462,4.747,1463,4.747]],["title/interfaces/StoreKey.html",[0,0.355,1072,2.415]],["body/interfaces/StoreKey.html",[0,0.673,2,1.134,3,0.146,4,0.146,5,0.146,8,1.101,9,0.522,12,0.23,13,0.014,24,0.244,31,1.932,32,1.3,33,1.808,42,1.937,50,1.712,71,1.712,82,1.345,87,0.764,97,0.887,115,0.249,132,1.712,137,0.01,138,0.01,139,0.221,140,0.659,155,2.319,156,3.324,159,2.527,260,1.839,403,3.084,412,2.225,429,3.271,456,3.999,573,3.489,722,2.921,754,2.776,843,2.921,1066,3.489,1067,3.75,1068,3.75,1069,4.791,1070,3.75,1071,3.489,1072,3.874]],["title/classes/SubDomain.html",[181,0.073,1017,2.731]],["body/classes/SubDomain.html",[3,0.144,4,0.144,5,0.144,8,0.751,9,0.51,10,1.152,12,0.228,13,0.013,24,0.224,39,1.142,115,0.258,137,0.01,138,0.01,139,0.217,140,0.651,179,1.153,181,0.091,183,1.321,185,3.213,190,1.895,191,2.216,198,1.67,199,1.367,200,0.936,201,1.728,202,1.004,210,1.728,212,4.752,230,4.201,231,1.654,241,0.97,247,2.802,254,2.021,255,1.874,927,3.979,1017,4.752,1018,3.684,1464,3.684,1465,7.058,1466,5.09,1467,5.09,1468,5.09,1469,5.09,1470,5.09,1471,5.09,1472,4.006,1473,5.09,1474,5.09,1475,4.436]],["title/injectables/SubDomainService.html",[268,1.294,367,2.415]],["body/injectables/SubDomainService.html",[3,0.127,4,0.127,5,0.127,9,0.439,10,0.979,12,0.25,13,0.014,24,0.142,57,2.029,59,1.245,68,1.052,97,1.258,115,0.188,137,0.009,138,0.009,139,0.191,141,0.908,142,2.446,147,2.446,149,2.446,181,0.08,200,0.824,202,0.884,227,3.741,230,3.528,234,4.192,247,2.636,260,2.357,265,2.701,268,1.891,270,2.186,272,3.178,274,2.652,276,3.984,280,3.43,281,1.591,282,2.526,285,2.092,286,2.741,287,2.971,322,5.165,367,3.528,407,2.288,411,2.186,412,2.545,445,2.829,447,3.99,466,3.243,495,3.017,604,2.288,860,4.664,907,4.471,927,4.143,1017,5.326,1019,3.905,1240,3.905,1289,4.664,1472,3.526,1476,3.905,1477,5.165,1478,7.066,1479,4.481,1480,4.481,1481,5.926,1482,5.926,1483,4.481,1484,5.165,1485,5.926,1486,5.926,1487,4.481,1488,4.481,1489,5.926,1490,5.926,1491,4.481]],["title/classes/TasksQueue.html",[181,0.073,936,2.561]],["body/classes/TasksQueue.html",[3,0.147,4,0.147,5,0.147,9,0.487,10,1.135,12,0.231,13,0.013,24,0.226,87,0.961,115,0.253,120,2.528,137,0.01,138,0.01,139,0.222,140,0.659,179,1.176,181,0.117,183,1.347,190,1.866,191,2.222,198,1.691,199,1.394,200,0.955,201,1.75,202,1.024,231,1.669,241,0.989,255,1.911,757,3.495,870,3.606,884,2.651,927,4.015,932,3.495,933,4.085,936,4.496,937,4.524,938,6.207,939,5.127,940,3.495,941,4.085,1492,5.191,1493,5.191,1494,5.191,1495,5.191,1496,5.191]],["title/injectables/TasksQueueService.html",[268,1.294,728,2.415]],["body/injectables/TasksQueueService.html",[2,0.512,3,0.104,4,0.066,5,0.16,8,0.345,9,0.507,10,0.961,12,0.231,13,0.014,24,0.074,30,1.411,31,1.456,32,1.303,57,0.801,59,1.026,68,1.157,87,0.886,97,1.309,115,0.207,137,0.006,138,0.008,139,0.1,141,0.998,142,1.524,147,2.69,149,2.69,181,0.042,200,0.43,202,0.462,210,1.394,231,1.072,241,1.409,259,1.005,260,2.891,265,1.411,268,1.178,270,1.141,272,3.134,274,1.652,276,3.545,280,3.206,281,0.83,282,1.319,285,2.804,286,2.69,287,3.134,316,1.916,331,3.985,370,1.393,371,1.393,384,1.693,407,2.651,408,4.086,411,2.23,412,2.58,435,1.978,445,4.114,447,2.486,456,1.254,496,3.805,561,2.672,599,4.388,604,3.637,621,3.217,632,2.039,633,5.128,694,1.393,715,1.575,728,2.198,730,3.568,736,5.235,738,6.41,757,1.575,759,1.693,783,1.841,784,3.217,827,4.525,839,2.039,896,2.672,903,5.821,907,3.496,917,3.186,924,1.841,927,4.171,936,1.477,939,1.841,1013,2.039,1020,2.039,1021,1.575,1023,2.039,1289,2.905,1354,1.841,1355,3.217,1477,3.217,1484,5.235,1497,2.039,1498,3.692,1499,3.692,1500,3.692,1501,2.339,1502,4.573,1503,4.573,1504,2.339,1505,3.692,1506,3.692,1507,2.339,1508,3.692,1509,2.339,1510,3.692,1511,3.692,1512,3.692,1513,2.339,1514,3.692,1515,5.192,1516,3.692,1517,2.339,1518,3.692,1519,2.339,1520,3.692,1521,3.692,1522,5.192,1523,2.339,1524,7.122,1525,3.692,1526,5.192,1527,2.339,1528,6.517,1529,3.217,1530,3.692,1531,2.339,1532,2.339,1533,2.339,1534,3.692,1535,2.339,1536,3.692,1537,2.339,1538,2.339,1539,3.692,1540,2.339,1541,2.339,1542,2.339,1543,3.692,1544,4.573,1545,2.339,1546,2.339,1547,3.692,1548,3.692,1549,2.339,1550,2.339,1551,2.339,1552,2.339,1553,2.339,1554,2.339,1555,2.339,1556,3.692,1557,2.339,1558,3.692,1559,2.339,1560,3.692,1561,3.692,1562,2.339,1563,2.339,1564,2.339,1565,2.339,1566,2.339,1567,2.339,1568,2.339,1569,2.339,1570,2.339,1571,3.692,1572,2.339,1573,2.339,1574,2.339,1575,2.339,1576,2.339,1577,2.339,1578,2.339,1579,2.339,1580,2.339,1581,3.985,1582,2.339,1583,2.339,1584,2.339,1585,2.339]],["title/interfaces/TriggerContext.html",[0,0.355,722,2.287]],["body/interfaces/TriggerContext.html",[0,0.669,2,1.112,3,0.144,4,0.144,5,0.144,8,0.749,9,0.521,12,0.227,13,0.014,24,0.243,31,1.923,32,1.275,33,1.786,42,1.913,50,2.449,71,1.679,82,1.924,87,0.749,97,0.87,115,0.252,132,2.449,137,0.01,138,0.01,139,0.217,140,0.65,141,1.135,155,2.274,156,3.283,159,2.478,260,1.804,321,4.653,403,3.025,412,2.182,429,3.207,456,2.723,573,3.421,722,3.624,754,2.723,843,2.865,1066,3.421,1067,3.677,1068,3.677,1069,4.748,1070,3.677,1071,3.421,1072,3.025]],["title/classes/Type.html",[115,0.129,181,0.073]],["body/classes/Type.html",[3,0.125,4,0.125,5,0.125,8,1.133,9,0.526,10,0.974,12,0.208,13,0.013,21,1.835,22,1.548,24,0.239,36,1.319,39,0.787,45,1.889,62,1.19,65,1.112,66,1.889,73,1.275,74,1.275,76,1.899,82,1.151,115,0.255,130,1.813,131,1.319,133,1.232,134,1.465,137,0.009,138,0.009,139,0.189,140,0.595,141,1.153,179,1.004,181,0.135,183,1.151,190,1.602,191,2.25,198,1.527,199,1.19,200,0.815,201,1.58,202,0.875,210,2.062,231,1.039,241,0.845,244,3.005,245,2.375,246,2.798,247,1.76,255,2.828,258,2.499,259,2.837,260,1.574,261,2.798,262,2.375,263,2.798,264,2.162,265,1.694,266,2.375,267,2.639,1586,4.433,1587,4.433,1588,4.433]],["title/classes/UnProcessedStateMachine.html",[181,0.073,1051,2.561]],["body/classes/UnProcessedStateMachine.html",[3,0.128,4,0.128,5,0.128,8,1.089,9,0.515,10,1.048,12,0.212,13,0.013,22,1.065,24,0.213,39,1.062,40,1.613,42,1.352,44,1.613,45,1.22,62,1.796,64,2.505,65,1.678,66,1.908,72,2.348,73,1.307,74,1.307,76,1.307,115,0.261,137,0.009,138,0.009,139,0.194,140,0.605,141,1.201,179,1.029,181,0.127,183,1.18,190,1.723,191,2.221,198,1.553,199,1.22,200,0.836,201,1.606,202,0.897,210,2.15,231,1.065,241,0.866,247,1.804,254,2.821,255,2.718,264,2.217,265,1.737,1027,3.77,1028,2.705,1046,2.705,1050,2.869,1051,4.221,1052,3.289,1053,3.06,1589,4.545,1590,4.545,1591,4.545,1592,4.545]],["title/interfaces/UnProcessedStateMachineOptions.html",[0,0.355,43,1.55]],["body/interfaces/UnProcessedStateMachineOptions.html",[0,0.699,1,1.189,2,0.681,3,0.088,4,0.088,5,0.088,6,1.236,8,1.108,9,0.529,12,0.213,13,0.014,14,1.236,15,1.414,16,2.759,17,1.066,18,2.302,19,1.895,20,1.284,21,1.516,22,1.575,23,1.284,24,0.248,25,1.189,26,1.284,27,1.284,28,1.284,29,0.926,30,1.755,31,1.113,32,0.781,33,1.276,34,1.189,35,2.009,36,1.366,37,1.63,38,1.823,39,1.333,40,1.63,41,2.085,42,1.366,43,2.085,44,1.105,45,1.805,46,1.066,47,1.691,48,1.465,49,2.251,50,1.803,51,1.284,52,2.166,53,1.284,54,1.284,55,1.236,56,2.55,57,2.062,58,1.691,59,0.865,60,2.166,61,1.895,62,1.725,63,2.455,64,2.122,65,1.611,66,1.805,67,1.755,68,0.815,69,1.755,70,1.823,71,1.517,72,1.517,73,0.895,74,0.895,75,1.284,76,0.895,77,1.572,78,0.993,79,1.028,80,1.895,81,2.251,82,1.416,83,1.868,84,1.895,85,2.251,86,1.895,87,0.677,88,1.895,89,2.166,90,1.895,91,1.236,92,1.895,93,1.284,94,1.236,95,1.284,96,1.189,97,0.934,98,1.236,99,1.284,100,1.284,101,1.284,102,1.284,103,1.284,104,1.284,105,1.823,106,1.236,107,1.236,108,1.236,109,1.284,110,1.236,111,1.284,112,1.284,113,0.993,114,1.284,115,0.242,116,1.284,117,0.959,118,1.284,119,1.236,120,1.105,121,1.236,122,1.189,123,1.284,124,1.284,125,1.146,126,1.284,127,1.146,128,1.189,129,1.105,130,1.414,131,0.926,132,1.028,133,0.865,134,1.028,135,1.284,136,1.284,137,0.007,138,0.007,139,0.133,140,0.465,141,1.093,254,2.668]],["title/coverage.html",[1593,4.362]],["body/coverage.html",[0,0.717,1,1.106,5,0.082,6,3.139,13,0.014,14,0.655,18,1.106,21,0.804,22,0.678,25,1.106,29,0.861,33,1.208,35,1.065,37,1.027,41,1.106,43,1.106,63,1.106,64,1.437,67,1.106,69,1.106,72,1.437,91,3.154,97,0.495,115,0.138,117,0.891,125,1.065,127,1.065,128,1.106,129,1.027,130,1.34,137,0.007,138,0.007,152,1.722,153,3.931,164,1.478,167,1.631,176,1.631,177,1.631,180,1.789,181,0.146,182,1.722,184,3.707,204,1.827,206,1.827,242,1.722,244,1.478,245,3.636,259,1.243,266,1.55,268,2.357,269,1.827,271,2.522,291,2.928,292,2.094,294,5.341,316,0.923,321,2.094,346,2.928,353,2.094,356,2.094,358,1.631,360,2.094,363,1.722,365,1.55,367,1.722,372,1.827,374,1.827,376,2.277,378,2.277,382,2.277,435,1.55,561,6.163,716,4.111,722,1.631,728,1.722,730,1.827,754,1.55,843,1.631,846,1.948,847,2.522,868,1.55,869,3.688,870,2.338,871,1.722,892,1.631,894,1.827,895,2.522,914,3.518,917,1.631,930,1.948,932,3.518,936,1.827,940,1.948,948,2.522,949,2.522,966,1.948,967,3.147,983,2.094,985,1.827,986,2.522,1017,1.948,1018,2.094,1021,1.948,1022,2.094,1027,1.631,1028,1.722,1031,2.094,1046,3.707,1051,1.827,1057,2.522,1066,3.911,1072,1.722,1103,2.094,1104,2.522,1215,2.522,1222,2.522,1286,2.522,1326,3.147,1340,2.522,1348,3.147,1366,3.422,1393,2.277,1464,3.147,1476,2.522,1497,2.522,1529,2.522,1581,3.79,1593,2.277,1594,2.894,1595,2.894,1596,2.894,1597,2.894,1598,2.894,1599,8.041,1600,5.225,1601,4.349,1602,4.349,1603,4.349,1604,6.542,1605,6.787,1606,5.81,1607,2.894,1608,2.894,1609,7.143,1610,4.349,1611,6.542,1612,5.225,1613,7.276,1614,5.81,1615,2.894,1616,4.349,1617,2.522,1618,2.894,1619,2.522,1620,2.522,1621,4.349,1622,2.894,1623,2.894,1624,2.894,1625,2.894,1626,2.894,1627,2.894,1628,2.894,1629,2.894,1630,2.894,1631,2.894,1632,2.894,1633,2.894,1634,2.894,1635,2.894,1636,2.894,1637,2.894]],["title/dependencies.html",[681,3.081,1638,2.95]],["body/dependencies.html",[13,0.013,14,1.318,15,1.793,17,1.993,137,0.011,138,0.011,159,2.839,200,1.07,202,1.148,281,2.066,338,4.212,340,4.212,342,3.918,353,4.212,681,3.674,699,4.58,1146,5.072,1639,5.82,1640,5.82,1641,5.82,1642,5.82,1643,7.771,1644,5.82,1645,5.82,1646,5.82,1647,5.82,1648,5.82,1649,5.82,1650,5.82,1651,5.82,1652,5.82,1653,5.82,1654,5.82,1655,5.82,1656,5.82,1657,5.82,1658,5.82,1659,5.82,1660,5.82,1661,5.82,1662,5.82,1663,5.82]],["title/miscellaneous/functions.html",[1409,3.841,1664,2.136]],["body/miscellaneous/functions.html",[13,0.012,137,0.012,138,0.012,139,0.278,1409,5.128,1619,5.68,1620,6.843,1664,4.114,1665,6.517]],["title/classes/git.html",[181,0.073,871,2.415]],["body/classes/git.html",[3,0.17,4,0.202,5,0.13,9,0.523,10,1.093,12,0.213,13,0.013,14,1.524,24,0.214,87,0.679,113,2.146,115,0.253,133,1.279,137,0.01,138,0.01,139,0.197,140,0.61,148,2.595,179,1.043,180,2.445,181,0.133,183,1.195,190,1.798,191,2.278,198,1.566,199,1.236,200,0.847,201,1.62,202,0.908,210,1.62,215,2.245,231,1.079,241,0.877,316,2.278,868,3.605,869,2.595,870,3.195,871,4.25,872,2.74,873,3.099,883,2.74,884,2.35,885,2.74,886,3.099,887,4.247,888,4.53,889,4.53,890,3.099,891,3.099,892,2.595,893,2.905,1666,4.603,1667,4.603,1668,4.603,1669,4.603,1670,4.603]],["title/index.html",[139,0.145,565,2.663,1671,3.384]],["body/index.html",[4,0.155,13,0.013,89,2.174,137,0.011,138,0.011,163,3.088,316,1.747,319,5.758,475,4.773,495,4.535,567,4.31,860,4.31,861,4.773,863,4.773,885,3.26,1593,4.31,1672,5.477,1673,5.477,1674,6.736,1675,5.477,1676,5.477,1677,5.477,1678,5.477,1679,5.477,1680,7.296,1681,5.477,1682,5.477,1683,5.477,1684,5.477,1685,8.061,1686,5.477,1687,5.477,1688,6.736,1689,5.477,1690,5.477,1691,5.477,1692,5.477,1693,6.736,1694,5.477,1695,5.477,1696,5.477,1697,6.736,1698,6.736,1699,5.477,1700,5.477,1701,5.477,1702,5.477,1703,4.773,1704,5.477,1705,5.477,1706,5.477,1707,5.477,1708,5.477,1709,5.477,1710,5.477,1711,5.477,1712,5.477,1713,5.477,1714,5.477,1715,5.477,1716,5.477,1717,5.477,1718,4.773]],["title/modules.html",[680,3.3]],["body/modules.html",[13,0.012,137,0.012,138,0.012,679,4.005,680,3.777,686,4.005,701,4.592,703,4.272,1703,6.77,1719,7.767,1720,7.767,1721,7.991,1722,6.345,1723,6.345]],["title/overview.html",[1724,4.831]],["body/overview.html",[2,1.036,13,0.013,137,0.01,138,0.01,183,1.228,269,4.925,270,2.308,293,3.185,358,4.399,363,4.644,365,4.18,367,4.644,372,4.925,374,4.925,384,3.424,679,4.925,680,2.816,681,3.877,682,4.123,683,4.123,684,4.123,685,4.123,686,5.375,687,4.444,688,3.424,689,3.185,703,5.253,728,4.644,730,4.925,818,3.723,846,3.185,894,4.925,985,4.925,1008,4.123,1009,4.123,1010,4.123,1360,4.123,1361,4.123,1363,4.123,1724,4.123,1725,4.731,1726,4.731,1727,4.731,1728,4.731]],["title/properties.html",[140,0.494,1638,2.95]],["body/properties.html",[13,0.013,137,0.012,138,0.012,140,0.655,215,3.157,316,2.065,885,3.853,1718,5.641,1729,6.473,1730,6.473]],["title/miscellaneous/typealiases.html",[1664,2.136,1731,4.881]],["body/miscellaneous/typealiases.html",[13,0.011,115,0.192,137,0.011,138,0.011,139,0.257,184,3.587,203,4.505,245,3.229,258,4.024,757,4.805,869,3.398,883,4.248,914,4.057,916,5.616,932,4.057,967,4.361,981,5.616,1046,3.587,1050,4.505,1326,4.361,1337,5.616,1348,4.361,1354,5.616,1464,4.361,1472,5.616,1664,3.804,1732,6.026,1733,5.252,1734,5.252,1735,5.252,1736,5.252,1737,5.252,1738,5.252,1739,5.252,1740,5.252,1741,5.252,1742,5.252]],["title/miscellaneous/variables.html",[1664,2.136,1743,4.254]],["body/miscellaneous/variables.html",[3,0.163,9,0.359,13,0.013,31,1.58,46,1.477,57,1.477,68,1.156,87,0.852,97,0.989,115,0.184,137,0.009,138,0.009,139,0.184,155,1.93,166,2.568,180,2.612,184,2.568,241,0.822,242,3.439,243,2.904,245,2.311,259,1.853,260,1.531,266,3.096,267,2.568,272,1.78,286,1.78,287,2.585,294,3.394,346,4.686,352,4.715,353,4.182,354,3.759,355,4.182,370,2.568,376,4.547,377,3.394,378,4.547,379,3.759,382,4.547,383,3.759,407,2.203,411,2.104,412,1.853,455,3.394,456,4.458,485,3.759,495,2.904,534,6.022,555,2.904,716,3.394,869,2.432,892,3.258,893,2.723,914,2.904,930,3.89,931,3.394,932,2.904,940,3.89,941,3.394,967,3.122,983,4.182,984,3.759,1018,4.182,1022,4.182,1028,3.439,1031,4.182,1046,2.568,1053,2.904,1326,3.122,1339,3.759,1348,3.122,1356,3.759,1366,3.394,1393,4.547,1464,3.122,1475,3.759,1617,3.759,1664,2.723,1733,3.759,1734,3.759,1735,3.759,1736,3.759,1737,3.759,1738,3.759,1739,3.759,1740,3.759,1741,3.759,1742,3.759,1743,3.759,1744,7.469,1745,5.778,1746,4.313,1747,4.313,1748,5.778,1749,5.778,1750,5.778,1751,4.313,1752,4.313,1753,4.313,1754,4.313,1755,4.313,1756,5.778,1757,4.313,1758,5.778,1759,4.313,1760,4.313]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"classes/git.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":561,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/TasksQueueService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1729,"title":{},"body":{"properties.html":{}}}],["0.0.4",{"_index":1642,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1658,"title":{},"body":{"dependencies.html":{}}}],["0.5.5",{"_index":1641,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1599,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1627,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1612,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1630,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1629,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1628,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1614,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1613,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1605,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1609,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1611,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1604,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1610,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":384,"title":{"classes/Date-1.html":{}},"body":{"controllers/AppController.html":{},"injectables/TasksQueueService.html":{},"overview.html":{}}}],["1.0.1",{"_index":1652,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":1649,"title":{},"body":{"dependencies.html":{}}}],["1.1.6",{"_index":1644,"title":{},"body":{"dependencies.html":{}}}],["1.23.2",{"_index":1654,"title":{},"body":{"dependencies.html":{}}}],["1.24.4",{"_index":1655,"title":{},"body":{"dependencies.html":{}}}],["1.8.15",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1618,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1616,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1633,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1601,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1581,"title":{},"body":{"injectables/TasksQueueService.html":{},"coverage.html":{}}}],["100",{"_index":1529,"title":{},"body":{"injectables/TasksQueueService.html":{},"coverage.html":{}}}],["1000",{"_index":1287,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["11",{"_index":1726,"title":{},"body":{"overview.html":{}}}],["11/16",{"_index":1624,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1284,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["18",{"_index":1602,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":818,"title":{"classes/Date-2.html":{}},"body":{"injectables/AppService.html":{},"overview.html":{}}}],["2/11",{"_index":1603,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1621,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1598,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":1178,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["24",{"_index":1285,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["27",{"_index":1727,"title":{},"body":{"overview.html":{}}}],["28",{"_index":1597,"title":{},"body":{"coverage.html":{}}}],["3.0.2",{"_index":1660,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":1615,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":1608,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1728,"title":{},"body":{"overview.html":{}}}],["30000",{"_index":379,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["30s",{"_index":380,"title":{},"body":{"controllers/AppController.html":{}}}],["33",{"_index":1600,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1725,"title":{},"body":{"overview.html":{}}}],["4.26.1",{"_index":1663,"title":{},"body":{"dependencies.html":{}}}],["42",{"_index":1625,"title":{},"body":{"coverage.html":{}}}],["5.11.1",{"_index":1656,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1606,"title":{},"body":{"coverage.html":{}}}],["6.6.3",{"_index":1661,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":1607,"title":{},"body":{"coverage.html":{}}}],["6/14",{"_index":1626,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":1632,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1286,"title":{},"body":{"injectables/SatelliteService.html":{},"coverage.html":{}}}],["60000",{"_index":383,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["66",{"_index":1631,"title":{},"body":{"coverage.html":{}}}],["68",{"_index":1623,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":1646,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":1643,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":1635,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":768,"title":{},"body":{"injectables/AppService.html":{}}}],["8.3.2",{"_index":1662,"title":{},"body":{"dependencies.html":{}}}],["87",{"_index":1634,"title":{},"body":{"coverage.html":{}}}],["_apisyncmachinemodel",{"_index":278,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{}}}],["_apisyncmachinesservice",{"_index":397,"title":{},"body":{"controllers/AppController.html":{}}}],["_appservice",{"_index":391,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{},"injectables/StateMachinesService.html":{}}}],["_configservice",{"_index":396,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["_cwlservice",{"_index":1378,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["_fs",{"_index":1367,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["_fspromises",{"_index":1368,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["_httpservice",{"_index":395,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["_id",{"_index":231,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{}}}],["_labservice",{"_index":1376,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["_mergedefaultconfigwithcustom",{"_index":295,"title":{},"body":{"controllers/AppController.html":{}}}],["_mergedefaultconfigwithcustom(machines",{"_index":299,"title":{},"body":{"controllers/AppController.html":{}}}],["_path",{"_index":1369,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["_sampleservice",{"_index":1375,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["_samplesservice",{"_index":729,"title":{},"body":{"injectables/AppService.html":{}}}],["_satellitemachinemodel",{"_index":1218,"title":{},"body":{"injectables/SatelliteMachineService.html":{}}}],["_satellitemachineservice",{"_index":398,"title":{},"body":{"controllers/AppController.html":{}}}],["_satelliteservice",{"_index":393,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/StateMachinesService.html":{}}}],["_satellitetaskmodel",{"_index":1344,"title":{},"body":{"injectables/SatelliteTasksService.html":{}}}],["_satellitetasksservice",{"_index":399,"title":{},"body":{"controllers/AppController.html":{}}}],["_statemachineservice",{"_index":392,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["_subdomainservice",{"_index":394,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["_tasksqueueservice",{"_index":727,"title":{},"body":{"injectables/AppService.html":{},"injectables/StateMachinesService.html":{}}}],["a.date.modified",{"_index":813,"title":{},"body":{"injectables/AppService.html":{}}}],["abscert",{"_index":502,"title":{},"body":{"controllers/AppController.html":{}}}],["abskey",{"_index":499,"title":{},"body":{"controllers/AppController.html":{}}}],["absoluteurl",{"_index":212,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"classes/SubDomain.html":{}}}],["absoluteurlsettings",{"_index":182,"title":{"classes/AbsoluteUrlSettings.html":{}},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{},"coverage.html":{}}}],["access",{"_index":1547,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["accessor",{"_index":665,"title":{},"body":{"controllers/AppController.html":{}}}],["accessor[i",{"_index":671,"title":{},"body":{"controllers/AppController.html":{}}}],["accessor[last",{"_index":672,"title":{},"body":{"controllers/AppController.html":{}}}],["action",{"_index":120,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/TasksQueue.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["action.split('.').reduce((acum",{"_index":648,"title":{},"body":{"controllers/AppController.html":{}}}],["actions",{"_index":66,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"injectables/AppService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["actions[k]).call(this",{"_index":1437,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["acum[curr",{"_index":650,"title":{},"body":{"controllers/AppController.html":{}}}],["add",{"_index":820,"title":{},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{}}}],["address",{"_index":479,"title":{},"body":{"controllers/AppController.html":{},"injectables/SatelliteService.html":{}}}],["aliases",{"_index":1732,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alive",{"_index":610,"title":{},"body":{"controllers/AppController.html":{}}}],["allow",{"_index":1431,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["always",{"_index":81,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["amazing",{"_index":1704,"title":{},"body":{"index.html":{}}}],["amount",{"_index":995,"title":{},"body":{"injectables/LabService.html":{}}}],["api",{"_index":47,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["api_sync_machines",{"_index":263,"title":{},"body":{"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"classes/Options.html":{},"classes/State.html":{},"classes/Type.html":{}}}],["apimachine",{"_index":49,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["apimachines",{"_index":238,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["apisynccomplete",{"_index":1,"title":{"interfaces/APISyncComplete.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["apisyncmachine",{"_index":244,"title":{"classes/ApiSyncMachine.html":{}},"body":{"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"modules/MongoConnectionModule.html":{},"classes/Options.html":{},"classes/State.html":{},"classes/Type.html":{},"coverage.html":{}}}],["apisyncmachine.name",{"_index":1042,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["apisyncmachinedocument",{"_index":258,"title":{},"body":{"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"classes/Options.html":{},"classes/State.html":{},"classes/Type.html":{},"miscellaneous/typealiases.html":{}}}],["apisyncmachines.service",{"_index":1026,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["apisyncmachineschema",{"_index":266,"title":{},"body":{"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"modules/MongoConnectionModule.html":{},"classes/Options.html":{},"classes/State.html":{},"classes/Type.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apisyncmachinesservice",{"_index":269,"title":{"injectables/ApiSyncMachinesService.html":{}},"body":{"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/MongoConnectionModule.html":{},"coverage.html":{},"overview.html":{}}}],["apisyncmessage",{"_index":29,"title":{"interfaces/APISyncMessage.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"injectables/AppService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["apisyncservice",{"_index":25,"title":{"interfaces/APISyncService.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["apisyncstatemachineobject",{"_index":152,"title":{"interfaces/APISyncStateMachineObject.html":{}},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{},"coverage.html":{}}}],["app",{"_index":1687,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":700,"title":{},"body":{"modules/AppModule.html":{}}}],["app.guard",{"_index":357,"title":{},"body":{"controllers/AppController.html":{}}}],["app.module",{"_index":1194,"title":{},"body":{"modules/SatInterfaceModule.html":{},"modules/StateMachineModules.html":{}}}],["app.service",{"_index":359,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/SatInterfaceController.html":{},"injectables/StateMachinesService.html":{}}}],["appcontroller",{"_index":292,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1679,"title":{},"body":{"index.html":{}}}],["applyto",{"_index":246,"title":{},"body":{"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"classes/Options.html":{},"classes/State.html":{},"classes/Type.html":{}}}],["appmodule",{"_index":679,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SatInterfaceModule.html":{},"modules/StateMachineModules.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":1398,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["appservice",{"_index":358,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{},"injectables/StateMachinesService.html":{},"coverage.html":{},"overview.html":{}}}],["arg",{"_index":652,"title":{},"body":{"controllers/AppController.html":{}}}],["args",{"_index":82,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["arguments",{"_index":320,"title":{},"body":{"controllers/AppController.html":{}}}],["argumentshost",{"_index":955,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["array",{"_index":83,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/AbsoluteUrlSettings.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["assign",{"_index":1486,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["async",{"_index":272,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"miscellaneous/variables.html":{}}}],["asyncfunction",{"_index":1405,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["asyncfunction('ctx",{"_index":1436,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["asyncfunction('logger",{"_index":1427,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["asyncfunction('state",{"_index":1450,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["asyncheartbeat",{"_index":723,"title":{},"body":{"injectables/AppService.html":{}}}],["attempted",{"_index":1546,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["attempting",{"_index":431,"title":{},"body":{"controllers/AppController.html":{}}}],["auth",{"_index":235,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"guards/AuthGuard.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["authguard",{"_index":356,"title":{"guards/AuthGuard.html":{}},"body":{"controllers/AppController.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["author",{"_index":885,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/git.html":{},"index.html":{},"properties.html":{}}}],["automatic",{"_index":221,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{}}}],["autorestart",{"_index":104,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["available",{"_index":1723,"title":{},"body":{"modules.html":{}}}],["await",{"_index":287,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":812,"title":{},"body":{"injectables/AppService.html":{}}}],["b.date.modified",{"_index":814,"title":{},"body":{"injectables/AppService.html":{}}}],["back",{"_index":124,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["backers",{"_index":1705,"title":{},"body":{"index.html":{}}}],["basename",{"_index":1058,"title":{},"body":{"interfaces/Output.html":{}}}],["before",{"_index":226,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["belongs",{"_index":1511,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["body",{"_index":121,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["body('args",{"_index":1190,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["body('commands",{"_index":1166,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["body('event",{"_index":1186,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["body('machines",{"_index":1173,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["body('method",{"_index":1189,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["body('tasks",{"_index":1164,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["body('trees",{"_index":1165,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["boolean",{"_index":39,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["bootstrap",{"_index":1620,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["break",{"_index":826,"title":{},"body":{"injectables/AppService.html":{}}}],["breaks",{"_index":329,"title":{},"body":{"controllers/AppController.html":{}}}],["browse",{"_index":1721,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1719,"title":{},"body":{"modules.html":{}}}],["build",{"_index":1136,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["building",{"_index":1675,"title":{},"body":{"index.html":{}}}],["bunyan",{"_index":1650,"title":{},"body":{"dependencies.html":{}}}],["bunyan.createlogger",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bus",{"_index":136,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["busresponse",{"_index":61,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["ca",{"_index":1474,"title":{},"body":{"classes/SubDomain.html":{}}}],["callback",{"_index":132,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["callback(err",{"_index":453,"title":{},"body":{"controllers/AppController.html":{}}}],["callback(message",{"_index":415,"title":{},"body":{"controllers/AppController.html":{}}}],["callback(null",{"_index":410,"title":{},"body":{"controllers/AppController.html":{}}}],["called",{"_index":328,"title":{},"body":{"controllers/AppController.html":{}}}],["can't",{"_index":90,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["canactivate",{"_index":848,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":851,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canlink",{"_index":1224,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["canlink(token",{"_index":1235,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["catch",{"_index":411,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/ExceptionFilter.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"miscellaneous/variables.html":{}}}],["catch(exception",{"_index":953,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["catch(rpcexception",{"_index":959,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["catcherror",{"_index":347,"title":{},"body":{"controllers/AppController.html":{}}}],["catchs",{"_index":950,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["central",{"_index":1259,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["cert",{"_index":185,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"classes/SubDomain.html":{}}}],["certs",{"_index":230,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{}}}],["certs.ca",{"_index":503,"title":{},"body":{"controllers/AppController.html":{}}}],["certs.key",{"_index":501,"title":{},"body":{"controllers/AppController.html":{}}}],["change",{"_index":529,"title":{},"body":{"controllers/AppController.html":{}}}],["check",{"_index":525,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/SatelliteService.html":{}}}],["checking",{"_index":823,"title":{},"body":{"injectables/AppService.html":{}}}],["checking.payload.get('sample_id",{"_index":828,"title":{},"body":{"injectables/AppService.html":{}}}],["checks",{"_index":735,"title":{},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{}}}],["checksum",{"_index":1059,"title":{},"body":{"interfaces/Output.html":{}}}],["children",{"_index":40,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["class",{"_index":181,"title":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"classes/CWL.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"classes/Lab.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"classes/SatelliteTask.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{}},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"modules/StateMachineModules.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"coverage.html":{},"classes/git.html":{}}}],["classes",{"_index":183,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"classes/CWL.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"classes/Lab.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"classes/SatelliteTask.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{},"overview.html":{}}}],["clearinterval(newconnection.keepalivepingtimer",{"_index":589,"title":{},"body":{"controllers/AppController.html":{}}}],["clearinterval(satconnection.keepalivepingtimer",{"_index":612,"title":{},"body":{"controllers/AppController.html":{}}}],["clearoldsatellite(satellite_id",{"_index":1491,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["cleartimeout(newconnection.keepalivetimer",{"_index":588,"title":{},"body":{"controllers/AppController.html":{}}}],["cleartimeout(satconnection.keepalivetimer",{"_index":605,"title":{},"body":{"controllers/AppController.html":{}}}],["client",{"_index":519,"title":{},"body":{"controllers/AppController.html":{}}}],["clientduplexstream",{"_index":157,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["close",{"_index":388,"title":{},"body":{"controllers/AppController.html":{}}}],["cluster_appmodule",{"_index":682,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":684,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":683,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":685,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_mongoconnectionmodule",{"_index":1008,"title":{},"body":{"modules/MongoConnectionModule.html":{},"overview.html":{}}}],["cluster_mongoconnectionmodule_exports",{"_index":1010,"title":{},"body":{"modules/MongoConnectionModule.html":{},"overview.html":{}}}],["cluster_mongoconnectionmodule_providers",{"_index":1009,"title":{},"body":{"modules/MongoConnectionModule.html":{},"overview.html":{}}}],["cluster_statemachinemodules",{"_index":1360,"title":{},"body":{"modules/StateMachineModules.html":{},"overview.html":{}}}],["cluster_statemachinemodules_exports",{"_index":1363,"title":{},"body":{"modules/StateMachineModules.html":{},"overview.html":{}}}],["cluster_statemachinemodules_imports",{"_index":1362,"title":{},"body":{"modules/StateMachineModules.html":{}}}],["cluster_statemachinemodules_providers",{"_index":1361,"title":{},"body":{"modules/StateMachineModules.html":{},"overview.html":{}}}],["cnt",{"_index":677,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["collection",{"_index":179,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"classes/CWL.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/Lab.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"classes/SatelliteTask.html":{},"interfaces/SciDapDuplexStream.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{}}}],["come",{"_index":123,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["command",{"_index":105,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"classes/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["commands",{"_index":36,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/Type.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["commands.length",{"_index":1169,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["commandstream",{"_index":143,"title":{},"body":{"interfaces/APISyncService.html":{},"controllers/AppController.html":{}}}],["commandstream(requeststream",{"_index":303,"title":{},"body":{"controllers/AppController.html":{}}}],["commandstream(upstream",{"_index":27,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["common_project_id",{"_index":209,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["communication",{"_index":574,"title":{},"body":{"controllers/AppController.html":{}}}],["cond",{"_index":76,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"classes/StateOptions.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["conencting",{"_index":1249,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["config",{"_index":21,"title":{"classes/Config.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/Type.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["config.context",{"_index":1411,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["config.context[k",{"_index":1413,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["config.id",{"_index":1421,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["configmodule",{"_index":696,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":708,"title":{},"body":{"modules/AppModule.html":{}}}],["configoverwrites",{"_index":240,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["configs",{"_index":535,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["configservice",{"_index":339,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/StateMachinesService.html":{}}}],["configservice.get('mongodb_uri",{"_index":714,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":706,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{}}}],["connect",{"_index":1239,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["connected",{"_index":165,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"injectables/SatelliteService.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["connection",{"_index":162,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteConnection.html":{},"injectables/SatelliteService.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["connection.filter",{"_index":362,"title":{},"body":{"controllers/AppController.html":{}}}],["connection.filter.ts",{"_index":949,"title":{},"body":{"classes/ExceptionFilter.html":{},"coverage.html":{}}}],["connection.filter.ts:10",{"_index":956,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["connections",{"_index":390,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}}}],["connections/:id",{"_index":1117,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["console.error(err",{"_index":770,"title":{},"body":{"injectables/AppService.html":{}}}],["console.error(err.message",{"_index":512,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log('file",{"_index":631,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log('success",{"_index":636,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log('write",{"_index":761,"title":{},"body":{"injectables/AppService.html":{}}}],["console.log(configs",{"_index":774,"title":{},"body":{"injectables/AppService.html":{}}}],["console.log(data",{"_index":772,"title":{},"body":{"injectables/AppService.html":{}}}],["const",{"_index":241,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":274,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["constructor(_apisyncmachinemodel",{"_index":275,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{}}}],["constructor(_cwlservice",{"_index":1374,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["constructor(_satellitemachinemodel",{"_index":1216,"title":{},"body":{"injectables/SatelliteMachineService.html":{}}}],["constructor(_satelliteservice",{"_index":849,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(_satellitetaskmodel",{"_index":1342,"title":{},"body":{"injectables/SatelliteTasksService.html":{}}}],["constructor(_statemachineservice",{"_index":726,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(cwlmodel",{"_index":897,"title":{},"body":{"injectables/CWLService.html":{}}}],["constructor(labmodel",{"_index":988,"title":{},"body":{"injectables/LabService.html":{}}}],["constructor(satellitemodel",{"_index":1233,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["constructor(subdomainmodel",{"_index":1479,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["constructor(tasksqueuemodel",{"_index":1501,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["contains",{"_index":855,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/StateMachinesService.html":{}}}],["context",{"_index":262,"title":{},"body":{"classes/ApiSyncMachine.html":{},"guards/AuthGuard.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"classes/Options.html":{},"controllers/SatInterfaceController.html":{},"classes/State.html":{},"injectables/StateMachinesService.html":{},"classes/Type.html":{}}}],["context.getargs()[0].metadata.get('jwt')[0",{"_index":858,"title":{},"body":{"guards/AuthGuard.html":{}}}],["controller",{"_index":291,"title":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{},"coverage.html":{}}}],["controller('api",{"_index":1147,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["controllers",{"_index":293,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"overview.html":{}}}],["correctly",{"_index":951,"title":{},"body":{"classes/ExceptionFilter.html":{},"injectables/StateMachinesService.html":{}}}],["counter",{"_index":560,"title":{},"body":{"controllers/AppController.html":{}}}],["coverage",{"_index":1593,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":400,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{},"injectables/StateMachinesService.html":{}}}],["createapimachine",{"_index":129,"title":{"interfaces/CreateAPIMachine.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"injectables/AppService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["createapimachineforsatellite",{"_index":1106,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["createapimachineforsatellite(@param('id",{"_index":1172,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["createapimachineforsatellite(id",{"_index":1111,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["created",{"_index":933,"title":{},"body":{"classes/Date-2.html":{},"controllers/SatInterfaceController.html":{},"classes/TasksQueue.html":{}}}],["created[k]).length",{"_index":1181,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["created[machine.config.id",{"_index":1175,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["createfsm",{"_index":717,"title":{},"body":{"injectables/AppService.html":{}}}],["createmachine",{"_index":1391,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["createmachine(updatedconfig",{"_index":1445,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["createstatemachine",{"_index":1373,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["createstatemachine(config",{"_index":1379,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["createwritestream",{"_index":343,"title":{},"body":{"controllers/AppController.html":{}}}],["createwritestream(temppath",{"_index":628,"title":{},"body":{"controllers/AppController.html":{}}}],["cron",{"_index":98,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"injectables/AppService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["cron(cronexpression.every_5_seconds",{"_index":732,"title":{},"body":{"injectables/AppService.html":{}}}],["cronexpression",{"_index":753,"title":{},"body":{"injectables/AppService.html":{}}}],["crypto",{"_index":353,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["crypto.randombytes(20).tostring('hex",{"_index":615,"title":{},"body":{"controllers/AppController.html":{}}}],["ctx",{"_index":70,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["curr",{"_index":649,"title":{},"body":{"controllers/AppController.html":{}}}],["current",{"_index":739,"title":{},"body":{"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{}}}],["currently",{"_index":798,"title":{},"body":{"injectables/AppService.html":{},"injectables/StateMachinesService.html":{}}}],["currenttasks.includes(task._id",{"_index":808,"title":{},"body":{"injectables/AppService.html":{}}}],["custom",{"_index":656,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["custom.number",{"_index":675,"title":{},"body":{"controllers/AppController.html":{}}}],["custom[k",{"_index":673,"title":{},"body":{"controllers/AppController.html":{}}}],["customlist",{"_index":300,"title":{},"body":{"controllers/AppController.html":{}}}],["customlist.find((i",{"_index":657,"title":{},"body":{"controllers/AppController.html":{}}}],["custompm2startoptions",{"_index":41,"title":{"interfaces/CustomPm2StartOptions.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["cwl",{"_index":868,"title":{"classes/CWL.html":{}},"body":{"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"coverage.html":{},"classes/git.html":{}}}],["cwl.name",{"_index":1039,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["cwl.service",{"_index":1012,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["cwldocument",{"_index":883,"title":{},"body":{"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/git.html":{},"miscellaneous/typealiases.html":{}}}],["cwlid",{"_index":919,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{}}}],["cwlmodel",{"_index":899,"title":{},"body":{"injectables/CWLService.html":{}}}],["cwlschema",{"_index":892,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"coverage.html":{},"classes/git.html":{},"miscellaneous/variables.html":{}}}],["cwlservice",{"_index":894,"title":{"injectables/CWLService.html":{}},"body":{"injectables/CWLService.html":{},"modules/MongoConnectionModule.html":{},"injectables/StateMachinesService.html":{},"coverage.html":{},"overview.html":{}}}],["cwlts",{"_index":1653,"title":{},"body":{"dependencies.html":{}}}],["d.toobject",{"_index":290,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteTasksService.html":{}}}],["dagid",{"_index":1574,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["data",{"_index":769,"title":{},"body":{"injectables/AppService.html":{}}}],["database",{"_index":902,"title":{},"body":{"injectables/CWLService.html":{},"injectables/LabService.html":{},"interfaces/Output.html":{}}}],["date",{"_index":870,"title":{"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{}},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/Sample.html":{},"classes/TasksQueue.html":{},"coverage.html":{},"classes/git.html":{}}}],["date().gettime",{"_index":1310,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["date(expirydate",{"_index":1315,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["db",{"_index":762,"title":{},"body":{"injectables/AppService.html":{},"injectables/SatelliteService.html":{}}}],["dbstream",{"_index":1370,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["decorators",{"_index":190,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CWL.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/Lab.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{}}}],["default",{"_index":534,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/variables.html":{}}}],["defaultconfig",{"_index":536,"title":{},"body":{"controllers/AppController.html":{}}}],["defaultconfig.apimachines",{"_index":541,"title":{},"body":{"controllers/AppController.html":{}}}],["defaultconfig.apimachines.length",{"_index":548,"title":{},"body":{"controllers/AppController.html":{}}}],["defaultconfig.satmachines",{"_index":543,"title":{},"body":{"controllers/AppController.html":{}}}],["defaultconfig.satmachines.length",{"_index":550,"title":{},"body":{"controllers/AppController.html":{}}}],["defaultconfig.sattasks",{"_index":545,"title":{},"body":{"controllers/AppController.html":{}}}],["defined",{"_index":10,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncService.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{}}}],["delay",{"_index":429,"title":{},"body":{"controllers/AppController.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/SendEvent.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{}}}],["delay}ms",{"_index":432,"title":{},"body":{"controllers/AppController.html":{}}}],["delete",{"_index":408,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{},"injectables/TasksQueueService.html":{}}}],["delete('api",{"_index":1124,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["delete(_id",{"_index":1506,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["dependencies",{"_index":681,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/MongoConnectionModule.html":{},"modules/StateMachineModules.html":{},"dependencies.html":{},"overview.html":{}}}],["dependencytree",{"_index":35,"title":{"interfaces/DependencyTree.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["deprecated",{"_index":1295,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["description",{"_index":316,"title":{"classes/Description.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"classes/Metadata.html":{},"interfaces/Output.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteConnection.html":{},"injectables/SatelliteService.html":{},"injectables/StateMachinesService.html":{},"injectables/TasksQueueService.html":{},"coverage.html":{},"classes/git.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":860,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/SubDomainService.html":{},"index.html":{}}}],["digital",{"_index":1255,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["disable_source_map_support",{"_index":102,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["disconnect",{"_index":1267,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["disconnecting",{"_index":1272,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["dnsrecordid",{"_index":1465,"title":{},"body":{"classes/SubDomain.html":{}}}],["doc",{"_index":1312,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["document",{"_index":201,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"classes/CWL.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/Lab.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"classes/SatelliteTask.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{}}}],["documentation",{"_index":1594,"title":{},"body":{"coverage.html":{}}}],["doing",{"_index":1258,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["domain",{"_index":208,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["don't",{"_index":55,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["download",{"_index":1528,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["download.downloaded",{"_index":1569,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["download.progress",{"_index":1570,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["downloads",{"_index":1566,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["downloads[fileid",{"_index":1568,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["e2e",{"_index":1694,"title":{},"body":{"index.html":{}}}],["each",{"_index":576,"title":{},"body":{"controllers/AppController.html":{}}}],["efficient",{"_index":1676,"title":{},"body":{"index.html":{}}}],["eg",{"_index":1070,"title":{},"body":{"interfaces/ProcessedStateMachine.html":{},"interfaces/SendEvent.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{}}}],["end",{"_index":527,"title":{},"body":{"controllers/AppController.html":{}}}],["entry",{"_index":73,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"classes/StateOptions.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["environment",{"_index":494,"title":{},"body":{"controllers/AppController.html":{}}}],["err",{"_index":412,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/LabService.html":{},"interfaces/ProcessedStateMachine.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"interfaces/SendEvent.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"miscellaneous/variables.html":{}}}],["err.message",{"_index":601,"title":{},"body":{"controllers/AppController.html":{}}}],["error",{"_index":58,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"injectables/LabService.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["error('attempted",{"_index":1550,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["error('satellite",{"_index":1314,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["error(`${method",{"_index":446,"title":{},"body":{"controllers/AppController.html":{}}}],["error(`${satellite_id",{"_index":1545,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["error(`no",{"_index":1585,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["error(`satellite",{"_index":1290,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["error(`task",{"_index":1543,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["error(exception.message",{"_index":963,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["errorresponse",{"_index":60,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"classes/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["establish",{"_index":1237,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["event",{"_index":1069,"title":{},"body":{"interfaces/ProcessedStateMachine.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SendEvent.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{}}}],["exception",{"_index":957,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["exceptionfilter",{"_index":360,"title":{"classes/ExceptionFilter.html":{}},"body":{"controllers/AppController.html":{},"classes/ExceptionFilter.html":{},"coverage.html":{}}}],["exceptions",{"_index":463,"title":{},"body":{"controllers/AppController.html":{},"classes/ExceptionFilter.html":{}}}],["exec",{"_index":907,"title":{},"body":{"injectables/CWLService.html":{},"injectables/LabService.html":{},"injectables/SatelliteService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["exec()).map((d",{"_index":289,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteTasksService.html":{}}}],["execute_command",{"_index":99,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["executioncontext",{"_index":852,"title":{},"body":{"guards/AuthGuard.html":{}}}],["exists",{"_index":1071,"title":{},"body":{"interfaces/ProcessedStateMachine.html":{},"injectables/SatelliteService.html":{},"interfaces/SendEvent.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{}}}],["exit",{"_index":74,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"classes/StateOptions.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["expect",{"_index":674,"title":{},"body":{"controllers/AppController.html":{}}}],["expiration",{"_index":1274,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["expires",{"_index":597,"title":{},"body":{"controllers/AppController.html":{}}}],["expiry",{"_index":600,"title":{},"body":{"controllers/AppController.html":{}}}],["expiry_time_ms",{"_index":217,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{}}}],["expirydate",{"_index":593,"title":{},"body":{"controllers/AppController.html":{},"injectables/SatelliteService.html":{}}}],["expirydate.toutcstring",{"_index":598,"title":{},"body":{"controllers/AppController.html":{}}}],["export",{"_index":24,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"classes/git.html":{}}}],["exports",{"_index":693,"title":{},"body":{"modules/AppModule.html":{},"modules/MongoConnectionModule.html":{},"modules/StateMachineModules.html":{}}}],["express",{"_index":1648,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":77,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["facing",{"_index":1252,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["failed",{"_index":639,"title":{},"body":{"controllers/AppController.html":{}}}],["fails",{"_index":464,"title":{},"body":{"controllers/AppController.html":{}}}],["false",{"_index":265,"title":{},"body":{"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"controllers/SatInterfaceController.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{}}}],["field",{"_index":92,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{},"classes/git.html":{}}}],["filefromclient",{"_index":128,"title":{"interfaces/FileFromClient.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["fileid",{"_index":1526,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["filename",{"_index":616,"title":{},"body":{"controllers/AppController.html":{}}}],["filestream",{"_index":144,"title":{},"body":{"interfaces/APISyncService.html":{},"controllers/AppController.html":{}}}],["filestream(upstream",{"_index":28,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["fileupload",{"_index":296,"title":{},"body":{"controllers/AppController.html":{}}}],["fileupload(requeststream",{"_index":307,"title":{},"body":{"controllers/AppController.html":{}}}],["filter",{"_index":348,"title":{},"body":{"controllers/AppController.html":{}}}],["filter((k",{"_index":789,"title":{},"body":{"injectables/AppService.html":{}}}],["filter((task",{"_index":806,"title":{},"body":{"injectables/AppService.html":{}}}],["final",{"_index":621,"title":{},"body":{"controllers/AppController.html":{},"injectables/TasksQueueService.html":{}}}],["final.priorityqueue.push(task",{"_index":1541,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["final.queue.push(task",{"_index":1539,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["finally",{"_index":602,"title":{},"body":{"controllers/AppController.html":{}}}],["finalpath",{"_index":620,"title":{},"body":{"controllers/AppController.html":{}}}],["find",{"_index":1484,"title":{},"body":{"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["finds",{"_index":1510,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["findtaskbysampleid",{"_index":1498,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["findtaskbysampleid(sampleid",{"_index":1508,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["finished",{"_index":632,"title":{},"body":{"controllers/AppController.html":{},"injectables/TasksQueueService.html":{}}}],["finite",{"_index":844,"title":{},"body":{"injectables/AppService.html":{},"injectables/StateMachinesService.html":{}}}],["fix",{"_index":1068,"title":{},"body":{"interfaces/ProcessedStateMachine.html":{},"interfaces/SendEvent.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{}}}],["fixed",{"_index":222,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["fixedip",{"_index":186,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["folder",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwardref",{"_index":694,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"modules/StateMachineModules.html":{},"injectables/StateMachinesService.html":{},"injectables/TasksQueueService.html":{}}}],["found",{"_index":447,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["framework",{"_index":1674,"title":{},"body":{"index.html":{}}}],["fs",{"_index":346,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/StateMachinesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fs.promises",{"_index":377,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/variables.html":{}}}],["fs.readfile(loc",{"_index":766,"title":{},"body":{"injectables/AppService.html":{}}}],["fsm",{"_index":154,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["fsm.state.context.taskid",{"_index":802,"title":{},"body":{"injectables/AppService.html":{}}}],["fsm.state.value",{"_index":796,"title":{},"body":{"injectables/AppService.html":{}}}],["fsms",{"_index":786,"title":{},"body":{"injectables/AppService.html":{}}}],["fspromises",{"_index":376,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fspromises.access(logdir",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fspromises.mkdir(logdir",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fspromises.readfile(abscert)).tostring",{"_index":505,"title":{},"body":{"controllers/AppController.html":{}}}],["fspromises.readfile(abskey)).tostring",{"_index":504,"title":{},"body":{"controllers/AppController.html":{}}}],["fspromises.readfile(certs.cert)).tostring",{"_index":489,"title":{},"body":{"controllers/AppController.html":{}}}],["fspromises.readfile(certs.key)).tostring",{"_index":488,"title":{},"body":{"controllers/AppController.html":{}}}],["func",{"_index":443,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["func(args",{"_index":448,"title":{},"body":{"controllers/AppController.html":{}}}],["function",{"_index":321,"title":{},"body":{"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/TriggerContext.html":{},"coverage.html":{}}}],["function(){}).constructor",{"_index":1407,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["functions",{"_index":1409,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/StateMachinesService.html":{},"miscellaneous/functions.html":{}}}],["get('satellite",{"_index":1116,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["getbyid",{"_index":896,"title":{},"body":{"injectables/CWLService.html":{},"injectables/LabService.html":{},"injectables/SatelliteService.html":{},"injectables/TasksQueueService.html":{}}}],["getbyid(_id",{"_index":900,"title":{},"body":{"injectables/CWLService.html":{},"injectables/LabService.html":{},"injectables/SatelliteService.html":{}}}],["getbyid(task_id",{"_index":1512,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["getbysatid",{"_index":1477,"title":{},"body":{"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["getbysatid(id",{"_index":1482,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["getbysatid(satellite_id",{"_index":1516,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["getbytoken",{"_index":1225,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["getbytoken(token",{"_index":1242,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["getdevinfo",{"_index":1478,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["getinitialmachines",{"_index":273,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"injectables/SatelliteMachineService.html":{}}}],["getinitialtasks",{"_index":1341,"title":{},"body":{"injectables/SatelliteTasksService.html":{}}}],["gets",{"_index":227,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"injectables/SubDomainService.html":{}}}],["getsatellitebyid",{"_index":1107,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["getsatellitebyid(@param('id",{"_index":1150,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["getsatellitebyid(id",{"_index":1115,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["getsatellites",{"_index":1108,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["getting",{"_index":1671,"title":{"index.html":{}},"body":{}}],["getunusedsatellites",{"_index":1226,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["git",{"_index":871,"title":{"classes/git.html":{}},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"coverage.html":{},"classes/git.html":{}}}],["given",{"_index":331,"title":{},"body":{"controllers/AppController.html":{},"injectables/TasksQueueService.html":{}}}],["goes",{"_index":386,"title":{},"body":{"controllers/AppController.html":{}}}],["graph",{"_index":1722,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":1700,"title":{},"body":{"index.html":{}}}],["grpc",{"_index":15,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"dependencies.html":{}}}],["grpc/proto",{"_index":1639,"title":{},"body":{"dependencies.html":{}}}],["grpcstreamcall",{"_index":337,"title":{},"body":{"controllers/AppController.html":{}}}],["grpcstreamcall('apisyncservice",{"_index":465,"title":{},"body":{"controllers/AppController.html":{}}}],["guard",{"_index":846,"title":{"guards/AuthGuard.html":{}},"body":{"injectables/SatelliteService.html":{},"injectables/StateMachinesService.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":65,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["guards[k]).call(this",{"_index":1443,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["half",{"_index":816,"title":{},"body":{"injectables/AppService.html":{}}}],["handle",{"_index":573,"title":{},"body":{"controllers/AppController.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/SendEvent.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{}}}],["handles",{"_index":578,"title":{},"body":{"controllers/AppController.html":{}}}],["heartbeat",{"_index":734,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":863,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["host",{"_index":954,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["host.getargs()[0",{"_index":961,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["httpexception",{"_index":1141,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["httpexception('no",{"_index":1152,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["httpmodule",{"_index":695,"title":{},"body":{"modules/AppModule.html":{},"modules/StateMachineModules.html":{}}}],["https",{"_index":1324,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["https://nestjs.com",{"_index":1715,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":341,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["httpstatus",{"_index":1142,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["httpstatus.bad_request",{"_index":1154,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["httpstatus.internal_server_error",{"_index":1156,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["i.id",{"_index":658,"title":{},"body":{"controllers/AppController.html":{}}}],["id",{"_index":260,"title":{},"body":{"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"injectables/LabService.html":{},"classes/MachineCommand.html":{},"classes/Options.html":{},"interfaces/ProcessedStateMachine.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"interfaces/SendEvent.html":{},"classes/State.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1595,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":857,"title":{},"body":{"guards/AuthGuard.html":{},"classes/ExceptionFilter.html":{}}}],["import",{"_index":12,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"classes/git.html":{}}}],["imports",{"_index":692,"title":{},"body":{"modules/AppModule.html":{},"modules/MongoConnectionModule.html":{},"modules/SatInterfaceModule.html":{},"modules/StateMachineModules.html":{}}}],["inactivetimerms",{"_index":187,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{}}}],["include",{"_index":1514,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["including",{"_index":111,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["increment",{"_index":838,"title":{},"body":{"injectables/AppService.html":{}}}],["index",{"_index":139,"title":{"index.html":{}},"body":{"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/functions.html":{},"classes/git.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":7,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{}}}],["infinity",{"_index":1309,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"classes/git.html":{},"miscellaneous/variables.html":{}}}],["information",{"_index":322,"title":{},"body":{"controllers/AppController.html":{},"injectables/SubDomainService.html":{}}}],["initial",{"_index":261,"title":{},"body":{"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"classes/Options.html":{},"classes/State.html":{},"classes/Type.html":{}}}],["inject",{"_index":715,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{},"injectables/StateMachinesService.html":{},"injectables/TasksQueueService.html":{}}}],["inject(forwardref",{"_index":759,"title":{},"body":{"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{},"injectables/StateMachinesService.html":{},"injectables/TasksQueueService.html":{}}}],["injectable",{"_index":268,"title":{"injectables/ApiSyncMachinesService.html":{},"injectables/AppService.html":{},"injectables/CWLService.html":{},"injectables/LabService.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}},"body":{"injectables/ApiSyncMachinesService.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"injectables/LabService.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"coverage.html":{}}}],["injectables",{"_index":270,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"injectables/AppService.html":{},"injectables/CWLService.html":{},"injectables/LabService.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"overview.html":{}}}],["injectmodel",{"_index":282,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"injectables/CWLService.html":{},"injectables/LabService.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["injectmodel(apisyncmachine.name",{"_index":284,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{}}}],["injectmodel(cwl.name",{"_index":905,"title":{},"body":{"injectables/CWLService.html":{}}}],["injectmodel(lab.name",{"_index":998,"title":{},"body":{"injectables/LabService.html":{}}}],["injectmodel(satellite.name",{"_index":1277,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["injectmodel(satellitemachine.name",{"_index":1220,"title":{},"body":{"injectables/SatelliteMachineService.html":{}}}],["injectmodel(satellitetask.name",{"_index":1346,"title":{},"body":{"injectables/SatelliteTasksService.html":{}}}],["injectmodel(servicetag.name",{"_index":1533,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["injectmodel(subdomain.name",{"_index":1488,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["injectmodel(tasksqueue.name",{"_index":1532,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["inputs",{"_index":922,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{}}}],["installation",{"_index":1684,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1686,"title":{},"body":{"index.html":{}}}],["instead",{"_index":85,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["interface",{"_index":0,"title":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/OptionTypes.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"interfaces/RemoteModule.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/OptionTypes.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/OptionTypes.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"interfaces/RemoteModule.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"overview.html":{}}}],["interpret",{"_index":1392,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["interpret(machine",{"_index":1446,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["interpreted",{"_index":403,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/SendEvent.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{}}}],["interpreted.ontransition((state",{"_index":1453,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["interpreted.start",{"_index":1452,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["interpreter",{"_index":156,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{}}}],["interpreter_args",{"_index":86,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["interval",{"_index":517,"title":{},"body":{"controllers/AppController.html":{}}}],["inuse",{"_index":247,"title":{},"body":{"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{}}}],["ip",{"_index":478,"title":{},"body":{"controllers/AppController.html":{},"injectables/SatelliteService.html":{}}}],["ips",{"_index":481,"title":{},"body":{"controllers/AppController.html":{},"injectables/SatelliteService.html":{}}}],["isglobal",{"_index":709,"title":{},"body":{"modules/AppModule.html":{}}}],["isn't",{"_index":327,"title":{},"body":{"controllers/AppController.html":{}}}],["itself",{"_index":1420,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["join",{"_index":1707,"title":{},"body":{"index.html":{}}}],["json",{"_index":890,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/git.html":{}}}],["json.parse(data",{"_index":773,"title":{},"body":{"injectables/AppService.html":{}}}],["json.parse(localips",{"_index":482,"title":{},"body":{"controllers/AppController.html":{}}}],["jwt",{"_index":466,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthGuard.html":{},"injectables/SatelliteService.html":{},"injectables/SubDomainService.html":{}}}],["k",{"_index":1430,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["k.includes('task_queue",{"_index":790,"title":{},"body":{"injectables/AppService.html":{}}}],["k.split",{"_index":667,"title":{},"body":{"controllers/AppController.html":{}}}],["kamil",{"_index":1712,"title":{},"body":{"index.html":{}}}],["keep",{"_index":609,"title":{},"body":{"controllers/AppController.html":{}}}],["keepalive",{"_index":38,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["keepalivepingtimer",{"_index":174,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["keepalivetimer",{"_index":172,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["keepscript",{"_index":80,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["key",{"_index":8,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["keys",{"_index":661,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["keys.foreach((k",{"_index":664,"title":{},"body":{"controllers/AppController.html":{}}}],["lab",{"_index":966,"title":{"classes/Lab.html":{}},"body":{"classes/Lab.html":{},"injectables/LabService.html":{},"modules/MongoConnectionModule.html":{},"coverage.html":{}}}],["lab.name",{"_index":1045,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["lab.nmodified",{"_index":1001,"title":{},"body":{"injectables/LabService.html":{}}}],["labdocument",{"_index":981,"title":{},"body":{"classes/Lab.html":{},"injectables/LabService.html":{},"miscellaneous/typealiases.html":{}}}],["label",{"_index":133,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"classes/CWL.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"classes/Type.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"classes/git.html":{}}}],["labid",{"_index":232,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["labmodel",{"_index":990,"title":{},"body":{"injectables/LabService.html":{}}}],["labs",{"_index":982,"title":{},"body":{"classes/Lab.html":{}}}],["labs.service",{"_index":1034,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["labschema",{"_index":983,"title":{},"body":{"classes/Lab.html":{},"modules/MongoConnectionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["labservice",{"_index":985,"title":{"injectables/LabService.html":{}},"body":{"injectables/LabService.html":{},"modules/MongoConnectionModule.html":{},"injectables/StateMachinesService.html":{},"coverage.html":{},"overview.html":{}}}],["last",{"_index":668,"title":{},"body":{"controllers/AppController.html":{}}}],["level",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/logger",{"_index":371,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"injectables/StateMachinesService.html":{},"injectables/TasksQueueService.html":{}}}],["license",{"_index":1718,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1698,"title":{},"body":{"index.html":{}}}],["link",{"_index":1238,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["list",{"_index":666,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}}}],["list.foreach((i",{"_index":670,"title":{},"body":{"controllers/AppController.html":{}}}],["list.pop",{"_index":669,"title":{},"body":{"controllers/AppController.html":{}}}],["listing",{"_index":1060,"title":{},"body":{"interfaces/Output.html":{}}}],["literal",{"_index":254,"title":{},"body":{"classes/ApiSyncMachine.html":{},"injectables/AppService.html":{},"classes/CWL.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/LocalFiles.html":{},"classes/Options.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["load",{"_index":710,"title":{},"body":{"modules/AppModule.html":{}}}],["loader",{"_index":1640,"title":{},"body":{"dependencies.html":{}}}],["loc",{"_index":763,"title":{},"body":{"injectables/AppService.html":{}}}],["local",{"_index":486,"title":{},"body":{"controllers/AppController.html":{},"injectables/SatelliteService.html":{}}}],["local'].includes(process.env.api_env",{"_index":497,"title":{},"body":{"controllers/AppController.html":{}}}],["local_ip",{"_index":510,"title":{},"body":{"controllers/AppController.html":{}}}],["local_path",{"_index":889,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/git.html":{}}}],["localfiles",{"_index":177,"title":{"interfaces/LocalFiles.html":{}},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"injectables/SatelliteService.html":{},"interfaces/SciDapDuplexStream.html":{},"coverage.html":{}}}],["localfiles.collection[0].path",{"_index":1304,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["localfiles.show",{"_index":1307,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["localip",{"_index":213,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["localips",{"_index":468,"title":{},"body":{"controllers/AppController.html":{}}}],["locate",{"_index":646,"title":{},"body":{"controllers/AppController.html":{}}}],["location",{"_index":1061,"title":{},"body":{"interfaces/Output.html":{}}}],["log",{"_index":370,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"injectables/TasksQueueService.html":{},"miscellaneous/variables.html":{}}}],["log.debug('getting",{"_index":533,"title":{},"body":{"controllers/AppController.html":{}}}],["log.debug(`${satid",{"_index":596,"title":{},"body":{"controllers/AppController.html":{}}}],["log.debug(`${waitingmachines.length",{"_index":797,"title":{},"body":{"injectables/AppService.html":{}}}],["log.debug(`amount",{"_index":547,"title":{},"body":{"controllers/AppController.html":{}}}],["log.debug(`checking",{"_index":781,"title":{},"body":{"injectables/AppService.html":{}}}],["log.debug(`ping",{"_index":522,"title":{},"body":{"controllers/AppController.html":{}}}],["log.debug(`successfully",{"_index":564,"title":{},"body":{"controllers/AppController.html":{}}}],["log.debug(msg.output",{"_index":642,"title":{},"body":{"controllers/AppController.html":{}}}],["log.error(`${msg.satellite",{"_index":638,"title":{},"body":{"controllers/AppController.html":{}}}],["log.error(`error",{"_index":842,"title":{},"body":{"injectables/AppService.html":{}}}],["log.error(`failed",{"_index":425,"title":{},"body":{"controllers/AppController.html":{},"injectables/SatelliteService.html":{}}}],["log.error(`message",{"_index":586,"title":{},"body":{"controllers/AppController.html":{}}}],["log.error(`no",{"_index":644,"title":{},"body":{"controllers/AppController.html":{}}}],["log.error(message",{"_index":414,"title":{},"body":{"controllers/AppController.html":{}}}],["log.info('getting",{"_index":1148,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["log.info(`${satelliteid",{"_index":430,"title":{},"body":{"controllers/AppController.html":{}}}],["log.info(`attempting",{"_index":1176,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["log.info(`closing",{"_index":590,"title":{},"body":{"controllers/AppController.html":{}}}],["log.info(`connection",{"_index":473,"title":{},"body":{"controllers/AppController.html":{}}}],["log.info(`did",{"_index":607,"title":{},"body":{"controllers/AppController.html":{}}}],["log.info(`external",{"_index":477,"title":{},"body":{"controllers/AppController.html":{}}}],["log.info(`getting",{"_index":1151,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["log.info(`local",{"_index":480,"title":{},"body":{"controllers/AppController.html":{}}}],["log.info(`sending",{"_index":419,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{}}}],["log.info(`successfully",{"_index":1179,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["log.info(`task",{"_index":1171,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["log.info(err",{"_index":866,"title":{},"body":{"guards/AuthGuard.html":{}}}],["logdir",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger",{"_index":155,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"miscellaneous/variables.html":{}}}],["logger.debug(`no",{"_index":1460,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["logger.error(`error",{"_index":1459,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["logger.error(`failed",{"_index":1429,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["logger.error(`invalid",{"_index":1456,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["logger.info(`current",{"_index":1454,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["logs",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lte",{"_index":1318,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["m.satelliteid",{"_index":422,"title":{},"body":{"controllers/AppController.html":{}}}],["m.tasks?.length",{"_index":421,"title":{},"body":{"controllers/AppController.html":{}}}],["m.trees?.length",{"_index":420,"title":{},"body":{"controllers/AppController.html":{}}}],["machien",{"_index":1401,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["machine",{"_index":46,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/variables.html":{}}}],["machine._id",{"_index":659,"title":{},"body":{"controllers/AppController.html":{}}}],["machine.config.id",{"_index":676,"title":{},"body":{"controllers/AppController.html":{}}}],["machine.config?.id",{"_index":566,"title":{},"body":{"controllers/AppController.html":{}}}],["machine.fsm.state.context",{"_index":1160,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["machine.fsm.state.value",{"_index":1161,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["machine.state.context.id",{"_index":840,"title":{},"body":{"injectables/AppService.html":{}}}],["machine.state.context.startprocess(task._id",{"_index":841,"title":{},"body":{"injectables/AppService.html":{}}}],["machine/:id",{"_index":1113,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["machine/:satid/:machineid",{"_index":1125,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["machine/:satid/:machineid/event",{"_index":1130,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["machine/:satid/:machineid/method",{"_index":1138,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["machinecommand",{"_index":130,"title":{"classes/MachineCommand.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"classes/Type.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["machineid",{"_index":1123,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["machines",{"_index":302,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{},"injectables/StateMachinesService.html":{}}}],["machines.foreach((machine",{"_index":655,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}}}],["machines.length",{"_index":1174,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["machines.push(configs[key",{"_index":776,"title":{},"body":{"injectables/AppService.html":{}}}],["machines.push(uo",{"_index":1162,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["main_satellite",{"_index":580,"title":{},"body":{"controllers/AppController.html":{}}}],["make",{"_index":829,"title":{},"body":{"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{}}}],["map",{"_index":939,"title":{},"body":{"classes/Date-2.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{}}}],["map((fsm",{"_index":801,"title":{},"body":{"injectables/AppService.html":{}}}],["map((k",{"_index":791,"title":{},"body":{"injectables/AppService.html":{}}}],["marked",{"_index":1408,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["matching",{"_index":138,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"classes/git.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(satconnection.maxtasks",{"_index":817,"title":{},"body":{"injectables/AppService.html":{}}}],["max_memory_restart",{"_index":88,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["maxsimultaneoustasks",{"_index":219,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["maxtasks",{"_index":170,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["maybe",{"_index":54,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["members",{"_index":968,"title":{},"body":{"classes/Lab.html":{}}}],["merge",{"_index":351,"title":{},"body":{"controllers/AppController.html":{}}}],["merge(this._appservice.sendtosat",{"_index":416,"title":{},"body":{"controllers/AppController.html":{}}}],["merge(this._statemachineservice.sendevent",{"_index":426,"title":{},"body":{"controllers/AppController.html":{}}}],["message",{"_index":113,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"classes/CWL.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"interfaces/FileFromClient.html":{},"classes/Metadata.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"classes/git.html":{}}}],["message.action",{"_index":583,"title":{},"body":{"controllers/AppController.html":{}}}],["message.body",{"_index":584,"title":{},"body":{"controllers/AppController.html":{}}}],["message/:id",{"_index":1134,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["messages",{"_index":119,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["messagetosatellite",{"_index":176,"title":{"interfaces/MessageToSatellite.html":{}},"body":{"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{},"coverage.html":{}}}],["metadata",{"_index":14,"title":{"classes/Metadata.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"classes/Sample.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{},"dependencies.html":{},"classes/git.html":{}}}],["method",{"_index":50,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["methods",{"_index":142,"title":{},"body":{"interfaces/APISyncService.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"classes/ExceptionFilter.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["minimize",{"_index":264,"title":{},"body":{"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/SatelliteMachine.html":{},"classes/SatelliteTask.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{}}}],["minute",{"_index":385,"title":{},"body":{"controllers/AppController.html":{}}}],["miscellaneous",{"_index":1664,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1697,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1688,"title":{},"body":{"index.html":{}}}],["model",{"_index":276,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"injectables/CWLService.html":{},"injectables/LabService.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["modified",{"_index":884,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/Lab.html":{},"classes/Metadata.html":{},"classes/Sample.html":{},"classes/TasksQueue.html":{},"classes/git.html":{}}}],["module",{"_index":678,"title":{"modules/AppModule.html":{},"modules/MongoConnectionModule.html":{},"modules/SatInterfaceModule.html":{},"modules/StateMachineModules.html":{}},"body":{"modules/AppModule.html":{},"modules/MongoConnectionModule.html":{},"modules/SatInterfaceModule.html":{},"modules/StateMachineModules.html":{}}}],["moduleid",{"_index":205,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{}}}],["modules",{"_index":680,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/MongoConnectionModule.html":{},"modules/SatInterfaceModule.html":{},"modules/StateMachineModules.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":903,"title":{},"body":{"injectables/CWLService.html":{},"injectables/LabService.html":{},"injectables/TasksQueueService.html":{}}}],["mongoconnection/apisyncmachines.service",{"_index":369,"title":{},"body":{"controllers/AppController.html":{}}}],["mongoconnection/cwl.service",{"_index":1390,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["mongoconnection/labs.service",{"_index":1394,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["mongoconnection/mongoconnection.module",{"_index":705,"title":{},"body":{"modules/AppModule.html":{},"modules/StateMachineModules.html":{}}}],["mongoconnection/samples.service",{"_index":756,"title":{},"body":{"injectables/AppService.html":{},"injectables/StateMachinesService.html":{}}}],["mongoconnection/satellite.service",{"_index":366,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/StateMachinesService.html":{}}}],["mongoconnection/satellitemachines.service",{"_index":373,"title":{},"body":{"controllers/AppController.html":{}}}],["mongoconnection/satellitetasks.service",{"_index":375,"title":{},"body":{"controllers/AppController.html":{}}}],["mongoconnection/schemas/apisyncmachines.schema",{"_index":23,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["mongoconnection/schemas/satellite.schema",{"_index":158,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["mongoconnection/schemas/task.schema",{"_index":758,"title":{},"body":{"injectables/AppService.html":{}}}],["mongoconnection/subdomain.service",{"_index":368,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["mongoconnection/tasksqueue.service",{"_index":755,"title":{},"body":{"injectables/AppService.html":{},"injectables/StateMachinesService.html":{}}}],["mongoconnectionmodule",{"_index":686,"title":{"modules/MongoConnectionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MongoConnectionModule.html":{},"modules/StateMachineModules.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":202,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"dependencies.html":{},"classes/git.html":{}}}],["mongoosemodule",{"_index":697,"title":{},"body":{"modules/AppModule.html":{},"modules/MongoConnectionModule.html":{}}}],["mongoosemodule.forfeature",{"_index":1035,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":711,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":861,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["ms",{"_index":225,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{}}}],["msg",{"_index":450,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{}}}],["msg.file_name",{"_index":630,"title":{},"body":{"controllers/AppController.html":{}}}],["msg.keepalive",{"_index":585,"title":{},"body":{"controllers/AppController.html":{}}}],["msg.messages.foreach((message",{"_index":581,"title":{},"body":{"controllers/AppController.html":{}}}],["msg.method",{"_index":640,"title":{},"body":{"controllers/AppController.html":{}}}],["msg.sender",{"_index":579,"title":{},"body":{"controllers/AppController.html":{}}}],["msg.targetmachine",{"_index":641,"title":{},"body":{"controllers/AppController.html":{}}}],["msg.taskid",{"_index":570,"title":{},"body":{"controllers/AppController.html":{}}}],["myśliwiec",{"_index":1713,"title":{},"body":{"index.html":{}}}],["n",{"_index":1520,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["name",{"_index":68,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"modules/MongoConnectionModule.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteConnection.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/variables.html":{}}}],["named",{"_index":645,"title":{},"body":{"controllers/AppController.html":{}}}],["nameext",{"_index":1062,"title":{},"body":{"interfaces/Output.html":{}}}],["nameroot",{"_index":1063,"title":{},"body":{"interfaces/Output.html":{}}}],["namespace",{"_index":103,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["nd",{"_index":1579,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["need",{"_index":94,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["needs",{"_index":577,"title":{},"body":{"controllers/AppController.html":{}}}],["nest",{"_index":1680,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1717,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":342,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/StateMachineModules.html":{},"injectables/StateMachinesService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":281,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"classes/ExceptionFilter.html":{},"injectables/LabService.html":{},"modules/MongoConnectionModule.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"modules/StateMachineModules.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":340,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/StateMachinesService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1645,"title":{},"body":{"dependencies.html":{}}}],["nestjs/microservices",{"_index":338,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthGuard.html":{},"classes/ExceptionFilter.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":200,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"modules/AppModule.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"dependencies.html":{},"classes/git.html":{}}}],["nestjs/platform",{"_index":1647,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":699,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"dependencies.html":{}}}],["new",{"_index":435,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/ExceptionFilter.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"injectables/StateMachinesService.html":{},"injectables/TasksQueueService.html":{},"coverage.html":{}}}],["newabsoluteurl",{"_index":216,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["newconnection",{"_index":514,"title":{},"body":{"controllers/AppController.html":{}}}],["newconnection.keepalivepingtimer",{"_index":520,"title":{},"body":{"controllers/AppController.html":{}}}],["newconnection.satinformation._id",{"_index":524,"title":{},"body":{"controllers/AppController.html":{}}}],["newconnection.satinformation.absoluteurlsettings.inactivetimerms",{"_index":592,"title":{},"body":{"controllers/AppController.html":{}}}],["newupdatedinfo",{"_index":1556,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["newupdatedinfo.payload",{"_index":1561,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["newupdatedinfo.payload[key",{"_index":1563,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["newurl",{"_index":1263,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["newurl.includes('https",{"_index":1323,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["node.js",{"_index":1673,"title":{},"body":{"index.html":{}}}],["nodejs.timeout",{"_index":173,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["nothing",{"_index":1395,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["now",{"_index":1271,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["npm",{"_index":1685,"title":{},"body":{"index.html":{}}}],["nth",{"_index":1499,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["nth(n",{"_index":1518,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["number",{"_index":87,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"classes/CWL.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"interfaces/OptionTypes.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"classes/git.html":{},"miscellaneous/variables.html":{}}}],["number'].includes(k",{"_index":663,"title":{},"body":{"controllers/AppController.html":{}}}],["object",{"_index":210,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"classes/CWL.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Description.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"classes/SatelliteTask.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"injectables/TasksQueueService.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{}}}],["object.getprototypeof(async",{"_index":1406,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["object.keys(actions).foreach",{"_index":1434,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["object.keys(config.context).foreach((k",{"_index":1412,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["object.keys(configs).foreach((key",{"_index":775,"title":{},"body":{"injectables/AppService.html":{}}}],["object.keys(created).filter((k",{"_index":1180,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["object.keys(created).length",{"_index":1177,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["object.keys(custom).filter((k",{"_index":662,"title":{},"body":{"controllers/AppController.html":{}}}],["object.keys(guards).foreach",{"_index":1441,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["object.keys(newupdatedinfo.payload).foreach((key",{"_index":1562,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["object.keys(satconnection.statemachines",{"_index":788,"title":{},"body":{"injectables/AppService.html":{}}}],["object.keys(statemachines).foreach((key",{"_index":1157,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["object.keys(this._appservice.satconnections[satelliteid].statemachines).includes(to",{"_index":433,"title":{},"body":{"controllers/AppController.html":{}}}],["object.keys(this.satconnections",{"_index":779,"title":{},"body":{"injectables/AppService.html":{}}}],["object.keys(transitions).foreach",{"_index":1448,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["observable",{"_index":16,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["ocean",{"_index":507,"title":{},"body":{"controllers/AppController.html":{},"injectables/SatelliteService.html":{}}}],["old",{"_index":1257,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["one",{"_index":836,"title":{},"body":{"injectables/AppService.html":{},"injectables/LabService.html":{}}}],["onlymachine",{"_index":44,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["onoptions",{"_index":64,"title":{"classes/OnOptions.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["open",{"_index":475,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["optional",{"_index":141,"title":{},"body":{"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"classes/ExceptionFilter.html":{},"injectables/LabService.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["options",{"_index":22,"title":{"classes/Options.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"classes/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["optiontypes",{"_index":63,"title":{"interfaces/OptionTypes.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["order",{"_index":1349,"title":{},"body":{"classes/ServiceTag.html":{}}}],["origin",{"_index":188,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{}}}],["originated",{"_index":114,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["out",{"_index":689,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/MongoConnectionModule.html":{},"modules/StateMachineModules.html":{},"overview.html":{}}}],["output",{"_index":127,"title":{"interfaces/Output.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/Output.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["outputs",{"_index":923,"title":{},"body":{"classes/Date-1.html":{},"interfaces/Output.html":{},"classes/Sample.html":{}}}],["outresponse",{"_index":52,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"classes/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["overview",{"_index":1724,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":75,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["owner",{"_index":223,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/Lab.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["ownerprovidedurl",{"_index":218,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["package",{"_index":1638,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packed",{"_index":891,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/git.html":{}}}],["pair",{"_index":1400,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["param",{"_index":604,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["param('machineid",{"_index":1183,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["parameters",{"_index":147,"title":{},"body":{"interfaces/APISyncService.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"classes/ExceptionFilter.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["parse",{"_index":96,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["parsed",{"_index":471,"title":{},"body":{"controllers/AppController.html":{}}}],["part",{"_index":112,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["path",{"_index":180,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"injectables/SatelliteService.html":{},"interfaces/SciDapDuplexStream.html":{},"injectables/StateMachinesService.html":{},"coverage.html":{},"classes/git.html":{},"miscellaneous/variables.html":{}}}],["path.join(__dirname",{"_index":618,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["path.join(this._configservice.get('cert_root",{"_index":500,"title":{},"body":{"controllers/AppController.html":{}}}],["payload",{"_index":938,"title":{},"body":{"classes/Date-2.html":{},"classes/TasksQueue.html":{}}}],["payload.downloads.${fileid",{"_index":1572,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["payload.sample_id",{"_index":1584,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["pending",{"_index":969,"title":{},"body":{"classes/Lab.html":{}}}],["perfom",{"_index":744,"title":{},"body":{"injectables/AppService.html":{}}}],["perform",{"_index":1382,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["ping",{"_index":381,"title":{},"body":{"controllers/AppController.html":{}}}],["pingkilltimer",{"_index":382,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pings",{"_index":518,"title":{},"body":{"controllers/AppController.html":{}}}],["pingtimer",{"_index":378,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":428,"title":{},"body":{"controllers/AppController.html":{}}}],["please",{"_index":1708,"title":{},"body":{"index.html":{}}}],["pm2/types",{"_index":20,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["pm2startoptions",{"_index":19,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["port",{"_index":214,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["post",{"_index":1143,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["post('api",{"_index":1112,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["post('sat",{"_index":1133,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["potentially",{"_index":575,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthGuard.html":{},"controllers/SatInterfaceController.html":{}}}],["prefix",{"_index":1105,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["preview",{"_index":924,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{},"injectables/TasksQueueService.html":{}}}],["priority",{"_index":783,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceTag.html":{},"injectables/TasksQueueService.html":{}}}],["prioritycnt",{"_index":804,"title":{},"body":{"injectables/AppService.html":{}}}],["priorityqueue",{"_index":784,"title":{},"body":{"injectables/AppService.html":{},"injectables/TasksQueueService.html":{}}}],["prioritytag",{"_index":1534,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["prioritytasks",{"_index":169,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["private",{"_index":285,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["probably",{"_index":1120,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["process",{"_index":116,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["process.env.api_env",{"_index":485,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["process.env.log_level",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.logs",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":859,"title":{},"body":{"guards/AuthGuard.html":{}}}],["process.env.test_file",{"_index":764,"title":{},"body":{"injectables/AppService.html":{}}}],["process.stdout",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processedstatemachine",{"_index":843,"title":{"interfaces/ProcessedStateMachine.html":{}},"body":{"injectables/AppService.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/SendEvent.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"coverage.html":{}}}],["processedtree",{"_index":67,"title":{"interfaces/ProcessedTree.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["processes",{"_index":312,"title":{},"body":{"controllers/AppController.html":{}}}],["processmessagesfrommainservice",{"_index":297,"title":{},"body":{"controllers/AppController.html":{}}}],["processmessagesfrommainservice(target",{"_index":309,"title":{},"body":{"controllers/AppController.html":{}}}],["production",{"_index":1690,"title":{},"body":{"index.html":{}}}],["progress",{"_index":1524,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["progressive",{"_index":1672,"title":{},"body":{"index.html":{}}}],["project",{"_index":1699,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":925,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{}}}],["projects",{"_index":926,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{}}}],["promise",{"_index":280,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["promise((r",{"_index":436,"title":{},"body":{"controllers/AppController.html":{}}}],["promise((resolve",{"_index":442,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{}}}],["promises",{"_index":345,"title":{},"body":{"controllers/AppController.html":{}}}],["promises.mkdir(finalpath",{"_index":624,"title":{},"body":{"controllers/AppController.html":{}}}],["promises.mkdir(temppath",{"_index":622,"title":{},"body":{"controllers/AppController.html":{}}}],["promises.open(temppath",{"_index":625,"title":{},"body":{"controllers/AppController.html":{}}}],["prop",{"_index":191,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"classes/CWL.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/Lab.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"classes/SatelliteTask.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{}}}],["prop({type",{"_index":255,"title":{},"body":{"classes/ApiSyncMachine.html":{},"classes/CWL.html":{},"classes/Config.html":{},"classes/Lab.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"classes/SatelliteTask.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{}}}],["properties",{"_index":140,"title":{"properties.html":{}},"body":{"interfaces/APISyncMessage.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/AppService.html":{},"classes/CWL.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"classes/Lab.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"classes/git.html":{},"properties.html":{}}}],["provide",{"_index":229,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["provided",{"_index":1153,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["providedcerts",{"_index":189,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["providers",{"_index":691,"title":{},"body":{"modules/AppModule.html":{},"modules/MongoConnectionModule.html":{},"modules/StateMachineModules.html":{}}}],["public",{"_index":233,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"injectables/AppService.html":{},"injectables/LabService.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{},"injectables/StateMachinesService.html":{}}}],["public.connected",{"_index":1321,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["public.expiry_time_ms",{"_index":1313,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["public.localip",{"_index":1319,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["public.newabsoluteurl",{"_index":1325,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["public.publicip",{"_index":1322,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["public.remotemodules",{"_index":1308,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["public.showlocalfiles",{"_index":1306,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["public.version",{"_index":1294,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["publicdata",{"_index":207,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["publicinformation",{"_index":206,"title":{"classes/PublicInformation.html":{}},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"coverage.html":{}}}],["publicip",{"_index":220,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{}}}],["queue",{"_index":736,"title":{},"body":{"injectables/AppService.html":{},"injectables/TasksQueueService.html":{}}}],["r(true",{"_index":438,"title":{},"body":{"controllers/AppController.html":{}}}],["rd'][(n",{"_index":1580,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["read",{"_index":1709,"title":{},"body":{"index.html":{}}}],["ready",{"_index":832,"title":{},"body":{"injectables/AppService.html":{}}}],["real",{"_index":1396,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["receievedresponse",{"_index":175,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["recieve",{"_index":608,"title":{},"body":{"controllers/AppController.html":{}}}],["record",{"_index":1256,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["recursive",{"_index":623,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":1657,"title":{},"body":{"dependencies.html":{}}}],["regular",{"_index":782,"title":{},"body":{"injectables/AppService.html":{}}}],["reject",{"_index":765,"title":{},"body":{"injectables/AppService.html":{}}}],["reject(err",{"_index":771,"title":{},"body":{"injectables/AppService.html":{}}}],["relevant",{"_index":315,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["remote",{"_index":887,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"injectables/SatelliteService.html":{},"classes/git.html":{}}}],["remotemodule",{"_index":204,"title":{"interfaces/RemoteModule.html":{}},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"coverage.html":{}}}],["remotemodules",{"_index":211,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["remotes",{"_index":1297,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["remotes.map((remote",{"_index":1300,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["remove",{"_index":1127,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["removeapimachineforsatellite",{"_index":1109,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["removeapimachineforsatellite(@param('satid",{"_index":1182,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["removeapimachineforsatellite(satid",{"_index":1122,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["removed",{"_index":1128,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["removefsm",{"_index":718,"title":{},"body":{"injectables/AppService.html":{}}}],["removing",{"_index":413,"title":{},"body":{"controllers/AppController.html":{}}}],["rename",{"_index":344,"title":{},"body":{"controllers/AppController.html":{}}}],["rename(temppath",{"_index":635,"title":{},"body":{"controllers/AppController.html":{}}}],["repository",{"_index":1683,"title":{},"body":{"index.html":{}}}],["representation",{"_index":160,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/Output.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["represents",{"_index":1530,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["requeststream",{"_index":306,"title":{},"body":{"controllers/AppController.html":{}}}],["requeststream.end",{"_index":484,"title":{},"body":{"controllers/AppController.html":{}}}],["requeststream.getpeer",{"_index":476,"title":{},"body":{"controllers/AppController.html":{}}}],["requeststream.metadata.get('ips')[0",{"_index":469,"title":{},"body":{"controllers/AppController.html":{}}}],["requeststream.metadata.get('jwt')[0",{"_index":467,"title":{},"body":{"controllers/AppController.html":{}}}],["requeststream.on('data",{"_index":569,"title":{},"body":{"controllers/AppController.html":{}}}],["requeststream.on('end",{"_index":587,"title":{},"body":{"controllers/AppController.html":{}}}],["requeststream.write",{"_index":515,"title":{},"body":{"controllers/AppController.html":{}}}],["require",{"_index":1419,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["require(\"crypto",{"_index":354,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["require('fs",{"_index":355,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/variables.html":{}}}],["require('path",{"_index":352,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":807,"title":{},"body":{"injectables/AppService.html":{}}}],["reset",{"_index":688,"title":{},"body":{"modules/AppModule.html":{},"modules/MongoConnectionModule.html":{},"modules/StateMachineModules.html":{},"overview.html":{}}}],["resolve(__dirname",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolve(i",{"_index":1192,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["resolve(machines",{"_index":777,"title":{},"body":{"injectables/AppService.html":{}}}],["resolve(msg",{"_index":452,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}}}],["resolve(null",{"_index":449,"title":{},"body":{"controllers/AppController.html":{}}}],["resolve(true",{"_index":563,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}}}],["response",{"_index":110,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["restarts",{"_index":330,"title":{},"body":{"controllers/AppController.html":{}}}],["results",{"_index":137,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"classes/git.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":286,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"classes/ExceptionFilter.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":149,"title":{},"body":{"interfaces/APISyncService.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CWLService.html":{},"classes/ExceptionFilter.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteMachineService.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["rimraf",{"_index":1659,"title":{},"body":{"dependencies.html":{}}}],["room",{"_index":737,"title":{},"body":{"injectables/AppService.html":{}}}],["route",{"_index":460,"title":{},"body":{"controllers/AppController.html":{}}}],["rpc",{"_index":361,"title":{},"body":{"controllers/AppController.html":{},"classes/ExceptionFilter.html":{}}}],["rpcexception",{"_index":856,"title":{},"body":{"guards/AuthGuard.html":{},"classes/ExceptionFilter.html":{}}}],["rpcexception('bad",{"_index":867,"title":{},"body":{"guards/AuthGuard.html":{}}}],["rpcexceptionfilter",{"_index":952,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["run",{"_index":319,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/StateMachinesService.html":{},"index.html":{}}}],["runid",{"_index":1575,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["runkeepalivetimer",{"_index":298,"title":{},"body":{"controllers/AppController.html":{}}}],["runkeepalivetimer(satconnection",{"_index":323,"title":{},"body":{"controllers/AppController.html":{}}}],["runner",{"_index":837,"title":{},"body":{"injectables/AppService.html":{}}}],["running",{"_index":451,"title":{},"body":{"controllers/AppController.html":{}}}],["runs",{"_index":325,"title":{},"body":{"controllers/AppController.html":{}}}],["rxjs",{"_index":17,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":350,"title":{},"body":{"controllers/AppController.html":{}}}],["same",{"_index":1399,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["sample",{"_index":917,"title":{"classes/Sample.html":{}},"body":{"classes/Date-1.html":{},"modules/MongoConnectionModule.html":{},"interfaces/Output.html":{},"classes/Sample.html":{},"injectables/SatelliteService.html":{},"injectables/TasksQueueService.html":{},"coverage.html":{}}}],["sample.name",{"_index":1038,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["sample.public.remotemodules",{"_index":1298,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["sampledocument",{"_index":916,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{},"miscellaneous/typealiases.html":{}}}],["sampleid",{"_index":827,"title":{},"body":{"injectables/AppService.html":{},"injectables/TasksQueueService.html":{}}}],["samples",{"_index":918,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{}}}],["samples.service",{"_index":1013,"title":{},"body":{"modules/MongoConnectionModule.html":{},"injectables/TasksQueueService.html":{}}}],["sampleschema",{"_index":930,"title":{},"body":{"classes/Date-1.html":{},"modules/MongoConnectionModule.html":{},"classes/Sample.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sampleservice",{"_index":1502,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["samplesservice",{"_index":730,"title":{},"body":{"injectables/AppService.html":{},"modules/MongoConnectionModule.html":{},"injectables/StateMachinesService.html":{},"injectables/TasksQueueService.html":{},"coverage.html":{},"overview.html":{}}}],["sat",{"_index":549,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{}}}],["sat.nmodified",{"_index":1280,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["sat_id",{"_index":509,"title":{},"body":{"controllers/AppController.html":{}}}],["satcommands",{"_index":1424,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["satconnection",{"_index":310,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["satconnection.keepalivetimer",{"_index":606,"title":{},"body":{"controllers/AppController.html":{}}}],["satconnection.satinformation._id",{"_index":611,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["satconnection.statemachines[k].fsm",{"_index":792,"title":{},"body":{"injectables/AppService.html":{}}}],["satconnection.statemachines[target",{"_index":643,"title":{},"body":{"controllers/AppController.html":{}}}],["satconnection.statemachines[target].fsm",{"_index":651,"title":{},"body":{"controllers/AppController.html":{}}}],["satconnection.stream.end",{"_index":613,"title":{},"body":{"controllers/AppController.html":{}}}],["satconnections",{"_index":719,"title":{},"body":{"injectables/AppService.html":{}}}],["satellite",{"_index":97,"title":{"classes/Satellite.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"modules/MongoConnectionModule.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["satellite's",{"_index":109,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["satellite.absoluteurlsettings",{"_index":1282,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["satellite.name",{"_index":1037,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["satellite.service",{"_index":1014,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["satellite_id",{"_index":927,"title":{},"body":{"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Lab.html":{},"classes/Sample.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{}}}],["satellite_machines",{"_index":1052,"title":{},"body":{"classes/OnOptions.html":{},"classes/SatelliteMachine.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{}}}],["satellite_tasks",{"_index":1338,"title":{},"body":{"classes/SatelliteTask.html":{}}}],["satelliteconnection",{"_index":164,"title":{"interfaces/SatelliteConnection.html":{}},"body":{"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{},"coverage.html":{}}}],["satellitedocument",{"_index":203,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{},"miscellaneous/typealiases.html":{}}}],["satelliteid",{"_index":31,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/variables.html":{}}}],["satellitelist",{"_index":970,"title":{},"body":{"classes/Lab.html":{}}}],["satellitemachine",{"_index":1027,"title":{"classes/SatelliteMachine.html":{}},"body":{"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{},"coverage.html":{}}}],["satellitemachine.name",{"_index":1043,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["satellitemachinedocument",{"_index":1050,"title":{},"body":{"classes/OnOptions.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{},"miscellaneous/typealiases.html":{}}}],["satellitemachines.service",{"_index":1030,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["satellitemachineschema",{"_index":1028,"title":{},"body":{"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"classes/SatelliteMachine.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["satellitemachineservice",{"_index":372,"title":{"injectables/SatelliteMachineService.html":{}},"body":{"controllers/AppController.html":{},"modules/MongoConnectionModule.html":{},"injectables/SatelliteMachineService.html":{},"coverage.html":{},"overview.html":{}}}],["satellitemessage",{"_index":117,"title":{"interfaces/SatelliteMessage.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["satellitemodel",{"_index":1223,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["satelliteoutput",{"_index":125,"title":{"interfaces/SatelliteOutput.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["satellites",{"_index":161,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"injectables/AppService.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["satelliteschema",{"_index":242,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"modules/MongoConnectionModule.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["satelliteservice",{"_index":365,"title":{"injectables/SatelliteService.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"modules/MongoConnectionModule.html":{},"injectables/SatelliteService.html":{},"injectables/StateMachinesService.html":{},"coverage.html":{},"overview.html":{}}}],["satellitetask",{"_index":33,"title":{"classes/SatelliteTask.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"modules/MongoConnectionModule.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["satellitetask.name",{"_index":1044,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["satellitetaskdocument",{"_index":1337,"title":{},"body":{"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"miscellaneous/typealiases.html":{}}}],["satellitetasks.service",{"_index":1033,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["satellitetaskschema",{"_index":1031,"title":{},"body":{"modules/MongoConnectionModule.html":{},"classes/SatelliteTask.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["satellitetasksservice",{"_index":374,"title":{"injectables/SatelliteTasksService.html":{}},"body":{"controllers/AppController.html":{},"modules/MongoConnectionModule.html":{},"injectables/SatelliteTasksService.html":{},"coverage.html":{},"overview.html":{}}}],["satid",{"_index":496,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"injectables/TasksQueueService.html":{}}}],["satinformation",{"_index":171,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["satinformation._id",{"_index":474,"title":{},"body":{"controllers/AppController.html":{}}}],["satinformation.absoluteurlsettings.cert",{"_index":492,"title":{},"body":{"controllers/AppController.html":{}}}],["satinformation.absoluteurlsettings.key",{"_index":491,"title":{},"body":{"controllers/AppController.html":{}}}],["satinformation.absoluteurlsettings.providedcerts",{"_index":490,"title":{},"body":{"controllers/AppController.html":{}}}],["satinformation.apimachines",{"_index":552,"title":{},"body":{"controllers/AppController.html":{}}}],["satinformation.configoverwrites",{"_index":537,"title":{},"body":{"controllers/AppController.html":{}}}],["satinformation.satmachines",{"_index":553,"title":{},"body":{"controllers/AppController.html":{}}}],["satinformation.sattasks",{"_index":554,"title":{},"body":{"controllers/AppController.html":{}}}],["satinterface.controller",{"_index":1195,"title":{},"body":{"modules/SatInterfaceModule.html":{}}}],["satinterface/satinterface.module",{"_index":702,"title":{},"body":{"modules/AppModule.html":{}}}],["satinterfacecontroller",{"_index":1103,"title":{"controllers/SatInterfaceController.html":{}},"body":{"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"coverage.html":{}}}],["satinterfacemodule",{"_index":701,"title":{"modules/SatInterfaceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SatInterfaceModule.html":{},"modules.html":{}}}],["satkeys",{"_index":778,"title":{},"body":{"injectables/AppService.html":{}}}],["satmachines",{"_index":236,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["satstream",{"_index":1371,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["sattasks",{"_index":237,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/StateMachinesService.html":{}}}],["save",{"_index":835,"title":{},"body":{"injectables/AppService.html":{}}}],["savelogs",{"_index":108,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"classes/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["scalable",{"_index":1677,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":698,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":707,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":198,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"classes/CWL.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/Lab.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"classes/SatelliteTask.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{}}}],["schemafactory",{"_index":199,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"classes/CWL.html":{},"classes/Config.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"classes/Description.html":{},"classes/Lab.html":{},"classes/MachineCommand.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"classes/Options.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"classes/Satellite.html":{},"classes/SatelliteMachine.html":{},"classes/SatelliteTask.html":{},"classes/ServiceTag.html":{},"classes/State.html":{},"classes/StateOptions.html":{},"classes/SubDomain.html":{},"classes/TasksQueue.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"classes/git.html":{}}}],["schemafactory.createforclass(apisyncmachine",{"_index":267,"title":{},"body":{"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"classes/Options.html":{},"classes/State.html":{},"classes/Type.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(cwl",{"_index":893,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/git.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(lab",{"_index":984,"title":{},"body":{"classes/Lab.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(sample",{"_index":931,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(satellite",{"_index":243,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(satellitemachine",{"_index":1053,"title":{},"body":{"classes/OnOptions.html":{},"classes/SatelliteMachine.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(satellitetask",{"_index":1339,"title":{},"body":{"classes/SatelliteTask.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(servicetag",{"_index":1356,"title":{},"body":{"classes/ServiceTag.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(subdomain",{"_index":1475,"title":{},"body":{"classes/SubDomain.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(tasksqueue",{"_index":941,"title":{},"body":{"classes/Date-2.html":{},"classes/TasksQueue.html":{},"miscellaneous/variables.html":{}}}],["schemas/apisyncmachines.schema",{"_index":283,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"modules/MongoConnectionModule.html":{}}}],["schemas/cwl.schema",{"_index":904,"title":{},"body":{"injectables/CWLService.html":{},"modules/MongoConnectionModule.html":{}}}],["schemas/lab.schema",{"_index":997,"title":{},"body":{"injectables/LabService.html":{},"modules/MongoConnectionModule.html":{}}}],["schemas/sample.schema",{"_index":1015,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["schemas/satellite.schema",{"_index":1016,"title":{},"body":{"modules/MongoConnectionModule.html":{},"injectables/SatelliteService.html":{}}}],["schemas/satellitemachines.schema",{"_index":1029,"title":{},"body":{"modules/MongoConnectionModule.html":{},"injectables/SatelliteMachineService.html":{}}}],["schemas/satellitetask.schema",{"_index":1032,"title":{},"body":{"modules/MongoConnectionModule.html":{},"injectables/SatelliteTasksService.html":{}}}],["schemas/servicetag.schema",{"_index":1023,"title":{},"body":{"modules/MongoConnectionModule.html":{},"injectables/TasksQueueService.html":{}}}],["schemas/subdomain.schema",{"_index":1019,"title":{},"body":{"modules/MongoConnectionModule.html":{},"injectables/SubDomainService.html":{}}}],["schemas/task.schema",{"_index":1020,"title":{},"body":{"modules/MongoConnectionModule.html":{},"injectables/TasksQueueService.html":{}}}],["scidapduplexstream",{"_index":167,"title":{"interfaces/SciDapDuplexStream.html":{}},"body":{"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{},"coverage.html":{}}}],["scidaphome",{"_index":239,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["script",{"_index":1417,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["script).call(this",{"_index":1428,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["scriptstring",{"_index":107,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"classes/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["secondaryfiles",{"_index":1064,"title":{},"body":{"interfaces/Output.html":{}}}],["see",{"_index":526,"title":{},"body":{"controllers/AppController.html":{}}}],["send",{"_index":318,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{},"injectables/StateMachinesService.html":{}}}],["sender",{"_index":118,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["senders",{"_index":572,"title":{},"body":{"controllers/AppController.html":{}}}],["sendevent",{"_index":754,"title":{"interfaces/SendEvent.html":{}},"body":{"injectables/AppService.html":{},"interfaces/ProcessedStateMachine.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SendEvent.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"coverage.html":{}}}],["sendevent(@param('satid",{"_index":1185,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["sendevent(satid",{"_index":1129,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["sending",{"_index":314,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["sends",{"_index":1397,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["sendsatellitetask",{"_index":1067,"title":{},"body":{"interfaces/ProcessedStateMachine.html":{},"interfaces/SendEvent.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{}}}],["sendtasktosatellite",{"_index":1110,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["sendtasktosatellite(@param('id",{"_index":1163,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["sendtasktosatellite(id",{"_index":1132,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["sendtoapi",{"_index":720,"title":{},"body":{"injectables/AppService.html":{}}}],["sendtosat",{"_index":721,"title":{},"body":{"injectables/AppService.html":{}}}],["sent",{"_index":523,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}}}],["seperate",{"_index":741,"title":{},"body":{"injectables/AppService.html":{}}}],["seperateconfigfiles",{"_index":724,"title":{},"body":{"injectables/AppService.html":{}}}],["server",{"_index":163,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"injectables/SatelliteService.html":{},"interfaces/SciDapDuplexStream.html":{},"index.html":{}}}],["service",{"_index":317,"title":{},"body":{"controllers/AppController.html":{}}}],["service_tags",{"_index":1355,"title":{},"body":{"classes/ServiceTag.html":{},"injectables/TasksQueueService.html":{}}}],["servicecommand",{"_index":37,"title":{"interfaces/ServiceCommand.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["servicetag",{"_index":1021,"title":{"classes/ServiceTag.html":{}},"body":{"modules/MongoConnectionModule.html":{},"classes/ServiceTag.html":{},"injectables/TasksQueueService.html":{},"coverage.html":{}}}],["servicetag.name",{"_index":1041,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["servicetagdocument",{"_index":1354,"title":{},"body":{"classes/ServiceTag.html":{},"injectables/TasksQueueService.html":{},"miscellaneous/typealiases.html":{}}}],["servicetagmodel",{"_index":1503,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["servicetags",{"_index":872,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/Sample.html":{},"classes/git.html":{}}}],["servicetagschema",{"_index":1022,"title":{},"body":{"modules/MongoConnectionModule.html":{},"classes/ServiceTag.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":57,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"injectables/LabService.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/variables.html":{}}}],["set's",{"_index":1248,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["setinterval",{"_index":521,"title":{},"body":{"controllers/AppController.html":{}}}],["settimeout",{"_index":437,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}}}],["settings",{"_index":1283,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["setup",{"_index":1381,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["setupstatemachine",{"_index":725,"title":{},"body":{"injectables/AppService.html":{}}}],["setupstatemachine(states",{"_index":742,"title":{},"body":{"injectables/AppService.html":{}}}],["sha",{"_index":888,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/git.html":{}}}],["show",{"_index":178,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["side",{"_index":1678,"title":{},"body":{"index.html":{}}}],["single",{"_index":313,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}}}],["size",{"_index":1065,"title":{},"body":{"interfaces/Output.html":{}}}],["sort((a",{"_index":811,"title":{},"body":{"injectables/AppService.html":{}}}],["sortedprioritytasks",{"_index":815,"title":{},"body":{"injectables/AppService.html":{}}}],["sortedprioritytasks.length",{"_index":822,"title":{},"body":{"injectables/AppService.html":{}}}],["sortedprioritytasks.shift",{"_index":824,"title":{},"body":{"injectables/AppService.html":{}}}],["sortedtasks",{"_index":805,"title":{},"body":{"injectables/AppService.html":{}}}],["sortedtasks.length",{"_index":821,"title":{},"body":{"injectables/AppService.html":{}}}],["sortedtasks.shift",{"_index":825,"title":{},"body":{"injectables/AppService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"modules/MongoConnectionModule.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"modules/SatInterfaceModule.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"classes/git.html":{},"index.html":{}}}],["source_map_support",{"_index":101,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["specific",{"_index":555,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/variables.html":{}}}],["specificconfig",{"_index":551,"title":{},"body":{"controllers/AppController.html":{}}}],["specificconfig.apimachines",{"_index":559,"title":{},"body":{"controllers/AppController.html":{}}}],["specificconfig.apimachines.length",{"_index":556,"title":{},"body":{"controllers/AppController.html":{}}}],["specificconfig.satmachines",{"_index":568,"title":{},"body":{"controllers/AppController.html":{}}}],["specificconfig.satmachines.length",{"_index":557,"title":{},"body":{"controllers/AppController.html":{}}}],["specificconfig.sattasks",{"_index":558,"title":{},"body":{"controllers/AppController.html":{}}}],["sponsors",{"_index":1702,"title":{},"body":{"index.html":{}}}],["src/.../apisyncmachines.schema.ts",{"_index":1733,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.controller.ts",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.service.ts",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cwl.schema.ts",{"_index":1734,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../lab.schema.ts",{"_index":1735,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../logger.ts",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1665,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../sample.schema.ts",{"_index":1736,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../satellite.schema.ts",{"_index":1737,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../satellitemachines.schema.ts",{"_index":1738,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../satellitetask.schema.ts",{"_index":1739,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../servicetag.schema.ts",{"_index":1740,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../statemachines.service.ts",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../subdomain.schema.ts",{"_index":1741,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../task.schema.ts",{"_index":1742,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":294,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts:135",{"_index":334,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:287",{"_index":324,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:299",{"_index":308,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:326",{"_index":305,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:349",{"_index":311,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:363",{"_index":301,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.guard.ts",{"_index":847,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app.guard.ts:15",{"_index":853,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app.guard.ts:8",{"_index":850,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app.module.ts",{"_index":690,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":716,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts:148",{"_index":743,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:17",{"_index":751,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:18",{"_index":750,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:19",{"_index":752,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:20",{"_index":748,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:21",{"_index":749,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:22",{"_index":731,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:37",{"_index":740,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:63",{"_index":733,"title":{},"body":{"injectables/AppService.html":{}}}],["src/interfaces/apisync.interface.ts",{"_index":6,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["src/interfaces/apisync.interface.ts:141",{"_index":965,"title":{},"body":{"interfaces/FileFromClient.html":{}}}],["src/interfaces/apisync.interface.ts:144",{"_index":11,"title":{},"body":{"interfaces/APISyncComplete.html":{}}}],["src/interfaces/apisync.interface.ts:60",{"_index":1054,"title":{},"body":{"interfaces/OptionTypes.html":{}}}],["src/interfaces/apisync.interface.ts:7",{"_index":151,"title":{},"body":{"interfaces/APISyncService.html":{}}}],["src/interfaces/apisync.interface.ts:8",{"_index":146,"title":{},"body":{"interfaces/APISyncService.html":{}}}],["src/interfaces/apisync.interface.ts:9",{"_index":150,"title":{},"body":{"interfaces/APISyncService.html":{}}}],["src/interfaces/connection.interface.ts",{"_index":153,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{},"coverage.html":{}}}],["src/interfaces/statemachines.interface.ts",{"_index":1066,"title":{},"body":{"interfaces/ProcessedStateMachine.html":{},"interfaces/SendEvent.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"coverage.html":{}}}],["src/interfaces/tasksqueue.interface.ts",{"_index":1057,"title":{},"body":{"interfaces/Output.html":{},"coverage.html":{}}}],["src/lib/logger.ts",{"_index":1617,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":1619,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/mongoconnection/apisyncmachines.service.ts",{"_index":271,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{},"coverage.html":{}}}],["src/mongoconnection/apisyncmachines.service.ts:14",{"_index":279,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{}}}],["src/mongoconnection/apisyncmachines.service.ts:8",{"_index":277,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{}}}],["src/mongoconnection/cwl.service.ts",{"_index":895,"title":{},"body":{"injectables/CWLService.html":{},"coverage.html":{}}}],["src/mongoconnection/cwl.service.ts:18",{"_index":901,"title":{},"body":{"injectables/CWLService.html":{}}}],["src/mongoconnection/cwl.service.ts:8",{"_index":898,"title":{},"body":{"injectables/CWLService.html":{}}}],["src/mongoconnection/labs.service.ts",{"_index":986,"title":{},"body":{"injectables/LabService.html":{},"coverage.html":{}}}],["src/mongoconnection/labs.service.ts:18",{"_index":991,"title":{},"body":{"injectables/LabService.html":{}}}],["src/mongoconnection/labs.service.ts:28",{"_index":994,"title":{},"body":{"injectables/LabService.html":{}}}],["src/mongoconnection/labs.service.ts:8",{"_index":989,"title":{},"body":{"injectables/LabService.html":{}}}],["src/mongoconnection/mongoconnection.module.ts",{"_index":1011,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["src/mongoconnection/samples.service.ts",{"_index":1622,"title":{},"body":{"coverage.html":{}}}],["src/mongoconnection/satellite.service.ts",{"_index":1222,"title":{},"body":{"injectables/SatelliteService.html":{},"coverage.html":{}}}],["src/mongoconnection/satellite.service.ts:10",{"_index":1234,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:117",{"_index":1268,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:13",{"_index":1278,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:138",{"_index":1244,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:153",{"_index":1254,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:168",{"_index":1246,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:17",{"_index":1265,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:181",{"_index":1264,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:30",{"_index":1243,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:46",{"_index":1241,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:56",{"_index":1236,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:72",{"_index":1276,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellite.service.ts:86",{"_index":1261,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["src/mongoconnection/satellitemachines.service.ts",{"_index":1215,"title":{},"body":{"injectables/SatelliteMachineService.html":{},"coverage.html":{}}}],["src/mongoconnection/satellitemachines.service.ts:14",{"_index":1219,"title":{},"body":{"injectables/SatelliteMachineService.html":{}}}],["src/mongoconnection/satellitemachines.service.ts:8",{"_index":1217,"title":{},"body":{"injectables/SatelliteMachineService.html":{}}}],["src/mongoconnection/satellitetasks.service.ts",{"_index":1340,"title":{},"body":{"injectables/SatelliteTasksService.html":{},"coverage.html":{}}}],["src/mongoconnection/satellitetasks.service.ts:14",{"_index":1345,"title":{},"body":{"injectables/SatelliteTasksService.html":{}}}],["src/mongoconnection/satellitetasks.service.ts:8",{"_index":1343,"title":{},"body":{"injectables/SatelliteTasksService.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts",{"_index":245,"title":{},"body":{"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"classes/Options.html":{},"classes/State.html":{},"classes/Type.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:100",{"_index":253,"title":{},"body":{"classes/ApiSyncMachine.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:103",{"_index":256,"title":{},"body":{"classes/ApiSyncMachine.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:11",{"_index":1587,"title":{},"body":{"classes/Type.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:14",{"_index":1586,"title":{},"body":{"classes/Type.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:19",{"_index":1357,"title":{},"body":{"classes/State.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:22",{"_index":1358,"title":{},"body":{"classes/State.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:25",{"_index":1359,"title":{},"body":{"classes/State.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:32",{"_index":909,"title":{},"body":{"classes/Config.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:35",{"_index":910,"title":{},"body":{"classes/Config.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:38",{"_index":908,"title":{},"body":{"classes/Config.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:43",{"_index":912,"title":{},"body":{"classes/Config.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:48",{"_index":911,"title":{},"body":{"classes/Config.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:55",{"_index":1055,"title":{},"body":{"classes/Options.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:60",{"_index":1056,"title":{},"body":{"classes/Options.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:67",{"_index":1005,"title":{},"body":{"classes/MachineCommand.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:70",{"_index":1003,"title":{},"body":{"classes/MachineCommand.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:73",{"_index":1002,"title":{},"body":{"classes/MachineCommand.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:76",{"_index":1004,"title":{},"body":{"classes/MachineCommand.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:8",{"_index":1588,"title":{},"body":{"classes/Type.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:82",{"_index":248,"title":{},"body":{"classes/ApiSyncMachine.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:85",{"_index":249,"title":{},"body":{"classes/ApiSyncMachine.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:88",{"_index":252,"title":{},"body":{"classes/ApiSyncMachine.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:91",{"_index":257,"title":{},"body":{"classes/ApiSyncMachine.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:94",{"_index":250,"title":{},"body":{"classes/ApiSyncMachine.html":{}}}],["src/mongoconnection/schemas/apisyncmachines.schema.ts:97",{"_index":251,"title":{},"body":{"classes/ApiSyncMachine.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts",{"_index":869,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"coverage.html":{},"classes/git.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:13",{"_index":942,"title":{},"body":{"classes/Description.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:16",{"_index":943,"title":{},"body":{"classes/Description.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:19",{"_index":944,"title":{},"body":{"classes/Description.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:22",{"_index":945,"title":{},"body":{"classes/Description.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:25",{"_index":946,"title":{},"body":{"classes/Description.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:28",{"_index":947,"title":{},"body":{"classes/Description.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:33",{"_index":1667,"title":{},"body":{"classes/git.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:36",{"_index":1668,"title":{},"body":{"classes/git.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:39",{"_index":1669,"title":{},"body":{"classes/git.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:42",{"_index":1670,"title":{},"body":{"classes/git.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:45",{"_index":1666,"title":{},"body":{"classes/git.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:50",{"_index":1006,"title":{},"body":{"classes/Metadata.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:53",{"_index":1007,"title":{},"body":{"classes/Metadata.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:59",{"_index":874,"title":{},"body":{"classes/CWL.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:62",{"_index":875,"title":{},"body":{"classes/CWL.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:65",{"_index":876,"title":{},"body":{"classes/CWL.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:68",{"_index":877,"title":{},"body":{"classes/CWL.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:71",{"_index":878,"title":{},"body":{"classes/CWL.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:74",{"_index":879,"title":{},"body":{"classes/CWL.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:77",{"_index":881,"title":{},"body":{"classes/CWL.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:8",{"_index":913,"title":{},"body":{"classes/Date.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:80",{"_index":882,"title":{},"body":{"classes/CWL.html":{}}}],["src/mongoconnection/schemas/cwl.schema.ts:83",{"_index":880,"title":{},"body":{"classes/CWL.html":{}}}],["src/mongoconnection/schemas/lab.schema.ts",{"_index":967,"title":{},"body":{"classes/Lab.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/mongoconnection/schemas/lab.schema.ts:12",{"_index":976,"title":{},"body":{"classes/Lab.html":{}}}],["src/mongoconnection/schemas/lab.schema.ts:15",{"_index":972,"title":{},"body":{"classes/Lab.html":{}}}],["src/mongoconnection/schemas/lab.schema.ts:18",{"_index":973,"title":{},"body":{"classes/Lab.html":{}}}],["src/mongoconnection/schemas/lab.schema.ts:21",{"_index":974,"title":{},"body":{"classes/Lab.html":{}}}],["src/mongoconnection/schemas/lab.schema.ts:24",{"_index":975,"title":{},"body":{"classes/Lab.html":{}}}],["src/mongoconnection/schemas/lab.schema.ts:27",{"_index":977,"title":{},"body":{"classes/Lab.html":{}}}],["src/mongoconnection/schemas/lab.schema.ts:30",{"_index":978,"title":{},"body":{"classes/Lab.html":{}}}],["src/mongoconnection/schemas/lab.schema.ts:33",{"_index":979,"title":{},"body":{"classes/Lab.html":{}}}],["src/mongoconnection/schemas/lab.schema.ts:36",{"_index":980,"title":{},"body":{"classes/Lab.html":{}}}],["src/mongoconnection/schemas/lab.schema.ts:9",{"_index":971,"title":{},"body":{"classes/Lab.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts",{"_index":914,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:14",{"_index":1087,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:17",{"_index":1088,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:20",{"_index":1099,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:23",{"_index":1102,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:26",{"_index":1090,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:29",{"_index":1101,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:32",{"_index":1092,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:35",{"_index":1093,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:38",{"_index":1094,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:41",{"_index":1091,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:44",{"_index":1095,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:47",{"_index":1096,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:50",{"_index":1097,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:53",{"_index":1100,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:56",{"_index":1089,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:59",{"_index":1098,"title":{},"body":{"classes/Sample.html":{}}}],["src/mongoconnection/schemas/sample.schema.ts:8",{"_index":915,"title":{},"body":{"classes/Date-1.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts",{"_index":184,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:102",{"_index":1203,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:105",{"_index":1204,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:108",{"_index":1198,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:111",{"_index":1205,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:114",{"_index":1200,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:12",{"_index":1083,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:15",{"_index":1075,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:18",{"_index":1076,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:21",{"_index":1074,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:24",{"_index":1085,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:27",{"_index":1073,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:30",{"_index":1078,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:33",{"_index":1082,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:36",{"_index":1086,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:39",{"_index":1080,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:42",{"_index":1077,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:45",{"_index":1081,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:48",{"_index":1079,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:51",{"_index":1084,"title":{},"body":{"classes/PublicInformation.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:56",{"_index":196,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:59",{"_index":194,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:62",{"_index":197,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:65",{"_index":195,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:68",{"_index":192,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:71",{"_index":193,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:78",{"_index":1196,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:81",{"_index":1201,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:84",{"_index":1208,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:87",{"_index":1202,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:90",{"_index":1207,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:93",{"_index":1199,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:96",{"_index":1206,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellite.schema.ts:99",{"_index":1197,"title":{},"body":{"classes/Satellite.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts",{"_index":1046,"title":{},"body":{"classes/OnOptions.html":{},"classes/SatelliteMachine.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:11",{"_index":1047,"title":{},"body":{"classes/OnOptions.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:14",{"_index":1048,"title":{},"body":{"classes/OnOptions.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:19",{"_index":1461,"title":{},"body":{"classes/StateOptions.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:22",{"_index":1462,"title":{},"body":{"classes/StateOptions.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:25",{"_index":1463,"title":{},"body":{"classes/StateOptions.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:32",{"_index":1592,"title":{},"body":{"classes/UnProcessedStateMachine.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:37",{"_index":1591,"title":{},"body":{"classes/UnProcessedStateMachine.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:42",{"_index":1590,"title":{},"body":{"classes/UnProcessedStateMachine.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:47",{"_index":1589,"title":{},"body":{"classes/UnProcessedStateMachine.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:55",{"_index":1209,"title":{},"body":{"classes/SatelliteMachine.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:58",{"_index":1211,"title":{},"body":{"classes/SatelliteMachine.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:61",{"_index":1210,"title":{},"body":{"classes/SatelliteMachine.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:64",{"_index":1213,"title":{},"body":{"classes/SatelliteMachine.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:67",{"_index":1214,"title":{},"body":{"classes/SatelliteMachine.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:70",{"_index":1212,"title":{},"body":{"classes/SatelliteMachine.html":{}}}],["src/mongoconnection/schemas/satellitemachines.schema.ts:8",{"_index":1049,"title":{},"body":{"classes/OnOptions.html":{}}}],["src/mongoconnection/schemas/satellitetask.schema.ts",{"_index":1326,"title":{},"body":{"classes/SatelliteTask.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/mongoconnection/schemas/satellitetask.schema.ts:12",{"_index":1330,"title":{},"body":{"classes/SatelliteTask.html":{}}}],["src/mongoconnection/schemas/satellitetask.schema.ts:15",{"_index":1331,"title":{},"body":{"classes/SatelliteTask.html":{}}}],["src/mongoconnection/schemas/satellitetask.schema.ts:18",{"_index":1328,"title":{},"body":{"classes/SatelliteTask.html":{}}}],["src/mongoconnection/schemas/satellitetask.schema.ts:21",{"_index":1332,"title":{},"body":{"classes/SatelliteTask.html":{}}}],["src/mongoconnection/schemas/satellitetask.schema.ts:24",{"_index":1336,"title":{},"body":{"classes/SatelliteTask.html":{}}}],["src/mongoconnection/schemas/satellitetask.schema.ts:27",{"_index":1335,"title":{},"body":{"classes/SatelliteTask.html":{}}}],["src/mongoconnection/schemas/satellitetask.schema.ts:30",{"_index":1333,"title":{},"body":{"classes/SatelliteTask.html":{}}}],["src/mongoconnection/schemas/satellitetask.schema.ts:33",{"_index":1329,"title":{},"body":{"classes/SatelliteTask.html":{}}}],["src/mongoconnection/schemas/satellitetask.schema.ts:36",{"_index":1334,"title":{},"body":{"classes/SatelliteTask.html":{}}}],["src/mongoconnection/schemas/satellitetask.schema.ts:9",{"_index":1327,"title":{},"body":{"classes/SatelliteTask.html":{}}}],["src/mongoconnection/schemas/servicetag.schema.ts",{"_index":1348,"title":{},"body":{"classes/ServiceTag.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/mongoconnection/schemas/servicetag.schema.ts:12",{"_index":1351,"title":{},"body":{"classes/ServiceTag.html":{}}}],["src/mongoconnection/schemas/servicetag.schema.ts:15",{"_index":1352,"title":{},"body":{"classes/ServiceTag.html":{}}}],["src/mongoconnection/schemas/servicetag.schema.ts:18",{"_index":1353,"title":{},"body":{"classes/ServiceTag.html":{}}}],["src/mongoconnection/schemas/servicetag.schema.ts:9",{"_index":1350,"title":{},"body":{"classes/ServiceTag.html":{}}}],["src/mongoconnection/schemas/subdomain.schema.ts",{"_index":1464,"title":{},"body":{"classes/SubDomain.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/mongoconnection/schemas/subdomain.schema.ts:12",{"_index":1471,"title":{},"body":{"classes/SubDomain.html":{}}}],["src/mongoconnection/schemas/subdomain.schema.ts:15",{"_index":1470,"title":{},"body":{"classes/SubDomain.html":{}}}],["src/mongoconnection/schemas/subdomain.schema.ts:18",{"_index":1467,"title":{},"body":{"classes/SubDomain.html":{}}}],["src/mongoconnection/schemas/subdomain.schema.ts:21",{"_index":1469,"title":{},"body":{"classes/SubDomain.html":{}}}],["src/mongoconnection/schemas/subdomain.schema.ts:24",{"_index":1468,"title":{},"body":{"classes/SubDomain.html":{}}}],["src/mongoconnection/schemas/subdomain.schema.ts:9",{"_index":1466,"title":{},"body":{"classes/SubDomain.html":{}}}],["src/mongoconnection/schemas/task.schema.ts",{"_index":932,"title":{},"body":{"classes/Date-2.html":{},"classes/TasksQueue.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/mongoconnection/schemas/task.schema.ts:11",{"_index":934,"title":{},"body":{"classes/Date-2.html":{}}}],["src/mongoconnection/schemas/task.schema.ts:17",{"_index":1492,"title":{},"body":{"classes/TasksQueue.html":{}}}],["src/mongoconnection/schemas/task.schema.ts:20",{"_index":1496,"title":{},"body":{"classes/TasksQueue.html":{}}}],["src/mongoconnection/schemas/task.schema.ts:23",{"_index":1493,"title":{},"body":{"classes/TasksQueue.html":{}}}],["src/mongoconnection/schemas/task.schema.ts:26",{"_index":1495,"title":{},"body":{"classes/TasksQueue.html":{}}}],["src/mongoconnection/schemas/task.schema.ts:29",{"_index":1494,"title":{},"body":{"classes/TasksQueue.html":{}}}],["src/mongoconnection/schemas/task.schema.ts:8",{"_index":935,"title":{},"body":{"classes/Date-2.html":{}}}],["src/mongoconnection/subdomain.service.ts",{"_index":1476,"title":{},"body":{"injectables/SubDomainService.html":{},"coverage.html":{}}}],["src/mongoconnection/subdomain.service.ts:18",{"_index":1483,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["src/mongoconnection/subdomain.service.ts:29",{"_index":1487,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["src/mongoconnection/subdomain.service.ts:8",{"_index":1480,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["src/mongoconnection/tasksqueue.service.ts",{"_index":1497,"title":{},"body":{"injectables/TasksQueueService.html":{},"coverage.html":{}}}],["src/mongoconnection/tasksqueue.service.ts:103",{"_index":1523,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["src/mongoconnection/tasksqueue.service.ts:12",{"_index":1504,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["src/mongoconnection/tasksqueue.service.ts:127",{"_index":1527,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["src/mongoconnection/tasksqueue.service.ts:152",{"_index":1519,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["src/mongoconnection/tasksqueue.service.ts:162",{"_index":1509,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["src/mongoconnection/tasksqueue.service.ts:26",{"_index":1517,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["src/mongoconnection/tasksqueue.service.ts:47",{"_index":1513,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["src/mongoconnection/tasksqueue.service.ts:63",{"_index":1507,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["src/rpc",{"_index":948,"title":{},"body":{"classes/ExceptionFilter.html":{},"coverage.html":{}}}],["src/satinterface/satinterface.controller.ts",{"_index":1104,"title":{},"body":{"controllers/SatInterfaceController.html":{},"coverage.html":{}}}],["src/satinterface/satinterface.controller.ts:134",{"_index":1126,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["src/satinterface/satinterface.controller.ts:158",{"_index":1131,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["src/satinterface/satinterface.controller.ts:177",{"_index":1139,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["src/satinterface/satinterface.controller.ts:21",{"_index":1119,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["src/satinterface/satinterface.controller.ts:33",{"_index":1118,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["src/satinterface/satinterface.controller.ts:66",{"_index":1135,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["src/satinterface/satinterface.controller.ts:99",{"_index":1114,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["src/satinterface/satinterface.module.ts",{"_index":1193,"title":{},"body":{"modules/SatInterfaceModule.html":{}}}],["src/statemachines/statemachines.module.ts",{"_index":1364,"title":{},"body":{"modules/StateMachineModules.html":{}}}],["src/statemachines/statemachines.service.ts",{"_index":1366,"title":{},"body":{"injectables/StateMachinesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/statemachines/statemachines.service.ts:20",{"_index":1377,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["src/statemachines/statemachines.service.ts:34",{"_index":1386,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["src/statemachines/statemachines.service.ts:37",{"_index":1387,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["src/statemachines/statemachines.service.ts:40",{"_index":1388,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["src/statemachines/statemachines.service.ts:43",{"_index":1389,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["src/statemachines/statemachines.service.ts:45",{"_index":1385,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["src/statemachines/statemachines.service.ts:46",{"_index":1383,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["src/statemachines/statemachines.service.ts:47",{"_index":1384,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["src/statemachines/statemachines.service.ts:57",{"_index":1380,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["st",{"_index":1578,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["standard",{"_index":819,"title":{},"body":{"injectables/AppService.html":{}}}],["start",{"_index":567,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{},"index.html":{}}}],["start:dev",{"_index":1689,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1691,"title":{},"body":{"index.html":{}}}],["started",{"_index":565,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}}}],["starter",{"_index":1682,"title":{},"body":{"index.html":{}}}],["startoptions",{"_index":18,"title":{"interfaces/StartOptions.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["starts",{"_index":516,"title":{},"body":{"controllers/AppController.html":{}}}],["state",{"_index":259,"title":{"classes/State.html":{}},"body":{"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Config.html":{},"classes/MachineCommand.html":{},"classes/Options.html":{},"controllers/SatInterfaceController.html":{},"classes/State.html":{},"injectables/StateMachinesService.html":{},"injectables/TasksQueueService.html":{},"classes/Type.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.value",{"_index":1455,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["statelogger",{"_index":1393,"title":{},"body":{"injectables/StateMachinesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["statelogger(config.id",{"_index":1404,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["statemachine",{"_index":42,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["statemachine.log",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statemachinemodules",{"_index":703,"title":{"modules/StateMachineModules.html":{}},"body":{"modules/AppModule.html":{},"modules/StateMachineModules.html":{},"modules.html":{},"overview.html":{}}}],["statemachineoptions",{"_index":69,"title":{"interfaces/StateMachineOptions.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["statemachines",{"_index":168,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{}}}],["statemachines.service",{"_index":1365,"title":{},"body":{"modules/StateMachineModules.html":{}}}],["statemachines/statemachines.module",{"_index":704,"title":{},"body":{"modules/AppModule.html":{}}}],["statemachines/statemachines.service",{"_index":364,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["statemachines[key",{"_index":1158,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["statemachinesservice",{"_index":363,"title":{"injectables/StateMachinesService.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"modules/StateMachineModules.html":{},"injectables/StateMachinesService.html":{},"coverage.html":{},"overview.html":{}}}],["statements",{"_index":1596,"title":{},"body":{"coverage.html":{}}}],["stateoptions",{"_index":72,"title":{"classes/StateOptions.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["states",{"_index":62,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"injectables/AppService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["statistics",{"_index":929,"title":{},"body":{"classes/Date-1.html":{},"classes/Lab.html":{},"classes/Sample.html":{}}}],["status",{"_index":633,"title":{},"body":{"controllers/AppController.html":{},"injectables/SatelliteService.html":{},"injectables/TasksQueueService.html":{}}}],["stay",{"_index":1710,"title":{},"body":{"index.html":{}}}],["stderr",{"_index":53,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["stdin",{"_index":135,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["stdout",{"_index":51,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["still",{"_index":470,"title":{},"body":{"controllers/AppController.html":{}}}],["store",{"_index":455,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/variables.html":{}}}],["storekey",{"_index":1072,"title":{"interfaces/StoreKey.html":{}},"body":{"interfaces/ProcessedStateMachine.html":{},"interfaces/SendEvent.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"coverage.html":{}}}],["stores",{"_index":389,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["storevalue",{"_index":1372,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["storing",{"_index":457,"title":{},"body":{"controllers/AppController.html":{},"injectables/StateMachinesService.html":{}}}],["stream",{"_index":166,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{},"miscellaneous/variables.html":{}}}],["streamconnection",{"_index":960,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["streamconnection.emit('error",{"_index":962,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["streamqueue",{"_index":145,"title":{},"body":{"interfaces/APISyncService.html":{},"controllers/AppController.html":{}}}],["streamqueue(requeststream",{"_index":332,"title":{},"body":{"controllers/AppController.html":{}}}],["streamqueue(upstream",{"_index":26,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["streamresponse",{"_index":106,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"classes/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["streams",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":9,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"classes/git.html":{},"miscellaneous/variables.html":{}}}],["stringify",{"_index":95,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["strings",{"_index":84,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["style",{"_index":134,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"classes/Type.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["sub_domains",{"_index":1473,"title":{},"body":{"classes/SubDomain.html":{}}}],["subdomain",{"_index":1017,"title":{"classes/SubDomain.html":{}},"body":{"modules/MongoConnectionModule.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"coverage.html":{}}}],["subdomain.name",{"_index":1040,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["subdomain.service",{"_index":1025,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["subdomaindocument",{"_index":1472,"title":{},"body":{"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"miscellaneous/typealiases.html":{}}}],["subdomainmodel",{"_index":1481,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["subdomainschema",{"_index":1018,"title":{},"body":{"modules/MongoConnectionModule.html":{},"classes/SubDomain.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["subdomainservice",{"_index":367,"title":{"injectables/SubDomainService.html":{}},"body":{"controllers/AppController.html":{},"modules/MongoConnectionModule.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"coverage.html":{},"overview.html":{}}}],["subject",{"_index":747,"title":{},"body":{"injectables/AppService.html":{},"injectables/StateMachinesService.html":{}}}],["subscribe((message",{"_index":423,"title":{},"body":{"controllers/AppController.html":{}}}],["subscribe((result",{"_index":511,"title":{},"body":{"controllers/AppController.html":{}}}],["subscribe(async",{"_index":434,"title":{},"body":{"controllers/AppController.html":{}}}],["subscription_cancelled",{"_index":810,"title":{},"body":{"injectables/AppService.html":{}}}],["success",{"_index":634,"title":{},"body":{"controllers/AppController.html":{}}}],["support",{"_index":1703,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":830,"title":{},"body":{"injectables/AppService.html":{}}}],["svg",{"_index":1720,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":48,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["t",{"_index":1553,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["t._id",{"_index":1554,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["t.date.created",{"_index":1555,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["table",{"_index":1637,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1636,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":873,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/git.html":{}}}],["tap",{"_index":349,"title":{},"body":{"controllers/AppController.html":{}}}],["tap((m",{"_index":418,"title":{},"body":{"controllers/AppController.html":{}}}],["target",{"_index":45,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"classes/SatelliteMachine.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["targetmachine",{"_index":126,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["task",{"_index":738,"title":{},"body":{"injectables/AppService.html":{},"controllers/SatInterfaceController.html":{},"injectables/TasksQueueService.html":{}}}],["task._id",{"_index":839,"title":{},"body":{"injectables/AppService.html":{},"injectables/TasksQueueService.html":{}}}],["task.action",{"_index":809,"title":{},"body":{"injectables/AppService.html":{}}}],["task.payload.foreach((value",{"_index":1559,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["task.payload.get('downloads",{"_index":1567,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["task.payload.get('sample_id",{"_index":1576,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["task.payload.get('service_tags",{"_index":1538,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["task.payload.get('service_tags').includes(prioritytag._id",{"_index":1540,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["task.satellite_id",{"_index":1544,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["task_id",{"_index":1515,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["taskcnt",{"_index":803,"title":{},"body":{"injectables/AppService.html":{}}}],["taskid",{"_index":30,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/TasksQueueService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["taskrunners",{"_index":787,"title":{},"body":{"injectables/AppService.html":{}}}],["taskrunners.filter((fsm",{"_index":795,"title":{},"body":{"injectables/AppService.html":{}}}],["taskrunners.length",{"_index":799,"title":{},"body":{"injectables/AppService.html":{}}}],["tasks",{"_index":32,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["tasks.length",{"_index":1167,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["tasks.reduce",{"_index":1537,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["tasks_queue",{"_index":937,"title":{},"body":{"classes/Date-2.html":{},"classes/TasksQueue.html":{}}}],["tasksbysat",{"_index":1551,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["tasksbysat.foreach(async",{"_index":1552,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["tasksqueue",{"_index":936,"title":{"classes/TasksQueue.html":{}},"body":{"classes/Date-2.html":{},"modules/MongoConnectionModule.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"coverage.html":{}}}],["tasksqueue.name",{"_index":1036,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["tasksqueue.service",{"_index":1024,"title":{},"body":{"modules/MongoConnectionModule.html":{}}}],["tasksqueuedocument",{"_index":757,"title":{},"body":{"injectables/AppService.html":{},"classes/Date-2.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"miscellaneous/typealiases.html":{}}}],["tasksqueuemodel",{"_index":1505,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["tasksqueueschema",{"_index":940,"title":{},"body":{"classes/Date-2.html":{},"modules/MongoConnectionModule.html":{},"classes/TasksQueue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tasksqueueservice",{"_index":728,"title":{"injectables/TasksQueueService.html":{}},"body":{"injectables/AppService.html":{},"modules/MongoConnectionModule.html":{},"injectables/StateMachinesService.html":{},"injectables/TasksQueueService.html":{},"coverage.html":{},"overview.html":{}}}],["teh",{"_index":1438,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["templateid",{"_index":920,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{}}}],["tempname",{"_index":614,"title":{},"body":{"controllers/AppController.html":{}}}],["temppath",{"_index":617,"title":{},"body":{"controllers/AppController.html":{}}}],["test",{"_index":495,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/SubDomainService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":1696,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1695,"title":{},"body":{"index.html":{}}}],["test_satellite",{"_index":402,"title":{},"body":{"controllers/AppController.html":{}}}],["testing",{"_index":79,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["tests",{"_index":1693,"title":{},"body":{"index.html":{}}}],["th",{"_index":1582,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["thanks",{"_index":1701,"title":{},"body":{"index.html":{}}}],["things",{"_index":1291,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["this._apisyncmachinemodel.find",{"_index":288,"title":{},"body":{"injectables/ApiSyncMachinesService.html":{}}}],["this._apisyncmachinesservice.getinitialmachines",{"_index":538,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.createfsm.next",{"_index":562,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}}}],["this._appservice.createfsm.subscribe(async",{"_index":401,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.handleips(json.parse(localips",{"_index":513,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.removefsm.next",{"_index":1184,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["this._appservice.removefsm.subscribe",{"_index":406,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.satconnections",{"_index":1149,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["this._appservice.satconnections[id",{"_index":1155,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["this._appservice.satconnections[msg.satellite].statemachines[msg.targetmachine].fsm.state.context[msg.method](msg.output",{"_index":637,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.satconnections[satelliteid].statemachines[config.id",{"_index":405,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.satconnections[satelliteid].statemachines[config.id].fsm.state.context[key",{"_index":1426,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["this._appservice.satconnections[satelliteid].statemachines[machine",{"_index":409,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.satconnections[satelliteid].statemachines[to].fsm.send",{"_index":439,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.satconnections[satelliteid].statemachines[to].fsm.state.context[key",{"_index":458,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.satconnections[satelliteid].statemachines[to].fsm.state.context[method",{"_index":444,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.satconnections[satelliteid].stream.write",{"_index":424,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.satconnections[satid",{"_index":603,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.satconnections[satinformation._id",{"_index":532,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.satconnections[satinformation._id].receievedresponse",{"_index":571,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.sendtoapi",{"_index":427,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.sendtoapi.next",{"_index":1187,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["this._appservice.sendtosat$.next",{"_index":1170,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["this._appservice.setupstatemachine(config",{"_index":404,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.triggercontext",{"_index":440,"title":{},"body":{"controllers/AppController.html":{}}}],["this._appservice.triggercontext.next",{"_index":1191,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["this._httpservice.post('http://localhost:3001/digital",{"_index":506,"title":{},"body":{"controllers/AppController.html":{}}}],["this._mergedefaultconfigwithcustom(apimachines",{"_index":542,"title":{},"body":{"controllers/AppController.html":{}}}],["this._mergedefaultconfigwithcustom(satmachines",{"_index":544,"title":{},"body":{"controllers/AppController.html":{}}}],["this._mergedefaultconfigwithcustom(sattasks",{"_index":546,"title":{},"body":{"controllers/AppController.html":{}}}],["this._samplesservice.checkupstreamoutputs(sampleid",{"_index":834,"title":{},"body":{"injectables/AppService.html":{}}}],["this._satellitemachinemodel.find",{"_index":1221,"title":{},"body":{"injectables/SatelliteMachineService.html":{}}}],["this._satellitemachineservice.getinitialmachines",{"_index":539,"title":{},"body":{"controllers/AppController.html":{}}}],["this._satelliteservice.canlink(jwt",{"_index":865,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._satelliteservice.getbytoken(jwt",{"_index":472,"title":{},"body":{"controllers/AppController.html":{}}}],["this._satelliteservice.updateconnectedstatus(satid",{"_index":595,"title":{},"body":{"controllers/AppController.html":{}}}],["this._satelliteservice.updateconnectedstatus(satinformation._id",{"_index":483,"title":{},"body":{"controllers/AppController.html":{}}}],["this._satelliteservice.updatetime(satid",{"_index":594,"title":{},"body":{"controllers/AppController.html":{}}}],["this._satellitetaskmodel.find",{"_index":1347,"title":{},"body":{"injectables/SatelliteTasksService.html":{}}}],["this._satellitetasksservice.getinitialtasks",{"_index":540,"title":{},"body":{"controllers/AppController.html":{}}}],["this._statemachineservice.createstatemachine(states",{"_index":845,"title":{},"body":{"injectables/AppService.html":{}}}],["this._statemachineservice.dbstream$.subscribe((msg",{"_index":760,"title":{},"body":{"injectables/AppService.html":{}}}],["this._statemachineservice.satstream$).pipe",{"_index":417,"title":{},"body":{"controllers/AppController.html":{}}}],["this._statemachineservice.storevalue",{"_index":454,"title":{},"body":{"controllers/AppController.html":{}}}],["this._subdomainservice.getbysatid(satid",{"_index":498,"title":{},"body":{"controllers/AppController.html":{}}}],["this._subdomainservice.getdevinfo",{"_index":487,"title":{},"body":{"controllers/AppController.html":{}}}],["this._tasksqueueservice.getbysatid(satid",{"_index":785,"title":{},"body":{"injectables/AppService.html":{}}}],["this.authservice.verify(jwt",{"_index":864,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.cwlmodel.findone",{"_index":906,"title":{},"body":{"injectables/CWLService.html":{}}}],["this.getbyid(taskid",{"_index":1565,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["this.labmodel.findone",{"_index":999,"title":{},"body":{"injectables/LabService.html":{}}}],["this.labmodel.updateone",{"_index":1000,"title":{},"body":{"injectables/LabService.html":{}}}],["this.processmessagesfrommainservice(msg.target",{"_index":582,"title":{},"body":{"controllers/AppController.html":{}}}],["this.runkeepalivetimer(newconnection",{"_index":528,"title":{},"body":{"controllers/AppController.html":{}}}],["this.sampleservice.updateprogress(preview",{"_index":1577,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["this.satconnections[key",{"_index":780,"title":{},"body":{"injectables/AppService.html":{}}}],["this.satellitemodel.find",{"_index":1317,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["this.satellitemodel.findbyid(_id",{"_index":1296,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["this.satellitemodel.findbyidandupdate(satellite._id",{"_index":1288,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["this.satellitemodel.findbyidandupdate(satid",{"_index":1320,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["this.satellitemodel.findone",{"_index":1281,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["this.satellitemodel.findoneandupdate",{"_index":1293,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["this.satellitemodel.updateone",{"_index":1279,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["this.satstream$.next",{"_index":1423,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["this.sendevent$.next",{"_index":1422,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["this.servicetagmodel.findone",{"_index":1535,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["this.storevalue$.next",{"_index":1425,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["this.subdomainmodel.findone",{"_index":1489,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["this.subdomainmodel.findoneandupdate",{"_index":1490,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["this.tasksqueuemodel.find",{"_index":1536,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["this.tasksqueuemodel.findbyid(_id).exec",{"_index":1549,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["this.tasksqueuemodel.findbyid(task_id",{"_index":1557,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["this.tasksqueuemodel.findbyid(task_id).exec",{"_index":1542,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["this.tasksqueuemodel.findbyidandupdate(task_id",{"_index":1564,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["this.tasksqueuemodel.findbyidandupdate(taskid",{"_index":1573,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["this.tasksqueuemodel.findone",{"_index":1583,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["throw",{"_index":445,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthGuard.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["throwerror",{"_index":958,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["throwerror(exception.geterror",{"_index":964,"title":{},"body":{"classes/ExceptionFilter.html":{}}}],["throws",{"_index":462,"title":{},"body":{"controllers/AppController.html":{},"classes/ExceptionFilter.html":{}}}],["till",{"_index":1273,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["time",{"_index":224,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"controllers/AppController.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{}}}],["timems",{"_index":1316,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["timer",{"_index":326,"title":{},"body":{"controllers/AppController.html":{}}}],["timetoexpire",{"_index":591,"title":{},"body":{"controllers/AppController.html":{},"injectables/SatelliteService.html":{}}}],["tmp",{"_index":619,"title":{},"body":{"controllers/AppController.html":{}}}],["tmp_inputs",{"_index":928,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{}}}],["todo",{"_index":122,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"guards/AuthGuard.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["token",{"_index":234,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{},"injectables/SubDomainService.html":{}}}],["touch",{"_index":1711,"title":{},"body":{"index.html":{}}}],["toupdate",{"_index":1571,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["transition",{"_index":745,"title":{},"body":{"injectables/AppService.html":{},"injectables/StateMachinesService.html":{}}}],["transitions",{"_index":131,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"classes/ApiSyncMachine.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"classes/MachineCommand.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/Type.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["transitions[k]).call(this",{"_index":1451,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["trees",{"_index":34,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["trees.length",{"_index":1168,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["trigger",{"_index":441,"title":{},"body":{"controllers/AppController.html":{},"controllers/SatInterfaceController.html":{}}}],["triggercontext",{"_index":722,"title":{"interfaces/TriggerContext.html":{}},"body":{"injectables/AppService.html":{},"interfaces/ProcessedStateMachine.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SendEvent.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"coverage.html":{}}}],["triggercontext(@param('satid",{"_index":1188,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["triggercontext(satid",{"_index":1137,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["triggered",{"_index":1140,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["true",{"_index":59,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["try",{"_index":407,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/LabService.html":{},"controllers/SatInterfaceController.html":{},"injectables/SatelliteService.html":{},"injectables/StateMachinesService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":1716,"title":{},"body":{"index.html":{}}}],["two",{"_index":1269,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["twoweeksms",{"_index":1311,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["type",{"_index":115,"title":{"classes/Type.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"classes/AbsoluteUrlSettings.html":{},"classes/ApiSyncMachine.html":{},"injectables/ApiSyncMachinesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CWL.html":{},"injectables/CWLService.html":{},"classes/Config.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Date-2.html":{},"interfaces/DependencyTree.html":{},"classes/Description.html":{},"classes/ExceptionFilter.html":{},"interfaces/FileFromClient.html":{},"classes/Lab.html":{},"injectables/LabService.html":{},"interfaces/LocalFiles.html":{},"classes/MachineCommand.html":{},"interfaces/MessageToSatellite.html":{},"classes/Metadata.html":{},"classes/OnOptions.html":{},"interfaces/OptionTypes.html":{},"classes/Options.html":{},"interfaces/Output.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Sample.html":{},"controllers/SatInterfaceController.html":{},"classes/Satellite.html":{},"interfaces/SatelliteConnection.html":{},"classes/SatelliteMachine.html":{},"injectables/SatelliteMachineService.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"classes/SatelliteTask.html":{},"injectables/SatelliteTasksService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"classes/ServiceTag.html":{},"interfaces/StartOptions.html":{},"classes/State.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"classes/StateOptions.html":{},"interfaces/StoreKey.html":{},"classes/SubDomain.html":{},"injectables/SubDomainService.html":{},"classes/TasksQueue.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"classes/Type.html":{},"classes/UnProcessedStateMachine.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{},"classes/git.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1731,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1414,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["typescript",{"_index":1681,"title":{},"body":{"index.html":{}}}],["unassigned",{"_index":228,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{}}}],["unique",{"_index":1240,"title":{},"body":{"injectables/SatelliteService.html":{},"injectables/SubDomainService.html":{}}}],["unit",{"_index":1692,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":746,"title":{},"body":{"injectables/AppService.html":{},"injectables/LabService.html":{},"injectables/SatelliteService.html":{}}}],["unlicensed",{"_index":1730,"title":{},"body":{"properties.html":{}}}],["unprocessedstatemachine",{"_index":1051,"title":{"classes/UnProcessedStateMachine.html":{}},"body":{"classes/OnOptions.html":{},"classes/SatelliteMachine.html":{},"classes/StateOptions.html":{},"classes/UnProcessedStateMachine.html":{},"coverage.html":{}}}],["unprocessedstatemachineoptions",{"_index":43,"title":{"interfaces/UnProcessedStateMachineOptions.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["unused",{"_index":1485,"title":{},"body":{"injectables/SubDomainService.html":{}}}],["uo",{"_index":1159,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["upaction",{"_index":647,"title":{},"body":{"controllers/AppController.html":{}}}],["upaction(message",{"_index":653,"title":{},"body":{"controllers/AppController.html":{}}}],["update",{"_index":599,"title":{},"body":{"controllers/AppController.html":{},"injectables/LabService.html":{},"injectables/SatelliteService.html":{},"injectables/StateMachinesService.html":{},"injectables/TasksQueueService.html":{}}}],["update(task_id",{"_index":1521,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["updateconnectedstatus",{"_index":1227,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updateconnectedstatus(satid",{"_index":1245,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updated",{"_index":654,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/SatelliteService.html":{}}}],["updated.push(machine",{"_index":660,"title":{},"body":{"controllers/AppController.html":{}}}],["updatedactions",{"_index":1432,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedactions[k",{"_index":1435,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedconfig",{"_index":1403,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedconfig.context",{"_index":1444,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedcontext",{"_index":1410,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedcontext[k",{"_index":1416,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedguards",{"_index":1439,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedguards[k",{"_index":1442,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedinfo",{"_index":1522,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["updatedinfotasksqueue",{"_index":1531,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["updatedobject",{"_index":993,"title":{},"body":{"injectables/LabService.html":{},"injectables/SatelliteService.html":{}}}],["updatedoptions",{"_index":1402,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedoptions.actions",{"_index":1433,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedoptions.guards",{"_index":1440,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedownloadprogress",{"_index":1500,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["updatedownloadprogress(taskid",{"_index":1525,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["updatedpayload",{"_index":1558,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["updatedpayload.set(key",{"_index":1560,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["updatedremote",{"_index":1301,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updatedremote.moduleid",{"_index":1302,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updatedremote.path",{"_index":1303,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updatedremotes",{"_index":1299,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updatedremotes.push",{"_index":1305,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updatedtransitions",{"_index":1447,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedtransitions[k",{"_index":1449,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedtransitions[state.value",{"_index":1457,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedtransitions[state.value](state",{"_index":1458,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updateips",{"_index":1228,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updateips(satid",{"_index":1253,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updatelocalfiles",{"_index":1229,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updatelocalfiles(_id",{"_index":1260,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updatenewabsoluteurl",{"_index":1230,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updatenewabsoluteurl(satid",{"_index":1262,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updateone",{"_index":987,"title":{},"body":{"injectables/LabService.html":{},"injectables/SatelliteService.html":{}}}],["updateone(_id",{"_index":992,"title":{},"body":{"injectables/LabService.html":{},"injectables/SatelliteService.html":{}}}],["updates",{"_index":1247,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updatetime",{"_index":1231,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updatetime(_id",{"_index":1266,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updateversion",{"_index":1232,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["updateversion(_id",{"_index":1275,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["upserted",{"_index":996,"title":{},"body":{"injectables/LabService.html":{},"injectables/SatelliteService.html":{}}}],["upstream",{"_index":148,"title":{},"body":{"interfaces/APISyncService.html":{},"classes/CWL.html":{},"classes/Date.html":{},"classes/Date-1.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/Sample.html":{},"classes/git.html":{}}}],["upstreamready",{"_index":833,"title":{},"body":{"injectables/AppService.html":{}}}],["upstreams",{"_index":831,"title":{},"body":{"injectables/AppService.html":{}}}],["uri",{"_index":713,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":886,"title":{},"body":{"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/git.html":{}}}],["urls",{"_index":508,"title":{},"body":{"controllers/AppController.html":{}}}],["use",{"_index":56,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"controllers/SatInterfaceController.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["used",{"_index":78,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/APISyncStateMachineObject.html":{},"controllers/AppController.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"injectables/SatelliteService.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["usefactory",{"_index":712,"title":{},"body":{"modules/AppModule.html":{}}}],["usefilters",{"_index":335,"title":{},"body":{"controllers/AppController.html":{}}}],["usefilters(exceptionfilter",{"_index":461,"title":{},"body":{"controllers/AppController.html":{}}}],["usefilters(exceptionfilter)@grpcstreamcall('apisyncservice",{"_index":304,"title":{},"body":{"controllers/AppController.html":{}}}],["usefindandmodify",{"_index":1289,"title":{},"body":{"injectables/SatelliteService.html":{},"injectables/SubDomainService.html":{},"injectables/TasksQueueService.html":{}}}],["useguards",{"_index":336,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(authguard",{"_index":459,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(authguard)@usefilters(exceptionfilter)@grpcstreamcall('apisyncservice",{"_index":333,"title":{},"body":{"controllers/AppController.html":{}}}],["userid",{"_index":921,"title":{},"body":{"classes/Date-1.html":{},"classes/Sample.html":{}}}],["utf",{"_index":767,"title":{},"body":{"injectables/AppService.html":{}}}],["uuid",{"_index":1146,"title":{},"body":{"controllers/SatInterfaceController.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":1145,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["v4",{"_index":1144,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["value",{"_index":456,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/SendEvent.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"injectables/TasksQueueService.html":{},"interfaces/TriggerContext.html":{},"miscellaneous/variables.html":{}}}],["value.includes('func",{"_index":1415,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["value.replace('func",{"_index":1418,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["variable",{"_index":91,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["variables",{"_index":1743,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification",{"_index":862,"title":{},"body":{"guards/AuthGuard.html":{}}}],["verifying",{"_index":854,"title":{},"body":{"guards/AuthGuard.html":{}}}],["version",{"_index":215,"title":{},"body":{"classes/AbsoluteUrlSettings.html":{},"classes/CWL.html":{},"classes/Date.html":{},"classes/Description.html":{},"classes/Metadata.html":{},"classes/PublicInformation.html":{},"interfaces/RemoteModule.html":{},"classes/Satellite.html":{},"injectables/SatelliteService.html":{},"classes/git.html":{},"properties.html":{}}}],["void",{"_index":71,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SendEvent.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["w",{"_index":626,"title":{},"body":{"controllers/AppController.html":{}}}],["waiting",{"_index":793,"title":{},"body":{"injectables/AppService.html":{}}}],["waitingmachines",{"_index":794,"title":{},"body":{"injectables/AppService.html":{}}}],["waitingmachines.length",{"_index":800,"title":{},"body":{"injectables/AppService.html":{}}}],["want",{"_index":1292,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["watch",{"_index":89,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"index.html":{}}}],["watch_array",{"_index":93,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["way",{"_index":530,"title":{},"body":{"controllers/AppController.html":{},"injectables/SatelliteService.html":{}}}],["website",{"_index":1714,"title":{},"body":{"index.html":{}}}],["weeks",{"_index":1270,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["whether",{"_index":1250,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["without",{"_index":387,"title":{},"body":{"controllers/AppController.html":{}}}],["won't",{"_index":1121,"title":{},"body":{"controllers/SatInterfaceController.html":{}}}],["working",{"_index":493,"title":{},"body":{"controllers/AppController.html":{}}}],["works",{"_index":531,"title":{},"body":{"controllers/AppController.html":{}}}],["write",{"_index":100,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CreateAPIMachine.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["writestream",{"_index":627,"title":{},"body":{"controllers/AppController.html":{}}}],["writestream.write(msg.file",{"_index":629,"title":{},"body":{"controllers/AppController.html":{}}}],["wrong",{"_index":1548,"title":{},"body":{"injectables/TasksQueueService.html":{}}}],["xstate",{"_index":159,"title":{},"body":{"interfaces/APISyncStateMachineObject.html":{},"interfaces/LocalFiles.html":{},"interfaces/MessageToSatellite.html":{},"interfaces/ProcessedStateMachine.html":{},"interfaces/SatelliteConnection.html":{},"interfaces/SciDapDuplexStream.html":{},"interfaces/SendEvent.html":{},"injectables/StateMachinesService.html":{},"interfaces/StoreKey.html":{},"interfaces/TriggerContext.html":{},"dependencies.html":{}}}],["yes",{"_index":1251,"title":{},"body":{"injectables/SatelliteService.html":{}}}],["you'd",{"_index":1706,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":687,"title":{},"body":{"modules/AppModule.html":{},"modules/MongoConnectionModule.html":{},"modules/StateMachineModules.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/APISyncComplete.html":{"url":"interfaces/APISyncComplete.html","title":"interface - APISyncComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  APISyncComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/interfaces/apiSync.interface.ts:144\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    /** Target machine on API Sync */\n    apimachine?: string;\n    /** Method for stdout */\n    outresponse?: string;\n    /** Method for stderr maybe we don't use this. Only set error to true */\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    /** used for testing */\n    keepscript?: boolean;\n    /** Always use args as an array of strings instead of a string */\n    args?: string[];\n    /** Always use interpreter_args as an array of strings instead of a string */\n    interpreter_args?: string[];\n    /** Always use a number for max_memory_restart */\n    max_memory_restart?: number;\n    /** */\n    watch?: boolean;\n    /** We can't set a variable field so if watch array is set we use it instead of watch */\n    watch_array?: string[];\n\n    /** \n     * We can't set a gRPC field to any so we need to stringify them on API sync \n     * and parse them on the satellite */\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/APISyncMessage.html":{"url":"interfaces/APISyncMessage.html","title":"interface - APISyncMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  APISyncMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            commands\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            keepalive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            satelliteid\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            taskId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tasks\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trees\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commands\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commands:         ServiceCommand[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ServiceCommand[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepalive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keepalive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        satelliteid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        satelliteid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taskId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        taskId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tasks:         SatelliteTask[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SatelliteTask[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trees\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trees:         DependencyTree[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DependencyTree[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    /** Target machine on API Sync */\n    apimachine?: string;\n    /** Method for stdout */\n    outresponse?: string;\n    /** Method for stderr maybe we don't use this. Only set error to true */\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    /** used for testing */\n    keepscript?: boolean;\n    /** Always use args as an array of strings instead of a string */\n    args?: string[];\n    /** Always use interpreter_args as an array of strings instead of a string */\n    interpreter_args?: string[];\n    /** Always use a number for max_memory_restart */\n    max_memory_restart?: number;\n    /** */\n    watch?: boolean;\n    /** We can't set a variable field so if watch array is set we use it instead of watch */\n    watch_array?: string[];\n\n    /** \n     * We can't set a gRPC field to any so we need to stringify them on API sync \n     * and parse them on the satellite */\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/APISyncService.html":{"url":"interfaces/APISyncService.html","title":"interface - APISyncService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  APISyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        commandStream\n                                    \n                                \n                                \n                                    \n                                        fileStream\n                                    \n                                \n                                \n                                    \n                                        streamQueue\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        commandStream\n                        \n                    \n                \n            \n            \n                \ncommandStream(upstream: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/apiSync.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    upstream\n                                    \n                                                Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileStream\n                        \n                    \n                \n            \n            \n                \nfileStream(upstream: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/apiSync.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    upstream\n                                    \n                                                Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamQueue\n                        \n                    \n                \n            \n            \n                \nstreamQueue(upstream: Observable, metadata: Metadata)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/apiSync.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    upstream\n                                    \n                                                Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                                Metadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    /** Target machine on API Sync */\n    apimachine?: string;\n    /** Method for stdout */\n    outresponse?: string;\n    /** Method for stderr maybe we don't use this. Only set error to true */\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    /** used for testing */\n    keepscript?: boolean;\n    /** Always use args as an array of strings instead of a string */\n    args?: string[];\n    /** Always use interpreter_args as an array of strings instead of a string */\n    interpreter_args?: string[];\n    /** Always use a number for max_memory_restart */\n    max_memory_restart?: number;\n    /** */\n    watch?: boolean;\n    /** We can't set a variable field so if watch array is set we use it instead of watch */\n    watch_array?: string[];\n\n    /** \n     * We can't set a gRPC field to any so we need to stringify them on API sync \n     * and parse them on the satellite */\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/APISyncStateMachineObject.html":{"url":"interfaces/APISyncStateMachineObject.html","title":"interface - APISyncStateMachineObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  APISyncStateMachineObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/connection.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fsm\n                                        \n                                \n                                \n                                        \n                                            logger\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fsm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fsm:     Interpreter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Interpreter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logger:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ClientDuplexStream, Metadata } from \"grpc\";\nimport { Satellite } from \"../mongoConnection/schemas/satellite.schema\";\nimport { Interpreter } from \"xstate\";\n\nimport { APISyncMessage, SatelliteMessage } from \".\";\n\n/**\n * representation of a satellites connection to the server\n */\nexport interface SatelliteConnection {\n    connected: boolean;\n    stream: SciDapDuplexStream;\n    stateMachines: { [key: string]: APISyncStateMachineObject };\n    tasks: string[];\n    priorityTasks: string[];\n    maxTasks: number;\n    satInformation: Satellite;\n    keepAliveTimer?: NodeJS.Timeout;\n    keepAlivePingTimer?: NodeJS.Timeout;\n    /** used for testing */\n    receievedResponse?: boolean;\n}\n\nexport interface APISyncStateMachineObject {\n    fsm: Interpreter;\n    logger: any;\n}\n\nexport interface SciDapDuplexStream extends ClientDuplexStream {\n    metadata: Metadata;\n}\n\nexport interface MessageToSatellite extends APISyncMessage {\n    satelliteId: string;\n}\n\nexport interface LocalFiles {\n    show: boolean;\n    collection: {\n        name: string;\n        path: string;\n    }[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbsoluteUrlSettings.html":{"url":"classes/AbsoluteUrlSettings.html","title":"class - AbsoluteUrlSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbsoluteUrlSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/satellite.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                cert\n                            \n                            \n                                    Optional\n                                fixedIp\n                            \n                            \n                                inactiveTimerMS\n                            \n                            \n                                    Optional\n                                key\n                            \n                            \n                                origin\n                            \n                            \n                                    Optional\n                                providedCerts\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        cert\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        fixedIp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inactiveTimerMS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        origin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        providedCerts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SatelliteDocument = Satellite & Document;\n\ninterface RemoteModule {\n    moduleId: string;\n    path: string;\n}\nclass PublicInformation {\n    @Prop()\n    publicData: boolean;\n\n    @Prop()\n    connected: boolean;\n\n    @Prop()\n    domain: string;\n\n    @Prop()\n    common_project_id: string;\n\n    @Prop({ type: Object })\n    remoteModules: RemoteModule[];\n\n    @Prop()\n    absoluteUrl: string;\n\n    @Prop()\n    localip: string;\n\n    @Prop()\n    port: string;\n\n    @Prop()\n    version?: string;\n\n    @Prop()\n    newAbsoluteUrl?: string;\n\n    @Prop()\n    expiry_time_ms: number;\n\n    @Prop()\n    ownerProvidedUrl?: string;\n\n    @Prop()\n    maxSimultaneousTasks?: number;\n\n    @Prop()\n    publicIp?: string;\n}\n\nclass AbsoluteUrlSettings {\n    @Prop()\n    origin: string; // automatic, fixed, owner\n\n    @Prop()\n    inactiveTimerMS: number; // Time in MS before Satellite gets unassigned\n\n    @Prop()\n    providedCerts?: boolean; // Does the owner provide their own certs\n\n    @Prop()\n    key?: string;\n\n    @Prop()\n    cert?: string;\n\n    @Prop()\n    fixedIp?: boolean;\n}\n\n\n@Schema({ collection: 'satellites' })\nexport class Satellite {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    labId: string;\n\n    @Prop()\n    type: string;\n\n    @Prop({ type: Object })\n    public: PublicInformation;\n\n    @Prop()\n    token: string;\n\n    @Prop({ type: Object })\n    auth: any;\n\n    @Prop({ type: Object })\n    sync: any;\n\n    @Prop({ type: Object })\n    absoluteUrlSettings: AbsoluteUrlSettings;\n\n    @Prop({ type: Object })\n    satMachines: any;\n\n    @Prop({ type: Object })\n    satTasks: any;\n\n    @Prop({ type: Object })\n    apiMachines: any;\n\n    @Prop()\n    scidapHome: string;\n\n    @Prop({ type: Array })\n    configOverwrites: any[];\n}\n\nexport const SatelliteSchema = SchemaFactory.createForClass(Satellite);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiSyncMachine.html":{"url":"classes/ApiSyncMachine.html","title":"class - ApiSyncMachine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiSyncMachine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/apiSyncMachines.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                applyTo\n                            \n                            \n                                    Optional\n                                commands\n                            \n                            \n                                config\n                            \n                            \n                                inUse\n                            \n                            \n                                options\n                            \n                            \n                                transitions\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        commands\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MachineCommand[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Config\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inUse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Options\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transitions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, of: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:91\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type ApiSyncMachineDocument = ApiSyncMachine & Document;\n\nclass Type {\n    @Prop()\n    target?: string;\n\n    @Prop()\n    cond?: string;\n\n    @Prop()\n    actions?: string[];\n}\n\nclass State {\n    @Prop()\n    entry?: string[];\n\n    @Prop()\n    exit?: string[];\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Config {\n    @Prop()\n    id: string;\n\n    @Prop()\n    initial: string;\n\n    @Prop({type: Object})\n    context: {\n        [key: string]: any;\n    };\n\n    @Prop({type: Object, of: State})\n    states: {\n        [key: string]: State;\n    }\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Options {\n    @Prop({type: Object, of: String})\n    actions?: {\n        [key: string]: string;\n    }\n\n    @Prop({type: Object, of: String})\n    guards?: {\n        [key: string]: string;\n    }\n}\n\nexport class MachineCommand {\n    @Prop()\n    target: string;\n\n    @Prop()\n    label: string;\n\n    @Prop()\n    args?: string;\n\n    @Prop()\n    style?: string;\n}\n\n@Schema({ collection: 'api_sync_machines', minimize: false })\nexport class ApiSyncMachine {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    applyTo: string[];\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    type: string;\n\n    @Prop()\n    commands?: MachineCommand[];\n\n    @Prop()\n    config: Config;\n    \n    @Prop()\n    options: Options;\n\n    @Prop({type: Object, of: String})\n    transitions: {\n        [key: string]: string;\n    };\n}\n\nexport const ApiSyncMachineSchema = SchemaFactory.createForClass(ApiSyncMachine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiSyncMachinesService.html":{"url":"injectables/ApiSyncMachinesService.html","title":"injectable - ApiSyncMachinesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiSyncMachinesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/apiSyncMachines.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getInitialMachines\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_apiSyncMachineModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/mongoConnection/apiSyncMachines.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _apiSyncMachineModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getInitialMachines\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitialMachines()\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/apiSyncMachines.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\nimport { ApiSyncMachine, ApiSyncMachineDocument } from './schemas/apiSyncMachines.schema';\n\n@Injectable()\nexport class ApiSyncMachinesService {\n    constructor(\n        @InjectModel(ApiSyncMachine.name)\n        private _apiSyncMachineModel: Model,\n    ) {}\n\n    async getInitialMachines(): Promise {\n        return await (await this._apiSyncMachineModel.find({ inUse: true }).exec()).map((d) => d.toObject());\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _mergeDefaultConfigWithCustom\n                            \n                            \n                                    Async\n                                commandStream\n                            \n                            \n                                    Async\n                                fileUpload\n                            \n                            \n                                processMessagesFromMainService\n                            \n                            \n                                runKeepAliveTimer\n                            \n                            \n                                    Async\n                                streamQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _mergeDefaultConfigWithCustom\n                        \n                    \n                \n            \n            \n                \n                    \n                    _mergeDefaultConfigWithCustom(machines: any[], customList: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app.controller.ts:363\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    machines\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    customList\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        commandStream\n                        \n                    \n                \n            \n            \n                \n                    \n                    commandStream(requestStream, callback)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(ExceptionFilter)@GrpcStreamCall('APISyncService', 'CommandStream')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:326\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestStream\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fileUpload\n                        \n                    \n                \n            \n            \n                \n                    \n                    fileUpload(requestStream, callback)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(ExceptionFilter)@GrpcStreamCall('APISyncService', 'FileStream')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:299\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestStream\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processMessagesFromMainService\n                        \n                    \n                \n            \n            \n                \nprocessMessagesFromMainService(target: string, action: string, message: string, satConnection: SatelliteConnection)\n                \n            \n\n\n            \n                \n                    Defined in src/app.controller.ts:349\n                \n            \n\n\n            \n                \n                    Processes a single message from Satellite by sending it to a relevant State Machine\n on API-Sync\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the service to send to\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the action to run\n\n                                    \n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Arguments to send to the function\n\n                                    \n                                \n                                \n                                    satConnection\n                                    \n                                                SatelliteConnection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Information about the Satellite Connection\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runKeepAliveTimer\n                        \n                    \n                \n            \n            \n                \nrunKeepAliveTimer(satConnection: SatelliteConnection)\n                \n            \n\n\n            \n                \n                    Defined in src/app.controller.ts:287\n                \n            \n\n\n            \n                \n                    This function runs a timer that if it isn't called in that time it breaks the connection and restarts it\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    satConnection\n                                    \n                                                SatelliteConnection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Connection to the given satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        streamQueue\n                        \n                    \n                \n            \n            \n                \n                    \n                    streamQueue(requestStream: SciDapDuplexStream, metadata: Metadata)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@UseFilters(ExceptionFilter)@GrpcStreamCall('APISyncService', 'StreamQueue')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestStream\n                                    \n                                                SciDapDuplexStream\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                                Metadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseFilters, UseGuards } from '@nestjs/common';\nimport { GrpcStreamCall } from '@nestjs/microservices';\nimport { ConfigService } from '@nestjs/config';\nimport { HttpService } from '@nestjs/axios';\nimport { createWriteStream, rename, promises } from 'fs';\nimport { catchError, filter, tap } from 'rxjs/operators';\nimport { merge, of } from 'rxjs';\nconst path = require('path');\nconst crypto = require(\"crypto\");\nconst fs = require('fs');\n\nimport { AuthGuard } from './app.guard';\nimport { AppService } from './app.service';\nimport { ExceptionFilter } from './rpc-connection.filter';\nimport { StateMachinesService } from './stateMachines/stateMachines.service';\nimport { SatelliteService } from './mongoConnection/satellite.service';\nimport { SubDomainService } from './mongoConnection/subDomain.service';\nimport { ApiSyncMachinesService } from './mongoConnection/apiSyncMachines.service';\n\nimport { MessageToSatellite, SatelliteConnection, SatelliteMessage, SatelliteOutput, SciDapDuplexStream } from './interfaces';\nimport Log from './lib/logger';\nimport { Metadata } from 'grpc';\nimport { SatelliteMachineService } from './mongoConnection/satelliteMachines.service';\nimport { SatelliteTasksService } from './mongoConnection/satelliteTasks.service';\n\nconst fsPromises = fs.promises;\nconst pingTimer = 30000; // Every 30s it will send a ping\nconst pingKillTimer = 60000; // If 1 minute goes by without a response it will close the connection\n\n@Controller()\nexport class AppController {\n    // Stores Satellite Connections by Id\n\n    constructor(\n        private _appService: AppService,\n        private _stateMachineService: StateMachinesService,\n        private _satelliteService: SatelliteService,\n        private _subDomainService: SubDomainService,\n        private _httpService: HttpService,\n        private _configService: ConfigService,\n        private _apiSyncMachinesService: ApiSyncMachinesService,\n        private _satelliteMachineService: SatelliteMachineService,\n        private _satelliteTasksService: SatelliteTasksService,\n        ) {\n        // Create a state machine on API-Sync relevant to a Satellite\n        this._appService.createFSM.subscribe(async ({ config, options, transitions, satelliteId, callback }) => {\n            if (!satelliteId) satelliteId = 'test_satellite';\n            const { interpreted, logger } = await this._appService.setupStateMachine(config, options, transitions, satelliteId);\n            this._appService.satConnections[satelliteId].stateMachines[config.id] = { fsm: interpreted, logger };\n            if (callback) {\n                callback();\n            }\n        });\n\n        this._appService.removeFSM.subscribe(({ machine, satelliteId, callback }) => {\n            if (!satelliteId) satelliteId = 'test_satellite';\n            try {\n                delete this._appService.satConnections[satelliteId].stateMachines[machine];\n                if (callback) {\n                    callback(null);\n                }\n            } catch (err) {\n                const message = `Error removing ${machine} from ${satelliteId}: ${err}`;\n                Log.error(message);\n                if (callback) {\n                    callback(message);\n                }\n            }\n        });\n\n        merge(this._appService.sendToSat$, this._stateMachineService.satStream$).pipe(\n            tap((m) => Log.info(`Sending ${!!m.trees?.length ? 'Trees' : ''} ${!!m.tasks?.length ? 'Tasks' : ''} to ${m.satelliteid}`)),\n        ).subscribe((message) => {\n            let { satelliteid, trees, tasks, commands } = message;\n            if (!satelliteid) satelliteid = 'test_satellite';\n            try {\n                this._appService.satConnections[satelliteid].stream.write({ tasks, trees, commands });\n            } catch (err) {\n                Log.error(`Failed to send message to ${satelliteid}: ${err}`);\n            }\n        });\n\n        merge(this._stateMachineService.sendEvent$, this._appService.sendToAPI)\n            .pipe(\n                tap(({ to, type, delay, satelliteId }) => Log.info(`${satelliteId} is attempting to send ${type} to ${to} ${!delay ? '' : `with ${delay}ms delay`}`)),\n                filter(({ to, satelliteId }) => Object.keys(this._appService.satConnections[satelliteId].stateMachines).includes(to)),\n            )\n            .subscribe(async ({ to, type, delay, satelliteId }) => {\n                if (delay) {\n                    await new Promise((r) => setTimeout(() => r(true), delay));\n                    Log.info(`${satelliteId} is sending ${type} to ${to}`);\n                    this._appService.satConnections[satelliteId].stateMachines[to].fsm.send({ type });\n                } else {\n                    Log.info(`${satelliteId} is sending ${type} to ${to}`);\n                    this._appService.satConnections[satelliteId].stateMachines[to].fsm.send({ type });\n                }\n            });\n        \n        this._appService.triggerContext\n            .pipe(\n                tap(({ to, satelliteId, method }) => Log.info(`${satelliteId} is attempting to trigger ${method} on ${to}`)),\n            )\n            .subscribe(async ({ to, satelliteId, method, callback, args }) => {\n                const err: string = await new Promise((resolve) => {\n                    try {\n                        const func = this._appService.satConnections[satelliteId].stateMachines[to].fsm.state.context[method];\n                        if (!func) throw new Error(`${method} not found`);\n                        func(args);\n                        resolve(null);\n                    } catch (err) {\n                        const msg = `Error running ${method} on ${satelliteId}-${to}: ${err}`;\n                        resolve(msg);\n                    }\n                });\n                if (callback) {\n                    callback(err);\n                }\n            });\n\n        this._stateMachineService.storeValue$\n            .pipe(\n                tap(({ to, key, satelliteId }) => Log.info(`${satelliteId} is attempting to store ${key} on ${to}`)),\n                filter(({ to, satelliteId }) => Object.keys(this._appService.satConnections[satelliteId].stateMachines).includes(to)),\n            )\n            .subscribe(async ({ to, key, value, satelliteId }) => {\n                Log.info(`${satelliteId} is storing ${key} on ${to}`);\n                this._appService.satConnections[satelliteId].stateMachines[to].fsm.state.context[key] = value;\n            });\n\n    }\n\n    @UseGuards(AuthGuard) // Guards the route\n    @UseFilters(ExceptionFilter) // Throws exceptions when auth fails\n    @GrpcStreamCall('APISyncService', 'StreamQueue')\n    async streamQueue(requestStream: SciDapDuplexStream, metadata: Metadata) {\n        const jwt = requestStream.metadata.get('jwt')[0];\n        // const localIps = requestStream.metadata.get('ips')[0]; // Still need to be parsed\n        const satInformation = await this._satelliteService.getByToken(jwt);\n        Log.info(`Connection to Satellite ${satInformation._id} Open`);\n\n        const publicIP = requestStream.getPeer();\n        Log.info(`External IP address: ${publicIP}`);\n        // Log.info(`Local IPs ${JSON.parse(localIps)}`);\n        if (!await this._satelliteService.updateConnectedStatus(satInformation._id, true, publicIP)) {\n            requestStream.end();\n        }\n\n        // let key: string, cert: string;\n        // // if (process.env.API_ENV === 'local') {\n        // //     const response = await this._subDomainService.getDevInfo();\n        // //     const { certs } = response;\n        // //     key = await (await fsPromises.readFile(certs.key)).toString();\n        // //     cert = await (await fsPromises.readFile(certs.cert)).toString();\n        // // } else \n        // if (satInformation.absoluteUrlSettings.providedCerts) {\n        //     key = satInformation.absoluteUrlSettings.key;\n        //     cert = satInformation.absoluteUrlSettings.cert;\n        // } else {\n        //     // If we are working in our local environment we need test certs\n        //     let satId = ['test', 'local'].includes(process.env.API_ENV) ? 'test' : satInformation._id;\n        //     const response = await this._subDomainService.getBySatId(satId);\n        //     const { certs } = response;\n        //     const absKey = path.join(this._configService.get('cert_root'), certs.key);\n        //     const absCert = path.join(this._configService.get('cert_root'), certs.ca);\n        //     key = await (await fsPromises.readFile(absKey)).toString();\n        //     cert = await (await fsPromises.readFile(absCert)).toString();\n\n        //     if (process.env.API_ENV !== 'local') {\n        //         this._httpService.post('http://localhost:3001/digital-ocean-urls', { sat_id: satId, local_ip: localIps }).subscribe((result) => {\n\n        //         }, (err) => {\n        //             console.error(err.message)\n        //         });\n        //         // await this._appService.handleIPs(JSON.parse(localIps), satInformation, response);\n        //     }\n        // }\n\n        const newConnection: SatelliteConnection = {\n            stream: requestStream,\n            stateMachines: {  },\n            connected: true,\n            tasks: [],\n            priorityTasks: [],\n            maxTasks: 1,\n            satInformation,\n        };\n\n        requestStream.write({ keepalive: true });\n        // This starts the interval on which to send pings to the client\n        newConnection.keepAlivePingTimer = setInterval(() => {\n            Log.debug(`Ping Sent ${newConnection.satInformation._id}`);\n            requestStream.write({ keepalive: true });\n        }, pingTimer);\n        // This starts the timer that will check to see if we should end this connection\n        this.runKeepAliveTimer(newConnection);\n\n        // This is for testing, we can change the way all of this works\n        this._appService.satConnections[satInformation._id] = newConnection;\n        Log.debug('Getting Default Configs');\n        const defaultConfig = {\n            apiMachines: [],\n            satMachines: [],\n            satTasks: [],\n        };\n        try {\n            const configOverwrites = satInformation.configOverwrites || [];\n            const apiMachines = await this._apiSyncMachinesService.getInitialMachines();\n            const satMachines = await this._satelliteMachineService.getInitialMachines();\n            const satTasks = await this._satelliteTasksService.getInitialTasks();\n            defaultConfig.apiMachines = this._mergeDefaultConfigWithCustom(apiMachines, configOverwrites);\n            defaultConfig.satMachines = this._mergeDefaultConfigWithCustom(satMachines, configOverwrites);\n            defaultConfig.satTasks = this._mergeDefaultConfigWithCustom(satTasks, configOverwrites);\n        } catch (err) {\n            Log.error(`Failed to get Default Configs: ${err}`);\n        }\n        Log.debug(`Amount of Default API-Machines: ${defaultConfig.apiMachines.length}, Sat-Machines: ${defaultConfig.satMachines.length}, Sat Tasks: ${defaultConfig.satTasks}`);\n        const specificConfig = {\n            apiMachines: !!satInformation.apiMachines ? satInformation.apiMachines : [],\n            satMachines: !!satInformation.satMachines ? satInformation.satMachines : [],\n            satTasks: !!satInformation.satTasks ? satInformation.satTasks : [],\n\n        };\n        Log.debug(`Amount of Specific API-Machines: ${specificConfig.apiMachines.length}, Sat-Machines: ${specificConfig.satMachines.length}, Sat Tasks: ${specificConfig.satTasks}`);\n\n        const apiMachines = [...defaultConfig.apiMachines, ...specificConfig.apiMachines];\n        let counter = 0;\n        for (let machine of apiMachines) {\n            try {\n                await new Promise((resolve) => {\n                    this._appService.createFSM.next({ ...machine, satelliteId: satInformation._id, callback: () => resolve(true) });\n                });\n                Log.debug(`Successfully started ${machine.config?.id} on API`);\n                counter++;\n            } catch (err) {\n                Log.error(`Failed to start ${machine.config?.id}`);\n            }\n        }\n        Log.debug(`Successfully started ${counter} API-Machines`);\n\n        const trees = [...defaultConfig.satMachines, ...specificConfig.satMachines];\n        const tasks = [...defaultConfig.satTasks, ...specificConfig.satTasks];\n        requestStream.write({ tasks, trees, satelliteid: satInformation._id });\n\n        requestStream.on('data', (msg: SatelliteMessage) => {\n            try {\n                if (msg.taskid === 'test') {\n                    this._appService.satConnections[satInformation._id].receievedResponse = true;\n                }\n                // The Senders all need a way to handle communication.\n                //  Potentially each service needs a matching machine on API Sync that handles their information\n                if (msg.sender === 'main_satellite') {\n                    msg.messages.forEach((message) => {\n                        this.processMessagesFromMainService(msg.target, message.action, message.body, newConnection);\n                    });\n                }\n                if (msg.keepalive) {\n                    this.runKeepAliveTimer(newConnection);\n                }\n\n            } catch (err) {\n                Log.error(`Failed to parse message from SATELLITE ID: ${err}`);\n                Log.error(`Message: ${msg}`);\n            }\n        });\n        requestStream.on('end', async () => {\n            clearTimeout(newConnection.keepAliveTimer);\n            clearInterval(newConnection.keepAlivePingTimer);\n            const satId = newConnection.satInformation._id;\n            try {\n                Log.info(`Closing connection to ${satId}`);\n                const timeToExpire = newConnection.satInformation.absoluteUrlSettings.inactiveTimerMS;\n                const expiryDate = await this._satelliteService.updateTime(satId, true, timeToExpire);\n                await this._satelliteService.updateConnectedStatus(satId, false);\n                Log.debug(`${satId} expires on ${expiryDate.toUTCString()}`);\n            } catch (err) {\n                Log.error(`Failed to update Expiry Time: ${err.message}`);\n            } finally {\n                delete this._appService.satConnections[satId];\n            }\n        })\n    }\n\n    /**\n     * This function runs a timer that if it isn't called in that time it breaks the connection and restarts it\n     * @param satConnection Connection to the given satellite\n     */\n    runKeepAliveTimer(satConnection: SatelliteConnection) {\n        clearTimeout(satConnection.keepAliveTimer);\n        satConnection.keepAliveTimer = setTimeout(() => {\n            Log.info(`Did not recieve Keep Alive Ping from ${satConnection.satInformation._id}`);\n            clearInterval(satConnection.keepAlivePingTimer);\n            satConnection.stream.end();\n        }, pingKillTimer);\n    }\n    \n\n    @UseFilters(ExceptionFilter) // Throws exceptions when auth fails\n    @GrpcStreamCall('APISyncService', 'FileStream')\n    async fileUpload(requestStream, callback) {\n        const tempName = crypto.randomBytes(20).toString('hex');\n        let fileName;\n        const tempPath = path.join(__dirname, '/tmp/');\n        const finalPath = path.join(__dirname, '/final/');\n        await promises.mkdir(tempPath, { recursive: true });\n        await promises.mkdir(finalPath, { recursive: true });\n        await promises.open(tempPath + tempName, 'w');\n        const writeStream = createWriteStream(tempPath+ tempName);\n        requestStream.on('data', (msg) => {\n            writeStream.write(msg.file);\n            if (msg.file_name && !fileName) {\n                fileName = msg.file_name\n            }\n        });\n\n        requestStream.on('end', (msg) => {\n            console.log('File Finished');\n            callback(null, { type: 'SERVER', status: 'SUCCESS' });\n            rename(tempPath + tempName, finalPath + fileName, () => {\n                console.log('Success');\n            });\n        });\n    }\n\n    @UseFilters(ExceptionFilter) // Throws exceptions when auth fails\n    @GrpcStreamCall('APISyncService', 'CommandStream')\n    async commandStream(requestStream, callback) {\n        requestStream.on('data', (msg: SatelliteOutput) => {\n            try {\n                this._appService.satConnections[msg.satellite].stateMachines[msg.targetmachine].fsm.state.context[msg.method](msg.output);\n            } catch (err) {\n                Log.error(`${msg.satellite} Failed to Send ${msg.method} message to ${msg.targetmachine}: ${err}`);\n                Log.debug(msg.output);\n            }\n        });\n\n        requestStream.on('end', (msg) => {\n\n        });\n    }\n\n    /**\n     * Processes a single message from Satellite by sending it to a relevant State Machine\n     *  on API-Sync\n     * @param target Name of the service to send to\n     * @param action Name of the action to run\n     * @param message Arguments to send to the function\n     * @param satConnection Information about the Satellite Connection\n     */\n    processMessagesFromMainService(target: string, action: string, message: string, satConnection: SatelliteConnection) {\n        if (!satConnection.stateMachines[target]) {\n            Log.error(`No State Machine named ${target}, failed to send: ${action} - ${message}`);\n            return;\n        }\n        try {\n            // Locate the action in the machine\n            const upAction = action.split('.').reduce((acum, curr) => acum[curr], satConnection.stateMachines[target].fsm) as (arg: string) => void;\n            upAction(message);\n        } catch (err) {\n            Log.error(`Failed to run ${action} in ${target}`);\n        }\n    }\n\n    private _mergeDefaultConfigWithCustom(machines: any[], customList: any[]): any[] {\n        const updated = [];\n        machines.forEach((machine) => {\n            const custom = customList.find((i) => i.id === machine._id);\n            if (!custom) {\n                updated.push(machine);\n                return;\n            }\n            const keys = Object.keys(custom).filter((k) => !['id', 'number'].includes(k));\n            keys.forEach((k) => {\n                let accessor = machine;\n                const list = k.split('-');\n                const last = list.pop();\n                list.forEach((i) => {\n                    accessor = accessor[i];\n                });\n                accessor[last] = custom[k];\n            });\n            // We only expect number to be used with API-Sync Machines\n            if (!!custom.number) {\n                const name = machine.config.id;\n                const number = custom.number || 1;\n                for (let cnt = 0; cnt \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nMongoConnectionModule\n\nMongoConnectionModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nMongoConnectionModule->AppModule\n\n\n\n\n\nAppService \n\nAppService \n\nAppService  -->\n\nAppModule->AppService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MongoConnectionModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { HttpModule } from '@nestjs/axios';\nimport { ConfigService, ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ScheduleModule } from '@nestjs/schedule';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { SatInterfaceModule } from './satInterface/satInterface.module';\nimport { StateMachineModules } from './stateMachines/stateMachines.module';\nimport { MongoConnectionModule } from './mongoConnection/mongoConnection.module';\nimport configuration from '../configuration';\n\n@Module({\n    imports: [\n        forwardRef(() => StateMachineModules),\n        forwardRef(() => SatInterfaceModule),\n        ScheduleModule.forRoot(),\n        ConfigModule.forRoot({\n            isGlobal: true,\n            load: [configuration],\n        }),\n        MongooseModule.forRootAsync({\n            imports: [ConfigModule],\n            useFactory: async (configService: ConfigService) => ({\n                uri: configService.get('mongoDB_URI'),\n            }),\n            inject: [ConfigService],\n        }),\n        MongoConnectionModule,\n        HttpModule,\n    ],\n    controllers: [AppController],\n    providers: [AppService],\n    exports: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createFSM\n                            \n                            \n                                    Public\n                                removeFSM\n                            \n                            \n                                    Public\n                                satConnections\n                            \n                            \n                                    Public\n                                sendToAPI\n                            \n                            \n                                    Public\n                                sendToSat$\n                            \n                            \n                                    Public\n                                triggerContext\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                asyncheartbeat\n                            \n                            \n                                    Public\n                                    Async\n                                seperateConfigFiles\n                            \n                            \n                                    Public\n                                    Async\n                                setupStateMachine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_stateMachineService: StateMachinesService, _satelliteService: SatelliteService, _tasksQueueService: TasksQueueService, _samplesService: SamplesService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _stateMachineService\n                                                  \n                                                        \n                                                                        StateMachinesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _satelliteService\n                                                  \n                                                        \n                                                                        SatelliteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _tasksQueueService\n                                                  \n                                                        \n                                                                        TasksQueueService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _samplesService\n                                                  \n                                                        \n                                                                        SamplesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        asyncheartbeat\n                        \n                    \n                \n            \n            \n                \n                    \n                    asyncheartbeat()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_5_SECONDS)\n                \n            \n\n            \n                \n                    Defined in src/app.service.ts:63\n                \n            \n\n\n            \n                \n                    Heartbeat for API-Sync that checks for new tasks in queue for connected satellites\n If a satellite has room for a task it checks the queue,\n If not it checks if the current task has been updated\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        seperateConfigFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    seperateConfigFiles()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:37\n                \n            \n\n\n            \n                \n                    Seperate Config File Test\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setupStateMachine\n                        \n                    \n                \n            \n            \n                \n                    \n                    setupStateMachine(states: any, options: any, transitions: any, satelliteId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    states\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        configuration for state machine\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        actions and guards for state machine\n\n                                    \n                                \n                                \n                                    transitions\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        actions to perfom on transition states\n\n                                    \n                                \n                                \n                                    satelliteId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createFSM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeFSM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject void }>()\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        satConnections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendToAPI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendToSat$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        triggerContext\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { Subject } from 'rxjs';\nconst fs = require('fs');\nconst path = require('path');\n\nimport { APISyncMessage, CreateAPIMachine, SatelliteConnection, SendEvent, TriggerContext } from './interfaces';\nimport { StateMachinesService } from './stateMachines/stateMachines.service';\nimport Log from './lib/logger';\nimport { SatelliteService } from './mongoConnection/satellite.service';\nimport { TasksQueueService } from './mongoConnection/tasksQueue.service';\nimport { SamplesService } from './mongoConnection/samples.service';\nimport { TasksQueueDocument } from './mongoConnection/schemas/task.schema';\n\n@Injectable()\nexport class AppService {\n    public sendToSat$ = new Subject();\n    public sendToAPI = new Subject();\n    public triggerContext = new Subject();\n    public createFSM = new Subject();\n    public removeFSM = new Subject void }>()\n    public satConnections: { [key: string]: SatelliteConnection } = {};\n\n    constructor(\n        @Inject(forwardRef(() => StateMachinesService))\n        private _stateMachineService: StateMachinesService,\n        private _satelliteService: SatelliteService,\n        private _tasksQueueService: TasksQueueService,\n        private _samplesService: SamplesService,\n        ) {\n        this._stateMachineService.dbStream$.subscribe((msg) => {\n            console.log('Write to db', msg);\n        });\n    }\n\n    /** Seperate Config File Test */\n    public async seperateConfigFiles(): Promise {\n        const loc = path.join(__dirname, process.env.TEST_FILE);\n        const machines = [];\n        return new Promise((resolve, reject) => {\n            fs.readFile(loc, 'utf-8', (err, data) => {\n                if (err) {\n                    console.error(err);\n                    reject(err);\n                }\n                // console.log(data);\n                const configs = JSON.parse(data);\n                // console.log(configs)\n                Object.keys(configs).forEach((key) => {\n                    machines.push(configs[key]);\n                });\n                resolve(machines);\n            });\n        });\n    }\n\n    /**\n     * Heartbeat for API-Sync that checks for new tasks in queue for connected satellites\n     *  If a satellite has room for a task it checks the queue,\n     *  If not it checks if the current task has been updated\n     */\n    @Cron(CronExpression.EVERY_5_SECONDS)\n    async asyncheartbeat() {\n        try {\n            const satKeys = Object.keys(this.satConnections);\n            for (const key of satKeys) {\n                const satConnection = this.satConnections[key];\n                const satId = satConnection.satInformation._id;\n                Log.debug(`Checking the Queue for satellite ${satId}`);\n                // Get all the regular queue and priority queue tasks for the satellite\n                const { queue, priorityQueue } = await this._tasksQueueService.getBySatId(satId);\n                // Get all the FSMs that run tasks on the current satellite\n                const taskRunners = Object.keys(satConnection.stateMachines)\n                    .filter((k) => k.includes('task_queue'))\n                    .map((k) => satConnection.stateMachines[k].fsm);\n                // Get all the waiting machine on the satellite\n                const waitingMachines = taskRunners.filter((fsm) => fsm.state.value === 'waiting');\n                Log.debug(`${waitingMachines.length} machines currently waiting out of ${taskRunners.length}`);\n                if (waitingMachines.length  fsm.state.value !== 'waiting')\n                    .map((fsm) => fsm.state.context.taskId);\n\n                let taskCnt = 0, priorityCnt = 0;\n                const sortedTasks = queue\n                    .filter((task) => {\n                        const res = !currentTasks.includes(task._id);\n                        if (!res) taskCnt++;\n                        return res; \n                    })\n                    .filter((task) => task.action !== 'subscription_cancelled')\n                    .sort((a, b) => a.date.modified - b.date.modified);\n                const sortedPriorityTasks = priorityQueue\n                    .filter((task) => {\n                        const res = !currentTasks.includes(task._id);\n                        if (!res) priorityCnt++;\n                        return res;\n                    })\n                    .filter((task) => task.action !== 'subscription_cancelled')\n                    .sort((a, b) => a.date.modified - b.date.modified);\n\n                for (const machine of waitingMachines) {\n                    let task: TasksQueueDocument;\n                    const half = Math.floor(satConnection.maxTasks / 2);\n                    // If half the tasks are standard AND there are priority tasks add priority\n                    while ((sortedTasks.length > 0 || sortedPriorityTasks.length > 0) || !task) {\n                        let checking: TasksQueueDocument;\n                        let priority = false;\n                        if ((taskCnt >= half || sortedTasks.length === 0) && sortedPriorityTasks.length > 0) {\n                            checking = sortedPriorityTasks.shift();\n                            priority = true;\n                        } else {\n                            checking = sortedTasks.shift();\n                            priority = false;\n                        }\n                        if (!checking) break;\n                        const sampleId = checking.payload.get('sample_id');\n                        // Check to make sure the upstreams are ready\n                        const upstreamReady = await this._samplesService.checkUpstreamOutputs(sampleId);\n                        // If they are save this task as the one to add to the task Runner and increment regular task cnt\n                        if (upstreamReady) {\n                            task = checking;\n                            if (priority) priorityCnt++;\n                            else taskCnt++;\n                            break;\n                        }\n                    }\n                    if (task) {\n                        Log.info(`Sending ${task._id} to ${machine.state.context.id}`);\n                        machine.state.context.startProcess(task._id);\n                    }\n                }\n            }\n        } catch (err) {\n            Log.error(`Error with heartbeat: ${err}`);\n        }\n    }\n    \n    /**\n     * \n     * @param states configuration for state machine\n     * @param options actions and guards for state machine\n     * @param transitions actions to perfom on transition states\n     * @param satelliteId \n     * @returns @param {ProcessedStateMachine} fsm Interpreted Finite State Machine and a specific Logger for this State Machine \n     */\n   public async setupStateMachine(states: any, options: any, transitions: any, satelliteId: string) {\n       const fsm = await this._stateMachineService.createStateMachine(states, options, transitions, satelliteId);\n       return fsm;\n   }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(_satelliteService: SatelliteService)\n                    \n                \n                        \n                            \n                                Defined in src/app.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _satelliteService\n                                                  \n                                                        \n                                                                        SatelliteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app.guard.ts:15\n                \n            \n\n\n            \n                \n                    This is the check for verifying a satellite\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        contains our metadata\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { RpcException } from '@nestjs/microservices';\n\nimport { SatelliteService } from './mongoConnection/satellite.service';\nimport Log from './lib/logger';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor (private _satelliteService: SatelliteService) {}\n    /**\n     * This is the check for verifying a satellite\n     * @param context contains our metadata\n     */\n    async canActivate(context: ExecutionContext): Promise {\n        try {\n            const jwt = context.getArgs()[0].metadata.get('jwt')[0];\n            // if (process.env.NODE_ENV !== 'development') {\n            //     //TODO: Potentially add more verification checks here\n            //     await this.authService.verify(jwt);\n            // }\n            await this._satelliteService.canLink(jwt);\n            return true;\n        } catch (err) {\n            Log.info(err);\n            throw new RpcException('BAD AUTH');\n        }\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CWL.html":{"url":"classes/CWL.html","title":"class - CWL","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CWL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/cwl.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                date\n                            \n                            \n                                description\n                            \n                            \n                                git\n                            \n                            \n                                metadata\n                            \n                            \n                                servicetags\n                            \n                            \n                                source\n                            \n                            \n                                tags\n                            \n                            \n                                upstream\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Description\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        git\n                        \n                    \n                \n            \n                \n                    \n                        Type :         git\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Metadata[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        servicetags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upstream\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:80\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type CWLDocument = CWL & Document;\n\nclass Date {\n    @Prop()\n    modified: number;\n}\n\nclass Description {\n    @Prop()\n    author: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    info: string;\n\n    @Prop()\n    label: string;\n\n    @Prop()\n    url: string;\n\n    @Prop()\n    version: string;\n}\n\nclass git {\n    @Prop()\n    message: string;\n\n    @Prop()\n    path: string;\n\n    @Prop()\n    remote: string;\n\n    @Prop()\n    sha: string;\n\n    @Prop()\n    local_path: string;\n}\n\nclass Metadata {\n    @Prop()\n    path: string;\n\n    @Prop()\n    source: string;\n}\n\n@Schema({ collection: 'CWL' })\nexport class CWL {\n    @Prop()\n    _id: string;\n\n    @Prop({ type: Date })\n    date: Date;\n\n    @Prop()\n    description: Description;\n\n    @Prop()\n    git: git;\n\n    @Prop()\n    metadata: Metadata[];\n\n    @Prop()\n    servicetags: string[];\n\n    @Prop()\n    tags: string[];\n\n    @Prop({ type: Object })\n    upstream: any;\n\n    @Prop({ type: Object })\n    source: {\n        json: string;\n        packed: string;\n        source: string;\n    };\n}\n\nexport const CWLSchema = SchemaFactory.createForClass(CWL);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CWLService.html":{"url":"injectables/CWLService.html","title":"injectable - CWLService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CWLService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/cwl.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cwlModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/mongoConnection/cwl.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cwlModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/cwl.service.ts:18\n                \n            \n\n\n            \n                \n                    Get a CWL file from the database by ID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo id of the cwl file\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\nimport { CWL, CWLDocument } from './schemas/cwl.schema';\n\n@Injectable()\nexport class CWLService {\n    constructor(\n        @InjectModel(CWL.name)\n        private cwlModel: Model,\n    ) {}\n\n    /**\n     * Get a CWL file from the database by ID\n     * @param _id mongo id of the cwl file\n     */\n    async getById(_id: string): Promise {\n        return this.cwlModel.findOne({ _id }).exec();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Config.html":{"url":"classes/Config.html","title":"class - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Config\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/apiSyncMachines.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                context\n                            \n                            \n                                id\n                            \n                            \n                                initial\n                            \n                            \n                                    Optional\n                                on\n                            \n                            \n                                states\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initial\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        on\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, of: Type})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        states\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, of: State})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type ApiSyncMachineDocument = ApiSyncMachine & Document;\n\nclass Type {\n    @Prop()\n    target?: string;\n\n    @Prop()\n    cond?: string;\n\n    @Prop()\n    actions?: string[];\n}\n\nclass State {\n    @Prop()\n    entry?: string[];\n\n    @Prop()\n    exit?: string[];\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Config {\n    @Prop()\n    id: string;\n\n    @Prop()\n    initial: string;\n\n    @Prop({type: Object})\n    context: {\n        [key: string]: any;\n    };\n\n    @Prop({type: Object, of: State})\n    states: {\n        [key: string]: State;\n    }\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Options {\n    @Prop({type: Object, of: String})\n    actions?: {\n        [key: string]: string;\n    }\n\n    @Prop({type: Object, of: String})\n    guards?: {\n        [key: string]: string;\n    }\n}\n\nexport class MachineCommand {\n    @Prop()\n    target: string;\n\n    @Prop()\n    label: string;\n\n    @Prop()\n    args?: string;\n\n    @Prop()\n    style?: string;\n}\n\n@Schema({ collection: 'api_sync_machines', minimize: false })\nexport class ApiSyncMachine {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    applyTo: string[];\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    type: string;\n\n    @Prop()\n    commands?: MachineCommand[];\n\n    @Prop()\n    config: Config;\n    \n    @Prop()\n    options: Options;\n\n    @Prop({type: Object, of: String})\n    transitions: {\n        [key: string]: string;\n    };\n}\n\nexport const ApiSyncMachineSchema = SchemaFactory.createForClass(ApiSyncMachine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateAPIMachine.html":{"url":"interfaces/CreateAPIMachine.html","title":"interface - CreateAPIMachine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateAPIMachine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            callback\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            commands\n                                        \n                                \n                                \n                                        \n                                            config\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            satelliteId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            transitions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commands\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commands:         MachineCommand[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MachineCommand[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:         Config\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Config\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         Options\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Options\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        satelliteId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        satelliteId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transitions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transitions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    /** Target machine on API Sync */\n    apimachine?: string;\n    /** Method for stdout */\n    outresponse?: string;\n    /** Method for stderr maybe we don't use this. Only set error to true */\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    /** used for testing */\n    keepscript?: boolean;\n    /** Always use args as an array of strings instead of a string */\n    args?: string[];\n    /** Always use interpreter_args as an array of strings instead of a string */\n    interpreter_args?: string[];\n    /** Always use a number for max_memory_restart */\n    max_memory_restart?: number;\n    /** */\n    watch?: boolean;\n    /** We can't set a variable field so if watch array is set we use it instead of watch */\n    watch_array?: string[];\n\n    /** \n     * We can't set a gRPC field to any so we need to stringify them on API sync \n     * and parse them on the satellite */\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomPm2StartOptions.html":{"url":"interfaces/CustomPm2StartOptions.html","title":"interface - CustomPm2StartOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomPm2StartOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        StartOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            args\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cron\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disable_source_map_support\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            execute_command\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            interpreter_args\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            keepscript\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max_memory_restart\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source_map_support\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            watch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            watch_array\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            write\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        args\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        args:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Always use args as an array of strings instead of a string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cron\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cron:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    We can't set a gRPC field to any so we need to stringify them on API sync\nand parse them on the satellite\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disable_source_map_support\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disable_source_map_support:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        execute_command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        execute_command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interpreter_args\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interpreter_args:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Always use interpreter_args as an array of strings instead of a string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepscript\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keepscript:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    used for testing\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max_memory_restart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max_memory_restart:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Always use a number for max_memory_restart\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source_map_support\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source_map_support:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        watch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        watch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        watch_array\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        watch_array:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    We can't set a variable field so if watch array is set we use it instead of watch\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        write\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        write:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    /** Target machine on API Sync */\n    apimachine?: string;\n    /** Method for stdout */\n    outresponse?: string;\n    /** Method for stderr maybe we don't use this. Only set error to true */\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    /** used for testing */\n    keepscript?: boolean;\n    /** Always use args as an array of strings instead of a string */\n    args?: string[];\n    /** Always use interpreter_args as an array of strings instead of a string */\n    interpreter_args?: string[];\n    /** Always use a number for max_memory_restart */\n    max_memory_restart?: number;\n    /** */\n    watch?: boolean;\n    /** We can't set a variable field so if watch array is set we use it instead of watch */\n    watch_array?: string[];\n\n    /** \n     * We can't set a gRPC field to any so we need to stringify them on API sync \n     * and parse them on the satellite */\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Date.html":{"url":"classes/Date.html","title":"class - Date","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Date\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/cwl.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modified\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        modified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type CWLDocument = CWL & Document;\n\nclass Date {\n    @Prop()\n    modified: number;\n}\n\nclass Description {\n    @Prop()\n    author: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    info: string;\n\n    @Prop()\n    label: string;\n\n    @Prop()\n    url: string;\n\n    @Prop()\n    version: string;\n}\n\nclass git {\n    @Prop()\n    message: string;\n\n    @Prop()\n    path: string;\n\n    @Prop()\n    remote: string;\n\n    @Prop()\n    sha: string;\n\n    @Prop()\n    local_path: string;\n}\n\nclass Metadata {\n    @Prop()\n    path: string;\n\n    @Prop()\n    source: string;\n}\n\n@Schema({ collection: 'CWL' })\nexport class CWL {\n    @Prop()\n    _id: string;\n\n    @Prop({ type: Date })\n    date: Date;\n\n    @Prop()\n    description: Description;\n\n    @Prop()\n    git: git;\n\n    @Prop()\n    metadata: Metadata[];\n\n    @Prop()\n    servicetags: string[];\n\n    @Prop()\n    tags: string[];\n\n    @Prop({ type: Object })\n    upstream: any;\n\n    @Prop({ type: Object })\n    source: {\n        json: string;\n        packed: string;\n        source: string;\n    };\n}\n\nexport const CWLSchema = SchemaFactory.createForClass(CWL);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Date-1.html":{"url":"classes/Date-1.html","title":"class - Date-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Date\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/sample.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modified\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        modified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SampleDocument = Sample & Document;\n\nclass Date {\n    @Prop()\n    modified: number;\n}\n\n@Schema({ collection: 'samples' })\nexport class Sample {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    cwlId: string;\n\n    @Prop()\n    templateId?: string;\n\n    @Prop()\n    userId: string;\n\n    @Prop({ type: Object })\n    inputs: any;\n\n    @Prop({ type: Object })\n    upstream: any;\n\n    @Prop({ type: Object })\n    outputs: any;\n\n    @Prop({ type: Object })\n    preview: any;\n\n    @Prop()\n    projectId: string;\n\n    @Prop({ type: Object })\n    metadata: any;\n\n    @Prop()\n    projects: string[];\n\n    @Prop()\n    satellite_id: string;\n\n    @Prop()\n    servicetags: string[];\n\n    @Prop({ type: Object })\n    tmp_inputs: any;\n\n    @Prop({ type: Date })\n    date: Date;\n\n    @Prop({ type: Object })\n    statistics: any;\n}\n\nexport const SampleSchema = SchemaFactory.createForClass(Sample);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Date-2.html":{"url":"classes/Date-2.html","title":"class - Date-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Date\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/task.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created\n                            \n                            \n                                modified\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/task.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/task.schema.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type TasksQueueDocument = TasksQueue & Document;\n\nclass Date {\n    @Prop()\n    modified: number;\n\n    @Prop()\n    created: number;\n}\n\n@Schema({ collection: 'tasks_queue' })\nexport class TasksQueue {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    satellite_id: string;\n\n    @Prop()\n    action: string;\n\n    @Prop()\n    payload: Map;\n\n    @Prop({ type: Date })\n    date: Date;\n}\n\nexport const TasksQueueSchema = SchemaFactory.createForClass(TasksQueue);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DependencyTree.html":{"url":"interfaces/DependencyTree.html","title":"interface - DependencyTree","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DependencyTree\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apimachine\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            busresponse\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            children\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorresponse\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onlymachine\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            outresponse\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            statemachine\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apimachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apimachine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Target machine on API Sync\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        busresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        busresponse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:         DependencyTree[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DependencyTree[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorresponse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Method for stderr maybe we don't use this. Only set error to true\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onlymachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onlymachine:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         CustomPm2StartOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CustomPm2StartOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outresponse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Method for stdout\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statemachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statemachine:         UnProcessedStateMachineOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UnProcessedStateMachineOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    /** Target machine on API Sync */\n    apimachine?: string;\n    /** Method for stdout */\n    outresponse?: string;\n    /** Method for stderr maybe we don't use this. Only set error to true */\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    /** used for testing */\n    keepscript?: boolean;\n    /** Always use args as an array of strings instead of a string */\n    args?: string[];\n    /** Always use interpreter_args as an array of strings instead of a string */\n    interpreter_args?: string[];\n    /** Always use a number for max_memory_restart */\n    max_memory_restart?: number;\n    /** */\n    watch?: boolean;\n    /** We can't set a variable field so if watch array is set we use it instead of watch */\n    watch_array?: string[];\n\n    /** \n     * We can't set a gRPC field to any so we need to stringify them on API sync \n     * and parse them on the satellite */\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Description.html":{"url":"classes/Description.html","title":"class - Description","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Description\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/cwl.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                description\n                            \n                            \n                                info\n                            \n                            \n                                label\n                            \n                            \n                                url\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type CWLDocument = CWL & Document;\n\nclass Date {\n    @Prop()\n    modified: number;\n}\n\nclass Description {\n    @Prop()\n    author: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    info: string;\n\n    @Prop()\n    label: string;\n\n    @Prop()\n    url: string;\n\n    @Prop()\n    version: string;\n}\n\nclass git {\n    @Prop()\n    message: string;\n\n    @Prop()\n    path: string;\n\n    @Prop()\n    remote: string;\n\n    @Prop()\n    sha: string;\n\n    @Prop()\n    local_path: string;\n}\n\nclass Metadata {\n    @Prop()\n    path: string;\n\n    @Prop()\n    source: string;\n}\n\n@Schema({ collection: 'CWL' })\nexport class CWL {\n    @Prop()\n    _id: string;\n\n    @Prop({ type: Date })\n    date: Date;\n\n    @Prop()\n    description: Description;\n\n    @Prop()\n    git: git;\n\n    @Prop()\n    metadata: Metadata[];\n\n    @Prop()\n    servicetags: string[];\n\n    @Prop()\n    tags: string[];\n\n    @Prop({ type: Object })\n    upstream: any;\n\n    @Prop({ type: Object })\n    source: {\n        json: string;\n        packed: string;\n        source: string;\n    };\n}\n\nexport const CWLSchema = SchemaFactory.createForClass(CWL);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExceptionFilter.html":{"url":"classes/ExceptionFilter.html","title":"class - ExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rpc-connection.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Catchs RPC exceptions and throws the error correctly\n\n            \n\n\n            \n                Implements\n            \n            \n                            RpcExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: RpcException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/rpc-connection.filter.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            RpcException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, RpcExceptionFilter } from '@nestjs/common';\nimport { RpcException } from '@nestjs/microservices';\nimport { Observable, throwError } from 'rxjs';\n\n/**\n * Catchs RPC exceptions and throws the error correctly\n */\n@Catch(RpcException)\nexport class ExceptionFilter implements RpcExceptionFilter {\n    catch(exception: RpcException, host: ArgumentsHost): Observable {\n        const streamConnection = host.getArgs()[0];\n        streamConnection.emit('error', new Error(exception.message));\n        return throwError(exception.getError());\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileFromClient.html":{"url":"interfaces/FileFromClient.html","title":"interface - FileFromClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileFromClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/interfaces/apiSync.interface.ts:141\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    /** Target machine on API Sync */\n    apimachine?: string;\n    /** Method for stdout */\n    outresponse?: string;\n    /** Method for stderr maybe we don't use this. Only set error to true */\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    /** used for testing */\n    keepscript?: boolean;\n    /** Always use args as an array of strings instead of a string */\n    args?: string[];\n    /** Always use interpreter_args as an array of strings instead of a string */\n    interpreter_args?: string[];\n    /** Always use a number for max_memory_restart */\n    max_memory_restart?: number;\n    /** */\n    watch?: boolean;\n    /** We can't set a variable field so if watch array is set we use it instead of watch */\n    watch_array?: string[];\n\n    /** \n     * We can't set a gRPC field to any so we need to stringify them on API sync \n     * and parse them on the satellite */\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Lab.html":{"url":"classes/Lab.html","title":"class - Lab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Lab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/lab.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                description\n                            \n                            \n                                members\n                            \n                            \n                                modified\n                            \n                            \n                                name\n                            \n                            \n                                owner\n                            \n                            \n                                pending\n                            \n                            \n                                satellite_id\n                            \n                            \n                                satelliteList\n                            \n                            \n                                statistics\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/lab.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/lab.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/lab.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/lab.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/lab.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/lab.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pending\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/lab.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        satellite_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/lab.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        satelliteList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/lab.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statistics\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/lab.schema.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type LabDocument = Lab & Document;\n\n@Schema({ collection: 'labs' })\nexport class Lab {\n    @Prop()\n    _id: string;\n\n    @Prop({ type: Object })\n    owner: any;\n\n    @Prop()\n    description: string;\n\n    @Prop({ type: Array })\n    members: any;\n\n    @Prop()\n    modified: number;\n\n    @Prop()\n    name: string;\n\n    @Prop({ type: Array })\n    pending: any;\n\n    @Prop()\n    satellite_id: string;\n\n    @Prop({ type: Array })\n    satelliteList: any;\n\n    @Prop({ type: Object })\n    statistics: any;\n}\n\nexport const LabSchema = SchemaFactory.createForClass(Lab);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabService.html":{"url":"injectables/LabService.html","title":"injectable - LabService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LabService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/labs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Public\n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(labModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/mongoConnection/labs.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        labModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/labs.service.ts:18\n                \n            \n\n\n            \n                \n                    Get a Lab from the database by ID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo id of the Lab\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(_id: string, updatedObject: any)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/labs.service.ts:28\n                \n            \n\n\n            \n                \n                    Update one Lab by ID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of the lab\n\n                                    \n                                \n                                \n                                    updatedObject\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        object to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        error or amount upserted (which is one)\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\nimport { Lab, LabDocument } from './schemas/lab.schema';\n\n@Injectable()\nexport class LabService {\n    constructor(\n        @InjectModel(Lab.name)\n        private labModel: Model,\n    ) {}\n\n    /**\n     * Get a Lab from the database by ID\n     * @param _id mongo id of the Lab\n     */\n    async getById(_id: string): Promise {\n        return this.labModel.findOne({ _id }).exec();\n    }\n\n    /**\n     * Update one Lab by ID\n     * @param _id id of the lab\n     * @param updatedObject object to update\n     * @returns error or amount upserted (which is one)\n     */\n     public async updateOne(_id: string, updatedObject: any) {\n        try {\n            const lab = await this.labModel.updateOne({ _id }, { $set: updatedObject });\n            return { upserted: lab.nModified };\n        } catch (err) {\n            return { err };\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalFiles.html":{"url":"interfaces/LocalFiles.html","title":"interface - LocalFiles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LocalFiles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/connection.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            collection\n                                        \n                                \n                                \n                                        \n                                            show\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collection:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        show\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        show:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ClientDuplexStream, Metadata } from \"grpc\";\nimport { Satellite } from \"../mongoConnection/schemas/satellite.schema\";\nimport { Interpreter } from \"xstate\";\n\nimport { APISyncMessage, SatelliteMessage } from \".\";\n\n/**\n * representation of a satellites connection to the server\n */\nexport interface SatelliteConnection {\n    connected: boolean;\n    stream: SciDapDuplexStream;\n    stateMachines: { [key: string]: APISyncStateMachineObject };\n    tasks: string[];\n    priorityTasks: string[];\n    maxTasks: number;\n    satInformation: Satellite;\n    keepAliveTimer?: NodeJS.Timeout;\n    keepAlivePingTimer?: NodeJS.Timeout;\n    /** used for testing */\n    receievedResponse?: boolean;\n}\n\nexport interface APISyncStateMachineObject {\n    fsm: Interpreter;\n    logger: any;\n}\n\nexport interface SciDapDuplexStream extends ClientDuplexStream {\n    metadata: Metadata;\n}\n\nexport interface MessageToSatellite extends APISyncMessage {\n    satelliteId: string;\n}\n\nexport interface LocalFiles {\n    show: boolean;\n    collection: {\n        name: string;\n        path: string;\n    }[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MachineCommand.html":{"url":"classes/MachineCommand.html","title":"class - MachineCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MachineCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/apiSyncMachines.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                args\n                            \n                            \n                                label\n                            \n                            \n                                    Optional\n                                style\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        args\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        style\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:67\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type ApiSyncMachineDocument = ApiSyncMachine & Document;\n\nclass Type {\n    @Prop()\n    target?: string;\n\n    @Prop()\n    cond?: string;\n\n    @Prop()\n    actions?: string[];\n}\n\nclass State {\n    @Prop()\n    entry?: string[];\n\n    @Prop()\n    exit?: string[];\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Config {\n    @Prop()\n    id: string;\n\n    @Prop()\n    initial: string;\n\n    @Prop({type: Object})\n    context: {\n        [key: string]: any;\n    };\n\n    @Prop({type: Object, of: State})\n    states: {\n        [key: string]: State;\n    }\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Options {\n    @Prop({type: Object, of: String})\n    actions?: {\n        [key: string]: string;\n    }\n\n    @Prop({type: Object, of: String})\n    guards?: {\n        [key: string]: string;\n    }\n}\n\nexport class MachineCommand {\n    @Prop()\n    target: string;\n\n    @Prop()\n    label: string;\n\n    @Prop()\n    args?: string;\n\n    @Prop()\n    style?: string;\n}\n\n@Schema({ collection: 'api_sync_machines', minimize: false })\nexport class ApiSyncMachine {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    applyTo: string[];\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    type: string;\n\n    @Prop()\n    commands?: MachineCommand[];\n\n    @Prop()\n    config: Config;\n    \n    @Prop()\n    options: Options;\n\n    @Prop({type: Object, of: String})\n    transitions: {\n        [key: string]: string;\n    };\n}\n\nexport const ApiSyncMachineSchema = SchemaFactory.createForClass(ApiSyncMachine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageToSatellite.html":{"url":"interfaces/MessageToSatellite.html","title":"interface - MessageToSatellite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageToSatellite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/connection.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        APISyncMessage\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            satelliteId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        satelliteId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        satelliteId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ClientDuplexStream, Metadata } from \"grpc\";\nimport { Satellite } from \"../mongoConnection/schemas/satellite.schema\";\nimport { Interpreter } from \"xstate\";\n\nimport { APISyncMessage, SatelliteMessage } from \".\";\n\n/**\n * representation of a satellites connection to the server\n */\nexport interface SatelliteConnection {\n    connected: boolean;\n    stream: SciDapDuplexStream;\n    stateMachines: { [key: string]: APISyncStateMachineObject };\n    tasks: string[];\n    priorityTasks: string[];\n    maxTasks: number;\n    satInformation: Satellite;\n    keepAliveTimer?: NodeJS.Timeout;\n    keepAlivePingTimer?: NodeJS.Timeout;\n    /** used for testing */\n    receievedResponse?: boolean;\n}\n\nexport interface APISyncStateMachineObject {\n    fsm: Interpreter;\n    logger: any;\n}\n\nexport interface SciDapDuplexStream extends ClientDuplexStream {\n    metadata: Metadata;\n}\n\nexport interface MessageToSatellite extends APISyncMessage {\n    satelliteId: string;\n}\n\nexport interface LocalFiles {\n    show: boolean;\n    collection: {\n        name: string;\n        path: string;\n    }[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Metadata.html":{"url":"classes/Metadata.html","title":"class - Metadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Metadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/cwl.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                path\n                            \n                            \n                                source\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type CWLDocument = CWL & Document;\n\nclass Date {\n    @Prop()\n    modified: number;\n}\n\nclass Description {\n    @Prop()\n    author: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    info: string;\n\n    @Prop()\n    label: string;\n\n    @Prop()\n    url: string;\n\n    @Prop()\n    version: string;\n}\n\nclass git {\n    @Prop()\n    message: string;\n\n    @Prop()\n    path: string;\n\n    @Prop()\n    remote: string;\n\n    @Prop()\n    sha: string;\n\n    @Prop()\n    local_path: string;\n}\n\nclass Metadata {\n    @Prop()\n    path: string;\n\n    @Prop()\n    source: string;\n}\n\n@Schema({ collection: 'CWL' })\nexport class CWL {\n    @Prop()\n    _id: string;\n\n    @Prop({ type: Date })\n    date: Date;\n\n    @Prop()\n    description: Description;\n\n    @Prop()\n    git: git;\n\n    @Prop()\n    metadata: Metadata[];\n\n    @Prop()\n    servicetags: string[];\n\n    @Prop()\n    tags: string[];\n\n    @Prop({ type: Object })\n    upstream: any;\n\n    @Prop({ type: Object })\n    source: {\n        json: string;\n        packed: string;\n        source: string;\n    };\n}\n\nexport const CWLSchema = SchemaFactory.createForClass(CWL);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoConnectionModule.html":{"url":"modules/MongoConnectionModule.html","title":"module - MongoConnectionModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoConnectionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MongoConnectionModule\n\n\n\ncluster_MongoConnectionModule_providers\n\n\n\ncluster_MongoConnectionModule_exports\n\n\n\n\nApiSyncMachinesService \n\nApiSyncMachinesService \n\n\n\nCWLService \n\nCWLService \n\n\n\nLabService \n\nLabService \n\n\n\nSamplesService \n\nSamplesService \n\n\n\nSatelliteMachineService \n\nSatelliteMachineService \n\n\n\nSatelliteService \n\nSatelliteService \n\n\n\nSatelliteTasksService \n\nSatelliteTasksService \n\n\n\nSubDomainService \n\nSubDomainService \n\n\n\nTasksQueueService \n\nTasksQueueService \n\n\n\nMongoConnectionModule\n\nMongoConnectionModule\n\nApiSyncMachinesService  -->\n\nMongoConnectionModule->ApiSyncMachinesService \n\n\n\nCWLService  -->\n\nMongoConnectionModule->CWLService \n\n\n\nLabService  -->\n\nMongoConnectionModule->LabService \n\n\n\nSamplesService  -->\n\nMongoConnectionModule->SamplesService \n\n\n\nSatelliteMachineService  -->\n\nMongoConnectionModule->SatelliteMachineService \n\n\n\nSatelliteService  -->\n\nMongoConnectionModule->SatelliteService \n\n\n\nSatelliteTasksService  -->\n\nMongoConnectionModule->SatelliteTasksService \n\n\n\nSubDomainService  -->\n\nMongoConnectionModule->SubDomainService \n\n\n\nTasksQueueService  -->\n\nMongoConnectionModule->TasksQueueService \n\n\n\n\n\nApiSyncMachinesService\n\nApiSyncMachinesService\n\nMongoConnectionModule -->\n\nApiSyncMachinesService->MongoConnectionModule\n\n\n\n\n\nCWLService\n\nCWLService\n\nMongoConnectionModule -->\n\nCWLService->MongoConnectionModule\n\n\n\n\n\nLabService\n\nLabService\n\nMongoConnectionModule -->\n\nLabService->MongoConnectionModule\n\n\n\n\n\nSamplesService\n\nSamplesService\n\nMongoConnectionModule -->\n\nSamplesService->MongoConnectionModule\n\n\n\n\n\nSatelliteMachineService\n\nSatelliteMachineService\n\nMongoConnectionModule -->\n\nSatelliteMachineService->MongoConnectionModule\n\n\n\n\n\nSatelliteService\n\nSatelliteService\n\nMongoConnectionModule -->\n\nSatelliteService->MongoConnectionModule\n\n\n\n\n\nSatelliteTasksService\n\nSatelliteTasksService\n\nMongoConnectionModule -->\n\nSatelliteTasksService->MongoConnectionModule\n\n\n\n\n\nSubDomainService\n\nSubDomainService\n\nMongoConnectionModule -->\n\nSubDomainService->MongoConnectionModule\n\n\n\n\n\nTasksQueueService\n\nTasksQueueService\n\nMongoConnectionModule -->\n\nTasksQueueService->MongoConnectionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mongoConnection/mongoConnection.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiSyncMachinesService\n                        \n                        \n                            CWLService\n                        \n                        \n                            LabService\n                        \n                        \n                            SamplesService\n                        \n                        \n                            SatelliteMachineService\n                        \n                        \n                            SatelliteService\n                        \n                        \n                            SatelliteTasksService\n                        \n                        \n                            SubDomainService\n                        \n                        \n                            TasksQueueService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApiSyncMachinesService\n                        \n                        \n                            CWLService\n                        \n                        \n                            LabService\n                        \n                        \n                            SamplesService\n                        \n                        \n                            SatelliteMachineService\n                        \n                        \n                            SatelliteService\n                        \n                        \n                            SatelliteTasksService\n                        \n                        \n                            SubDomainService\n                        \n                        \n                            TasksQueueService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { CWLService } from './cwl.service';\nimport { SamplesService } from './samples.service';\nimport { SatelliteService } from './satellite.service';\nimport { CWL, CWLSchema } from './schemas/cwl.schema';\nimport { Sample, SampleSchema } from './schemas/sample.schema';\nimport { Satellite, SatelliteSchema } from './schemas/satellite.schema';\nimport { SubDomain, SubDomainSchema } from './schemas/subdomain.schema';\nimport { TasksQueue, TasksQueueSchema } from './schemas/task.schema';\nimport { ServiceTag, ServiceTagSchema } from './schemas/serviceTag.schema';\nimport { TasksQueueService } from './tasksQueue.service';\nimport { SubDomainService } from './subDomain.service';\nimport { ApiSyncMachinesService } from './apiSyncMachines.service';\nimport { ApiSyncMachine, ApiSyncMachineSchema } from './schemas/apiSyncMachines.schema';\nimport { SatelliteMachine, SatelliteMachineSchema } from './schemas/satelliteMachines.schema';\nimport { SatelliteMachineService } from './satelliteMachines.service';\nimport { SatelliteTask, SatelliteTaskSchema } from './schemas/satelliteTask.schema';\nimport { SatelliteTasksService } from './satelliteTasks.service';\nimport { Lab, LabSchema } from './schemas/lab.schema';\nimport { LabService } from './labs.service';\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            { name: TasksQueue.name, schema: TasksQueueSchema },\n            { name: Satellite.name, schema: SatelliteSchema },\n            { name: Sample.name, schema: SampleSchema },\n            { name: CWL.name, schema: CWLSchema },\n            { name: SubDomain.name, schema: SubDomainSchema },\n            { name: ServiceTag.name, schema: ServiceTagSchema },\n            { name: ApiSyncMachine.name, schema: ApiSyncMachineSchema },\n            { name: SatelliteMachine.name, schema: SatelliteMachineSchema },\n            { name: SatelliteTask.name, schema: SatelliteTaskSchema },\n            { name: Lab.name, schema: LabSchema },\n        ]),\n    ],\n    providers: [TasksQueueService, SamplesService, CWLService, SatelliteService, SubDomainService, ApiSyncMachinesService, SatelliteMachineService, SatelliteTasksService, LabService],\n    exports: [TasksQueueService, SamplesService, CWLService, SatelliteService, SubDomainService, ApiSyncMachinesService, SatelliteMachineService, SatelliteTasksService, LabService],\n})\nexport class MongoConnectionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OnOptions.html":{"url":"classes/OnOptions.html","title":"class - OnOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OnOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/satelliteMachines.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                actions\n                            \n                            \n                                    Optional\n                                cond\n                            \n                            \n                                    Optional\n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        cond\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SatelliteMachineDocument = SatelliteMachine & Document;\n\nclass OnOptions {\n    @Prop()\n    target?: string;\n\n    @Prop()\n    actions?: string[];\n\n    @Prop()\n    cond?: string;\n}\n\nclass StateOptions {\n    @Prop()\n    entry: string[];\n\n    @Prop()\n    exit: string[];\n\n    @Prop({type: Object, of: OnOptions})\n    on: {\n        [key: string]: OnOptions;\n    }\n}\n\nclass UnProcessedStateMachine {\n    @Prop({ type: Object, of: StateOptions })\n    states?: {\n        [key: string]: StateOptions;\n    }\n\n    @Prop({ type: Object, of: OnOptions })\n    on?: {\n        [key: string]: OnOptions;\n    }\n\n    @Prop({ type: Object, of: String })\n    guards?: {\n        [key: string]: string;\n    }\n\n    @Prop({ type: Object, of: String })\n    actions?: {\n        [key: string]: string;\n    }\n}\n\n@Schema({ collection: 'satellite_machines', minimize: false })\nexport class SatelliteMachine {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    children?: SatelliteMachine[];\n\n    @Prop({ type: Object })\n    options?: any;\n    \n    @Prop()\n    statemachine?: UnProcessedStateMachine;\n\n    @Prop()\n    onlymachine?: boolean;\n}\n\nexport const SatelliteMachineSchema = SchemaFactory.createForClass(SatelliteMachine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OptionTypes.html":{"url":"interfaces/OptionTypes.html","title":"interface - OptionTypes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OptionTypes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        StateOptions\n\n                    \n                \n                        \n                            \n                                Defined in src/interfaces/apiSync.interface.ts:60\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    /** Target machine on API Sync */\n    apimachine?: string;\n    /** Method for stdout */\n    outresponse?: string;\n    /** Method for stderr maybe we don't use this. Only set error to true */\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    /** used for testing */\n    keepscript?: boolean;\n    /** Always use args as an array of strings instead of a string */\n    args?: string[];\n    /** Always use interpreter_args as an array of strings instead of a string */\n    interpreter_args?: string[];\n    /** Always use a number for max_memory_restart */\n    max_memory_restart?: number;\n    /** */\n    watch?: boolean;\n    /** We can't set a variable field so if watch array is set we use it instead of watch */\n    watch_array?: string[];\n\n    /** \n     * We can't set a gRPC field to any so we need to stringify them on API sync \n     * and parse them on the satellite */\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Options.html":{"url":"classes/Options.html","title":"class - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Options\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/apiSyncMachines.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                actions\n                            \n                            \n                                    Optional\n                                guards\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, of: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        guards\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, of: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type ApiSyncMachineDocument = ApiSyncMachine & Document;\n\nclass Type {\n    @Prop()\n    target?: string;\n\n    @Prop()\n    cond?: string;\n\n    @Prop()\n    actions?: string[];\n}\n\nclass State {\n    @Prop()\n    entry?: string[];\n\n    @Prop()\n    exit?: string[];\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Config {\n    @Prop()\n    id: string;\n\n    @Prop()\n    initial: string;\n\n    @Prop({type: Object})\n    context: {\n        [key: string]: any;\n    };\n\n    @Prop({type: Object, of: State})\n    states: {\n        [key: string]: State;\n    }\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Options {\n    @Prop({type: Object, of: String})\n    actions?: {\n        [key: string]: string;\n    }\n\n    @Prop({type: Object, of: String})\n    guards?: {\n        [key: string]: string;\n    }\n}\n\nexport class MachineCommand {\n    @Prop()\n    target: string;\n\n    @Prop()\n    label: string;\n\n    @Prop()\n    args?: string;\n\n    @Prop()\n    style?: string;\n}\n\n@Schema({ collection: 'api_sync_machines', minimize: false })\nexport class ApiSyncMachine {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    applyTo: string[];\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    type: string;\n\n    @Prop()\n    commands?: MachineCommand[];\n\n    @Prop()\n    config: Config;\n    \n    @Prop()\n    options: Options;\n\n    @Prop({type: Object, of: String})\n    transitions: {\n        [key: string]: string;\n    };\n}\n\nexport const ApiSyncMachineSchema = SchemaFactory.createForClass(ApiSyncMachine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Output.html":{"url":"interfaces/Output.html","title":"interface - Output","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Output\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/tasksQueue.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                representation of file object for sample outputs (in database)\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            basename\n                                        \n                                \n                                \n                                        \n                                            checksum\n                                        \n                                \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            listing\n                                        \n                                \n                                \n                                        \n                                            location\n                                        \n                                \n                                \n                                        \n                                            nameext\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nameroot\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            secondaryFiles\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        basename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        basename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checksum\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        checksum:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listing:         Output[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Output[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nameext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nameext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nameroot\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nameroot:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secondaryFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secondaryFiles:         Output[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Output[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Output {\n    location: string;\n    basename: string;\n    nameroot?: string;\n    nameext: string;\n    class: string;\n    checksum: string;\n    size: number;\n    listing?: Output[];\n    secondaryFiles?: Output[];\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessedStateMachine.html":{"url":"interfaces/ProcessedStateMachine.html","title":"interface - ProcessedStateMachine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessedStateMachine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/stateMachines.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            interpreted\n                                        \n                                \n                                \n                                        \n                                            logger\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        interpreted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interpreted:     Interpreter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Interpreter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logger:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Interpreter } from \"xstate\";\n\nimport { SatelliteTask } from \".\";\n\nexport interface ProcessedStateMachine {\n    interpreted: Interpreter;\n    logger: any;\n}\n\n// export interface SendSatelliteTask {\n//     satelliteid: string;\n//     tasks: SatelliteTask[]; // Fix this\n// }\n\nexport interface SendEvent {\n    /** id of stateMachine that should handle the event */\n    to: string;\n    /** type of event (eg: 'event', '') */\n    type: string;\n    delay?: number;\n    /** satellite that stateMachine exists on */\n    satelliteId: string;\n}\n\nexport interface TriggerContext {\n    to: string;\n    satelliteId: string;\n    method: string;\n    args?: any;\n    callback?: (err: string) => void;\n}\n\nexport interface StoreKey {\n    to: string;\n    satelliteId: string;\n    key: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessedTree.html":{"url":"interfaces/ProcessedTree.html","title":"interface - ProcessedTree","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessedTree\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apimachine\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            busresponse\n                                        \n                                \n                                \n                                        \n                                            children\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorresponse\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            outresponse\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stateMachine\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apimachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apimachine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        busresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        busresponse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:         ProcessedTree[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProcessedTree[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorresponse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         StartOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StartOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outresponse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stateMachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stateMachine:         StateMachineOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateMachineOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    /** Target machine on API Sync */\n    apimachine?: string;\n    /** Method for stdout */\n    outresponse?: string;\n    /** Method for stderr maybe we don't use this. Only set error to true */\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    /** used for testing */\n    keepscript?: boolean;\n    /** Always use args as an array of strings instead of a string */\n    args?: string[];\n    /** Always use interpreter_args as an array of strings instead of a string */\n    interpreter_args?: string[];\n    /** Always use a number for max_memory_restart */\n    max_memory_restart?: number;\n    /** */\n    watch?: boolean;\n    /** We can't set a variable field so if watch array is set we use it instead of watch */\n    watch_array?: string[];\n\n    /** \n     * We can't set a gRPC field to any so we need to stringify them on API sync \n     * and parse them on the satellite */\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PublicInformation.html":{"url":"classes/PublicInformation.html","title":"class - PublicInformation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PublicInformation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/satellite.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                absoluteUrl\n                            \n                            \n                                common_project_id\n                            \n                            \n                                connected\n                            \n                            \n                                domain\n                            \n                            \n                                expiry_time_ms\n                            \n                            \n                                localip\n                            \n                            \n                                    Optional\n                                maxSimultaneousTasks\n                            \n                            \n                                    Optional\n                                newAbsoluteUrl\n                            \n                            \n                                    Optional\n                                ownerProvidedUrl\n                            \n                            \n                                port\n                            \n                            \n                                publicData\n                            \n                            \n                                    Optional\n                                publicIp\n                            \n                            \n                                remoteModules\n                            \n                            \n                                    Optional\n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        absoluteUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        common_project_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        domain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expiry_time_ms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        maxSimultaneousTasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        newAbsoluteUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ownerProvidedUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        port\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publicData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        publicIp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remoteModules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RemoteModule[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SatelliteDocument = Satellite & Document;\n\ninterface RemoteModule {\n    moduleId: string;\n    path: string;\n}\nclass PublicInformation {\n    @Prop()\n    publicData: boolean;\n\n    @Prop()\n    connected: boolean;\n\n    @Prop()\n    domain: string;\n\n    @Prop()\n    common_project_id: string;\n\n    @Prop({ type: Object })\n    remoteModules: RemoteModule[];\n\n    @Prop()\n    absoluteUrl: string;\n\n    @Prop()\n    localip: string;\n\n    @Prop()\n    port: string;\n\n    @Prop()\n    version?: string;\n\n    @Prop()\n    newAbsoluteUrl?: string;\n\n    @Prop()\n    expiry_time_ms: number;\n\n    @Prop()\n    ownerProvidedUrl?: string;\n\n    @Prop()\n    maxSimultaneousTasks?: number;\n\n    @Prop()\n    publicIp?: string;\n}\n\nclass AbsoluteUrlSettings {\n    @Prop()\n    origin: string; // automatic, fixed, owner\n\n    @Prop()\n    inactiveTimerMS: number; // Time in MS before Satellite gets unassigned\n\n    @Prop()\n    providedCerts?: boolean; // Does the owner provide their own certs\n\n    @Prop()\n    key?: string;\n\n    @Prop()\n    cert?: string;\n\n    @Prop()\n    fixedIp?: boolean;\n}\n\n\n@Schema({ collection: 'satellites' })\nexport class Satellite {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    labId: string;\n\n    @Prop()\n    type: string;\n\n    @Prop({ type: Object })\n    public: PublicInformation;\n\n    @Prop()\n    token: string;\n\n    @Prop({ type: Object })\n    auth: any;\n\n    @Prop({ type: Object })\n    sync: any;\n\n    @Prop({ type: Object })\n    absoluteUrlSettings: AbsoluteUrlSettings;\n\n    @Prop({ type: Object })\n    satMachines: any;\n\n    @Prop({ type: Object })\n    satTasks: any;\n\n    @Prop({ type: Object })\n    apiMachines: any;\n\n    @Prop()\n    scidapHome: string;\n\n    @Prop({ type: Array })\n    configOverwrites: any[];\n}\n\nexport const SatelliteSchema = SchemaFactory.createForClass(Satellite);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RemoteModule.html":{"url":"interfaces/RemoteModule.html","title":"interface - RemoteModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RemoteModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/satellite.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            moduleId\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        moduleId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moduleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SatelliteDocument = Satellite & Document;\n\ninterface RemoteModule {\n    moduleId: string;\n    path: string;\n}\nclass PublicInformation {\n    @Prop()\n    publicData: boolean;\n\n    @Prop()\n    connected: boolean;\n\n    @Prop()\n    domain: string;\n\n    @Prop()\n    common_project_id: string;\n\n    @Prop({ type: Object })\n    remoteModules: RemoteModule[];\n\n    @Prop()\n    absoluteUrl: string;\n\n    @Prop()\n    localip: string;\n\n    @Prop()\n    port: string;\n\n    @Prop()\n    version?: string;\n\n    @Prop()\n    newAbsoluteUrl?: string;\n\n    @Prop()\n    expiry_time_ms: number;\n\n    @Prop()\n    ownerProvidedUrl?: string;\n\n    @Prop()\n    maxSimultaneousTasks?: number;\n\n    @Prop()\n    publicIp?: string;\n}\n\nclass AbsoluteUrlSettings {\n    @Prop()\n    origin: string; // automatic, fixed, owner\n\n    @Prop()\n    inactiveTimerMS: number; // Time in MS before Satellite gets unassigned\n\n    @Prop()\n    providedCerts?: boolean; // Does the owner provide their own certs\n\n    @Prop()\n    key?: string;\n\n    @Prop()\n    cert?: string;\n\n    @Prop()\n    fixedIp?: boolean;\n}\n\n\n@Schema({ collection: 'satellites' })\nexport class Satellite {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    labId: string;\n\n    @Prop()\n    type: string;\n\n    @Prop({ type: Object })\n    public: PublicInformation;\n\n    @Prop()\n    token: string;\n\n    @Prop({ type: Object })\n    auth: any;\n\n    @Prop({ type: Object })\n    sync: any;\n\n    @Prop({ type: Object })\n    absoluteUrlSettings: AbsoluteUrlSettings;\n\n    @Prop({ type: Object })\n    satMachines: any;\n\n    @Prop({ type: Object })\n    satTasks: any;\n\n    @Prop({ type: Object })\n    apiMachines: any;\n\n    @Prop()\n    scidapHome: string;\n\n    @Prop({ type: Array })\n    configOverwrites: any[];\n}\n\nexport const SatelliteSchema = SchemaFactory.createForClass(Satellite);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sample.html":{"url":"classes/Sample.html","title":"class - Sample","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sample\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/sample.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                cwlId\n                            \n                            \n                                date\n                            \n                            \n                                inputs\n                            \n                            \n                                metadata\n                            \n                            \n                                outputs\n                            \n                            \n                                preview\n                            \n                            \n                                projectId\n                            \n                            \n                                projects\n                            \n                            \n                                satellite_id\n                            \n                            \n                                servicetags\n                            \n                            \n                                statistics\n                            \n                            \n                                    Optional\n                                templateId\n                            \n                            \n                                tmp_inputs\n                            \n                            \n                                upstream\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cwlId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outputs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preview\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        satellite_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        servicetags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statistics\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        templateId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tmp_inputs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upstream\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/sample.schema.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SampleDocument = Sample & Document;\n\nclass Date {\n    @Prop()\n    modified: number;\n}\n\n@Schema({ collection: 'samples' })\nexport class Sample {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    cwlId: string;\n\n    @Prop()\n    templateId?: string;\n\n    @Prop()\n    userId: string;\n\n    @Prop({ type: Object })\n    inputs: any;\n\n    @Prop({ type: Object })\n    upstream: any;\n\n    @Prop({ type: Object })\n    outputs: any;\n\n    @Prop({ type: Object })\n    preview: any;\n\n    @Prop()\n    projectId: string;\n\n    @Prop({ type: Object })\n    metadata: any;\n\n    @Prop()\n    projects: string[];\n\n    @Prop()\n    satellite_id: string;\n\n    @Prop()\n    servicetags: string[];\n\n    @Prop({ type: Object })\n    tmp_inputs: any;\n\n    @Prop({ type: Date })\n    date: Date;\n\n    @Prop({ type: Object })\n    statistics: any;\n}\n\nexport const SampleSchema = SchemaFactory.createForClass(Sample);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SatInterfaceController.html":{"url":"controllers/SatInterfaceController.html","title":"controller - SatInterfaceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SatInterfaceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/satInterface/satInterface.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api-sync\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAPIMachineForSatellite\n                            \n                            \n                                getSatelliteById\n                            \n                            \n                                getSatellites\n                            \n                            \n                                    Async\n                                removeAPIMachineForSatellite\n                            \n                            \n                                sendEvent\n                            \n                            \n                                sendTaskToSatellite\n                            \n                            \n                                    Async\n                                triggerContext\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createAPIMachineForSatellite\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAPIMachineForSatellite(id: string, machines: CreateAPIMachine[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('api-machine/:id')\n                \n            \n\n            \n                \n                    Defined in src/satInterface/satInterface.controller.ts:99\n                \n            \n\n\n            \n                \n                    Create a list of State Machines to make on the API for a satellite\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of Satellite\n\n                                    \n                                \n                                \n                                    machines\n                                    \n                                                CreateAPIMachine[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Machines to start on API for Satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A list of machines that are created on API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSatelliteById\n                        \n                    \n                \n            \n            \n                \ngetSatelliteById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('satellite-connections/:id')\n                \n            \n\n            \n                \n                    Defined in src/satInterface/satInterface.controller.ts:33\n                \n            \n\n\n            \n                \n                    Gets the Current Satellite Connection for a single Satellite\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of Satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { stateMachines: {}; connected: any; tasks: any; priorityTasks: any; maxTasks: any; }\n\n                    \n                    \n                        A Current Satellite Connection\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSatellites\n                        \n                    \n                \n            \n            \n                \ngetSatellites()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('satellite-connections')\n                \n            \n\n            \n                \n                    Defined in src/satInterface/satInterface.controller.ts:21\n                \n            \n\n\n            \n                \n                    Gets all Current Satellite Connections, probably won't use often\n\n\n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        All Current Satellite Connections\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAPIMachineForSatellite\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAPIMachineForSatellite(satId: string, machineId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('api-machine/:satid/:machineid')\n                \n            \n\n            \n                \n                    Defined in src/satInterface/satInterface.controller.ts:134\n                \n            \n\n\n            \n                \n                    Remove a machine from API-Sync by Satellite Id and Machine Name\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    satId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Satellite Id\n\n                                    \n                                \n                                \n                                    machineId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the Machine\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Removed boolean and potentially err message\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendEvent\n                        \n                    \n                \n            \n            \n                \nsendEvent(satId: string, machineId: string, event: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('api-machine/:satid/:machineid/event')\n                \n            \n\n            \n                \n                    Defined in src/satInterface/satInterface.controller.ts:158\n                \n            \n\n\n            \n                \n                    Send an event to a machine on API-Sync\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    satId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Satellite Id\n\n                                    \n                                \n                                \n                                    machineId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the Machine\n\n                                    \n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event to send\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        sent boolean and potentially err message\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendTaskToSatellite\n                        \n                    \n                \n            \n            \n                \nsendTaskToSatellite(id: string, tasks: SatelliteTask[], trees: DependencyTree[], commands: ServiceCommand[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('sat-message/:id')\n                \n            \n\n            \n                \n                    Defined in src/satInterface/satInterface.controller.ts:66\n                \n            \n\n\n            \n                \n                    Send a List of Tasks and Trees to a specific Satellite\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of Satellite\n\n                                    \n                                \n                                \n                                    tasks\n                                    \n                                                SatelliteTask[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tasks to send to the Satellite\n\n                                    \n                                \n                                \n                                    trees\n                                    \n                                                DependencyTree[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Machines to build on the Satellite\n\n                                    \n                                \n                                \n                                    commands\n                                    \n                                                ServiceCommand[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { taskId: any; }\n\n                    \n                    \n                        A Task Id of the task sent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        triggerContext\n                        \n                    \n                \n            \n            \n                \n                    \n                    triggerContext(satId: string, machineId: string, method: string, args: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('api-machine/:satid/:machineid/method')\n                \n            \n\n            \n                \n                    Defined in src/satInterface/satInterface.controller.ts:177\n                \n            \n\n\n            \n                \n                    Trigger a method on a machine on API-Sync\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    satId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Satellite Id\n\n                                    \n                                \n                                \n                                    machineId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the Machine\n\n                                    \n                                \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Method to trigger\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Optional Args for method\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        triggered boolean and potentially err message\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, forwardRef, Get, HttpException, HttpStatus, Inject, Param, Post } from \"@nestjs/common\";\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { CreateAPIMachine, SatelliteTask, DependencyTree, SatelliteConnection, ServiceCommand } from \"../interfaces\";\nimport { AppService } from \"../app.service\";\nimport Log from \"../lib/logger\";\n\n@Controller('api-sync')\nexport class SatInterfaceController {\n\n    constructor(\n        @Inject(forwardRef(() => AppService))\n        private _appService: AppService\n    ) {}\n\n    /**\n     * Gets all Current Satellite Connections, probably won't use often\n     * @returns All Current Satellite Connections\n     */\n    @Get('satellite-connections')\n    getSatellites(): { [key: string]: SatelliteConnection } {\n        Log.info('Getting all Satellite Connections');\n        const satellites = this._appService.satConnections;\n        return satellites;\n    }\n\n    /**\n     * Gets the Current Satellite Connection for a single Satellite\n     * @param id Id of Satellite\n     * @returns A Current Satellite Connection\n     */\n    @Get('satellite-connections/:id')\n    getSatelliteById(@Param('id') id: string) {\n        Log.info(`Getting Satellite Connection ${id}`);\n        if (!id) {\n            throw new HttpException('No ID provided', HttpStatus.BAD_REQUEST);\n        }\n        \n        const sat = this._appService.satConnections[id];\n\n        if (!sat) {\n            throw new HttpException('No Satellite Connection found for ID', HttpStatus.INTERNAL_SERVER_ERROR);\n        }\n        const { stateMachines, connected, tasks, priorityTasks, maxTasks } = sat;\n        const machines = [];\n        Object.keys(stateMachines).forEach((key) => {\n            const machine = stateMachines[key];\n            const uo = {\n                name: key,\n                context: machine.fsm.state.context,\n                state: machine.fsm.state.value,\n            };\n            machines.push(uo);\n        });\n        return { stateMachines: machines, connected, tasks, priorityTasks, maxTasks };\n    }\n\n    /**\n     * Send a List of Tasks and Trees to a specific Satellite\n     * @param id Id of Satellite\n     * @param tasks Tasks to send to the Satellite\n     * @param trees Machines to build on the Satellite\n     * @returns A Task Id of the task sent\n     */\n    @Post('sat-message/:id')\n    sendTaskToSatellite(@Param('id') id: string, @Body('tasks') tasks: SatelliteTask[], @Body('trees') trees: DependencyTree[], @Body('commands') commands: ServiceCommand[]) {\n        tasks = tasks || [];\n        trees = trees || [];\n        commands = commands || [];\n        Log.info(`Sending ${tasks.length} Tasks and ${trees.length} Trees and ${commands.length} Commands to ${id}`);\n        if (!id) {\n            throw new HttpException('No ID provided', HttpStatus.BAD_REQUEST);\n        }\n        \n        if (!tasks.length && !trees.length && !commands.length) {\n            throw new HttpException('No Trees and No Tasks', HttpStatus.BAD_REQUEST);\n        }\n\n        const sat = this._appService.satConnections[id];\n        if (!sat) {\n            throw new HttpException('No Satellite Connection found for ID', HttpStatus.INTERNAL_SERVER_ERROR);\n        }\n        \n        const taskId = uuidv4();\n        this._appService.sendToSat$.next({ taskId, tasks, trees, commands, satelliteid: id });\n        Log.info(`Task ${taskId} sent to Satellite ${id}`);\n        return {\n            taskId,\n        };\n    }\n\n    /**\n     * Create a list of State Machines to make on the API for a satellite\n     * @param id Id of Satellite\n     * @param machines Machines to start on API for Satellite\n     * @returns A list of machines that are created on API\n     */\n    @Post('api-machine/:id')\n    async createAPIMachineForSatellite(@Param('id') id: string, @Body('machines') machines: CreateAPIMachine[]): Promise {\n        machines = machines || [];\n        Log.info(`Sending ${machines.length} Machines to Connection for ${id}`);\n        if (!id) {\n            throw new HttpException('No ID provided', HttpStatus.BAD_REQUEST);\n        }\n        \n        if (!machines.length) {\n            throw new HttpException('No Trees and No Tasks', HttpStatus.BAD_REQUEST);\n        }\n\n        const sat = this._appService.satConnections[id];\n        if (!sat) {\n            throw new HttpException('No Satellite Connection found for ID', HttpStatus.INTERNAL_SERVER_ERROR);\n        }\n\n        const created: { [key: string]: boolean } = {};\n        machines.forEach((machine) => {\n            created[machine.config.id] = false;\n            const callback = () => created[machine.config.id] = true;\n            this._appService.createFSM.next({ ...machine, satelliteId: id, callback });\n        });\n        Log.info(`Attempting to start ${Object.keys(created).length} Machines`);\n        await new Promise((resolve) => setTimeout(() => resolve(true), 2000));\n        Log.info(`Successfully started ${Object.keys(created).filter((k) => created[k]).length} Machines`);\n        return created;\n    }\n\n    /**\n     * Remove a machine from API-Sync by Satellite Id and Machine Name\n     * @param satId Satellite Id\n     * @param machineId Name of the Machine\n     * @returns Removed boolean and potentially err message\n     */\n    @Delete('api-machine/:satid/:machineid')\n    async removeAPIMachineForSatellite(@Param('satid') satId: string, @Param('machineid') machineId: string): Promise {\n        Log.info(`Attempting to remove ${machineId} from ${satId}`);\n        const err: string = await new Promise((resolve) => {\n            this._appService.removeFSM.next({ satelliteId: satId, machine: machineId, callback: (msg) => resolve(msg)});\n        });\n        if (err) {\n            return {\n                removed: false,\n                err\n            };\n        }\n        return {\n            removed: true\n        };\n    }\n\n    /**\n     * Send an event to a machine on API-Sync\n     * @param satId Satellite Id\n     * @param machineId Name of the Machine\n     * @param event Event to send\n     * @returns sent boolean and potentially err message\n     */\n    @Post('api-machine/:satid/:machineid/event')\n    sendEvent(@Param('satid') satId: string, @Param('machineid') machineId: string, @Body('event') event: string): { sent: boolean; err?: string } {\n        Log.info(`Attempting to send ${event} to ${machineId} on ${satId}`);\n        try {\n            this._appService.sendToAPI.next({ satelliteId: satId, to: machineId, type: event });\n        } catch (err) {\n            return { sent: false, err }\n        }\n        return { sent: true }\n    }\n\n    /**\n     * Trigger a method on a machine on API-Sync\n     * @param satId Satellite Id\n     * @param machineId Name of the Machine\n     * @param method Method to trigger\n     * @param args Optional Args for method\n     * @returns triggered boolean and potentially err message\n     */\n     @Post('api-machine/:satid/:machineid/method')\n     async triggerContext(@Param('satid') satId: string, @Param('machineid') machineId: string, @Body('method') method: string, @Body('args') args: any): Promise {\n        Log.info(`Attempting to trigger ${method} on ${machineId} on ${satId}`);\n        try {\n            const err: string = await new Promise((resolve) => {\n                this._appService.triggerContext.next({ satelliteId: satId, to: machineId, method, args, callback: (i) => resolve(i) });\n            });\n            if (err) {\n                return { triggered: false, err };\n            }\n            return { triggered: true };\n        } catch (err) {\n            return { triggered: false, err };\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SatInterfaceModule.html":{"url":"modules/SatInterfaceModule.html","title":"module - SatInterfaceModule","body":"\n                   \n\n\n\n\n    Modules\n    SatInterfaceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/satInterface/satInterface.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            SatInterfaceController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AppModule } from '../app.module';\nimport { SatInterfaceController } from './satInterface.controller';\n\n@Module({\n    imports: [forwardRef(() => AppModule)],\n    controllers: [SatInterfaceController],\n})\nexport class SatInterfaceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Satellite.html":{"url":"classes/Satellite.html","title":"class - Satellite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Satellite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/satellite.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                absoluteUrlSettings\n                            \n                            \n                                apiMachines\n                            \n                            \n                                auth\n                            \n                            \n                                configOverwrites\n                            \n                            \n                                labId\n                            \n                            \n                                public\n                            \n                            \n                                satMachines\n                            \n                            \n                                satTasks\n                            \n                            \n                                scidapHome\n                            \n                            \n                                sync\n                            \n                            \n                                token\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        absoluteUrlSettings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbsoluteUrlSettings\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiMachines\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configOverwrites\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        public\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PublicInformation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        satMachines\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        satTasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scidapHome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sync\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satellite.schema.ts:84\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SatelliteDocument = Satellite & Document;\n\ninterface RemoteModule {\n    moduleId: string;\n    path: string;\n}\nclass PublicInformation {\n    @Prop()\n    publicData: boolean;\n\n    @Prop()\n    connected: boolean;\n\n    @Prop()\n    domain: string;\n\n    @Prop()\n    common_project_id: string;\n\n    @Prop({ type: Object })\n    remoteModules: RemoteModule[];\n\n    @Prop()\n    absoluteUrl: string;\n\n    @Prop()\n    localip: string;\n\n    @Prop()\n    port: string;\n\n    @Prop()\n    version?: string;\n\n    @Prop()\n    newAbsoluteUrl?: string;\n\n    @Prop()\n    expiry_time_ms: number;\n\n    @Prop()\n    ownerProvidedUrl?: string;\n\n    @Prop()\n    maxSimultaneousTasks?: number;\n\n    @Prop()\n    publicIp?: string;\n}\n\nclass AbsoluteUrlSettings {\n    @Prop()\n    origin: string; // automatic, fixed, owner\n\n    @Prop()\n    inactiveTimerMS: number; // Time in MS before Satellite gets unassigned\n\n    @Prop()\n    providedCerts?: boolean; // Does the owner provide their own certs\n\n    @Prop()\n    key?: string;\n\n    @Prop()\n    cert?: string;\n\n    @Prop()\n    fixedIp?: boolean;\n}\n\n\n@Schema({ collection: 'satellites' })\nexport class Satellite {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    labId: string;\n\n    @Prop()\n    type: string;\n\n    @Prop({ type: Object })\n    public: PublicInformation;\n\n    @Prop()\n    token: string;\n\n    @Prop({ type: Object })\n    auth: any;\n\n    @Prop({ type: Object })\n    sync: any;\n\n    @Prop({ type: Object })\n    absoluteUrlSettings: AbsoluteUrlSettings;\n\n    @Prop({ type: Object })\n    satMachines: any;\n\n    @Prop({ type: Object })\n    satTasks: any;\n\n    @Prop({ type: Object })\n    apiMachines: any;\n\n    @Prop()\n    scidapHome: string;\n\n    @Prop({ type: Array })\n    configOverwrites: any[];\n}\n\nexport const SatelliteSchema = SchemaFactory.createForClass(Satellite);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SatelliteConnection.html":{"url":"interfaces/SatelliteConnection.html","title":"interface - SatelliteConnection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SatelliteConnection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/connection.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                representation of a satellites connection to the server\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            connected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            keepAlivePingTimer\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            keepAliveTimer\n                                        \n                                \n                                \n                                        \n                                            maxTasks\n                                        \n                                \n                                \n                                        \n                                            priorityTasks\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            receievedResponse\n                                        \n                                \n                                \n                                        \n                                            satInformation\n                                        \n                                \n                                \n                                        \n                                            stateMachines\n                                        \n                                \n                                \n                                        \n                                            stream\n                                        \n                                \n                                \n                                        \n                                            tasks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepAlivePingTimer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keepAlivePingTimer:     NodeJS.Timeout\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NodeJS.Timeout\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepAliveTimer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keepAliveTimer:     NodeJS.Timeout\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NodeJS.Timeout\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxTasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxTasks:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priorityTasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priorityTasks:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        receievedResponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        receievedResponse:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    used for testing\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        satInformation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        satInformation:         Satellite\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Satellite\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stateMachines\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stateMachines:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stream\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stream:         SciDapDuplexStream\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SciDapDuplexStream\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tasks:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ClientDuplexStream, Metadata } from \"grpc\";\nimport { Satellite } from \"../mongoConnection/schemas/satellite.schema\";\nimport { Interpreter } from \"xstate\";\n\nimport { APISyncMessage, SatelliteMessage } from \".\";\n\n/**\n * representation of a satellites connection to the server\n */\nexport interface SatelliteConnection {\n    connected: boolean;\n    stream: SciDapDuplexStream;\n    stateMachines: { [key: string]: APISyncStateMachineObject };\n    tasks: string[];\n    priorityTasks: string[];\n    maxTasks: number;\n    satInformation: Satellite;\n    keepAliveTimer?: NodeJS.Timeout;\n    keepAlivePingTimer?: NodeJS.Timeout;\n    /** used for testing */\n    receievedResponse?: boolean;\n}\n\nexport interface APISyncStateMachineObject {\n    fsm: Interpreter;\n    logger: any;\n}\n\nexport interface SciDapDuplexStream extends ClientDuplexStream {\n    metadata: Metadata;\n}\n\nexport interface MessageToSatellite extends APISyncMessage {\n    satelliteId: string;\n}\n\nexport interface LocalFiles {\n    show: boolean;\n    collection: {\n        name: string;\n        path: string;\n    }[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SatelliteMachine.html":{"url":"classes/SatelliteMachine.html","title":"class - SatelliteMachine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SatelliteMachine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/satelliteMachines.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                    Optional\n                                children\n                            \n                            \n                                inUse\n                            \n                            \n                                    Optional\n                                onlymachine\n                            \n                            \n                                    Optional\n                                options\n                            \n                            \n                                    Optional\n                                statemachine\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SatelliteMachine[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inUse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        onlymachine\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        statemachine\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UnProcessedStateMachine\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:67\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SatelliteMachineDocument = SatelliteMachine & Document;\n\nclass OnOptions {\n    @Prop()\n    target?: string;\n\n    @Prop()\n    actions?: string[];\n\n    @Prop()\n    cond?: string;\n}\n\nclass StateOptions {\n    @Prop()\n    entry: string[];\n\n    @Prop()\n    exit: string[];\n\n    @Prop({type: Object, of: OnOptions})\n    on: {\n        [key: string]: OnOptions;\n    }\n}\n\nclass UnProcessedStateMachine {\n    @Prop({ type: Object, of: StateOptions })\n    states?: {\n        [key: string]: StateOptions;\n    }\n\n    @Prop({ type: Object, of: OnOptions })\n    on?: {\n        [key: string]: OnOptions;\n    }\n\n    @Prop({ type: Object, of: String })\n    guards?: {\n        [key: string]: string;\n    }\n\n    @Prop({ type: Object, of: String })\n    actions?: {\n        [key: string]: string;\n    }\n}\n\n@Schema({ collection: 'satellite_machines', minimize: false })\nexport class SatelliteMachine {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    children?: SatelliteMachine[];\n\n    @Prop({ type: Object })\n    options?: any;\n    \n    @Prop()\n    statemachine?: UnProcessedStateMachine;\n\n    @Prop()\n    onlymachine?: boolean;\n}\n\nexport const SatelliteMachineSchema = SchemaFactory.createForClass(SatelliteMachine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SatelliteMachineService.html":{"url":"injectables/SatelliteMachineService.html","title":"injectable - SatelliteMachineService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SatelliteMachineService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/satelliteMachines.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getInitialMachines\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_satelliteMachineModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/mongoConnection/satelliteMachines.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _satelliteMachineModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getInitialMachines\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitialMachines()\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satelliteMachines.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\nimport { SatelliteMachine, SatelliteMachineDocument } from './schemas/satelliteMachines.schema';\n\n@Injectable()\nexport class SatelliteMachineService {\n    constructor(\n        @InjectModel(SatelliteMachine.name)\n        private _satelliteMachineModel: Model,\n    ) {}\n\n    async getInitialMachines(): Promise {\n        return await (await this._satelliteMachineModel.find({ inUse: true }).exec()).map((d) => d.toObject());\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SatelliteMessage.html":{"url":"interfaces/SatelliteMessage.html","title":"interface - SatelliteMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SatelliteMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            keepalive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            messages\n                                        \n                                \n                                \n                                        \n                                            sender\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            taskid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        keepalive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keepalive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messages:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taskid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        taskid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    /** Target machine on API Sync */\n    apimachine?: string;\n    /** Method for stdout */\n    outresponse?: string;\n    /** Method for stderr maybe we don't use this. Only set error to true */\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    /** used for testing */\n    keepscript?: boolean;\n    /** Always use args as an array of strings instead of a string */\n    args?: string[];\n    /** Always use interpreter_args as an array of strings instead of a string */\n    interpreter_args?: string[];\n    /** Always use a number for max_memory_restart */\n    max_memory_restart?: number;\n    /** */\n    watch?: boolean;\n    /** We can't set a variable field so if watch array is set we use it instead of watch */\n    watch_array?: string[];\n\n    /** \n     * We can't set a gRPC field to any so we need to stringify them on API sync \n     * and parse them on the satellite */\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SatelliteOutput.html":{"url":"interfaces/SatelliteOutput.html","title":"interface - SatelliteOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SatelliteOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            method\n                                        \n                                \n                                \n                                        \n                                            output\n                                        \n                                \n                                \n                                        \n                                            satellite\n                                        \n                                \n                                \n                                        \n                                            targetmachine\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        satellite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        satellite:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetmachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetmachine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    /** Target machine on API Sync */\n    apimachine?: string;\n    /** Method for stdout */\n    outresponse?: string;\n    /** Method for stderr maybe we don't use this. Only set error to true */\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    /** used for testing */\n    keepscript?: boolean;\n    /** Always use args as an array of strings instead of a string */\n    args?: string[];\n    /** Always use interpreter_args as an array of strings instead of a string */\n    interpreter_args?: string[];\n    /** Always use a number for max_memory_restart */\n    max_memory_restart?: number;\n    /** */\n    watch?: boolean;\n    /** We can't set a variable field so if watch array is set we use it instead of watch */\n    watch_array?: string[];\n\n    /** \n     * We can't set a gRPC field to any so we need to stringify them on API sync \n     * and parse them on the satellite */\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SatelliteService.html":{"url":"injectables/SatelliteService.html","title":"injectable - SatelliteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SatelliteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/satellite.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                satelliteModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canLink\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                getByToken\n                            \n                            \n                                    Async\n                                getUnusedSatellites\n                            \n                            \n                                    Async\n                                updateConnectedStatus\n                            \n                            \n                                    Async\n                                updateIPs\n                            \n                            \n                                    Async\n                                updateLocalFiles\n                            \n                            \n                                    Async\n                                updateNewAbsoluteUrl\n                            \n                            \n                                    Public\n                                    Async\n                                updateOne\n                            \n                            \n                                    Async\n                                updateTime\n                            \n                            \n                                    Async\n                                updateVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(satelliteModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/mongoConnection/satellite.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        satelliteModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    canLink(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satellite.service.ts:56\n                \n            \n\n\n            \n                \n                    Check if the satellite exists and can establish a link\n This is where we would check if satellite can connect\n THis is used by the gRPC Guard\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        unique JWT for satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satellite.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satellite.service.ts:30\n                \n            \n\n\n            \n                \n                    Get a satellite by its token\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        unique JWT for satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUnusedSatellites\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnusedSatellites()\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satellite.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateConnectedStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateConnectedStatus(satId: string, connected: boolean, publicIP?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satellite.service.ts:168\n                \n            \n\n\n            \n                \n                    Updates the Connected Status of a Satellite and also set's the public IP address where it is conencting from\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    satId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the Satellite\n\n                                    \n                                \n                                \n                                    connected\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the Satellite is connected\n\n                                    \n                                \n                                \n                                    publicIP\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Public Facing IP Address of Satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateIPs\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIPs(satId: string, ips: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satellite.service.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    satId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of Satellite to Update\n\n                                    \n                                \n                                \n                                    ips\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Local IP Address of Satellite (used to update Digital Ocean Record)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Updated Satellite\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateLocalFiles\n                        \n                    \n                \n            \n            \n                \n                    This is old, we should be doing all of this from central server not other way\n                \n            \n            \n                \n                    \n                    updateLocalFiles(_id: string, localFiles: LocalFiles)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satellite.service.ts:86\n                \n            \n\n\n            \n                \n                    Update the version of satellite in DB to current\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of satellite\n\n                                    \n                                \n                                \n                                    localFiles\n                                    \n                                                LocalFiles\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateNewAbsoluteUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateNewAbsoluteUrl(satId: string, newUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satellite.service.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    satId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(_id: string, updatedObject: any)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satellite.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatedObject\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateTime\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTime(_id: string, disconnect: boolean, timeToExpire?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satellite.service.ts:117\n                \n            \n\n\n            \n                \n                    Updates the expiry_time_ms of a satellite to a time two weeks from now\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        satellite Id\n\n                                    \n                                \n                                \n                                    disconnect\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        boolean for if the satellite is disconnecting\n\n                                    \n                                \n                                \n                                    timeToExpire\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        number time in MS till expiration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateVersion\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateVersion(_id: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satellite.service.ts:72\n                \n            \n\n\n            \n                \n                    Update the version of satellite in DB to current\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of satellite\n\n                                    \n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        satelliteModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel(Satellite.name)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/satellite.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { LocalFiles } from '../interfaces';\n\nimport { Satellite, SatelliteDocument } from './schemas/satellite.schema';\nimport Log from '../lib/logger';\n\n@Injectable()\nexport class SatelliteService {\n    constructor(\n        @InjectModel(Satellite.name)\n        public satelliteModel: Model,\n    ) {}\n\n\n    public async updateOne(_id: string, updatedObject: any) {\n        try {\n            const sat = await this.satelliteModel.updateOne({ _id }, { $set: updatedObject });\n            return { upserted: sat.nModified };\n        } catch (err) {\n            return { err };\n        }\n    }\n\n    /**\n     * Get a satellite by its token\n     * @param token unique JWT for satellite\n     */\n    async getByToken(token: string): Promise {\n        try {\n            const satellite = await this.satelliteModel.findOne({ token });\n            if (!satellite.absoluteUrlSettings) {\n                const settings = {\n                    origin: 'automatic',\n                    inactiveTimerMS: 14 * 24 * 60 * 60 * 1000,\n                };\n                return await this.satelliteModel.findByIdAndUpdate(satellite._id, { $set: { absoluteUrlSettings: settings } }, { new: true, useFindAndModify: false });\n            }\n            return satellite;\n        } catch (err) {\n            throw err;\n        }\n    }\n\n    async getById(_id: string) {\n        return this.satelliteModel.findOne({ _id });\n    }\n\n    /**\n     * Check if the satellite exists and can establish a link\n     *  This is where we would check if satellite can connect\n     *  THis is used by the gRPC Guard\n     * @param token unique JWT for satellite\n     */\n    async canLink(token: string): Promise {\n        try {\n            const satellite = await this.satelliteModel.findOne({ token });\n            if (!satellite) throw Error(`Satellite not found token: ${token}`);\n            // TODO: Check all the other things you want to check\n            return true;\n        } catch (err) {\n            throw err;\n        }\n    }\n\n    /**\n     * Update the version of satellite in DB to current\n     * @param _id of satellite\n     * @param version of satellite\n     */\n    async updateVersion(_id: string, version: string) {\n        try {\n            return this.satelliteModel.findOneAndUpdate({ _id }, { $set: { 'public.version': version } }, { useFindAndModify: false });\n        } catch (err) {\n            throw err;\n        }\n    }\n\n    /**\n     * Update the version of satellite in DB to current\n     * @param _id of satellite\n     * @param version of satellite\n     * @deprecated This is old, we should be doing all of this from central server not other way\n     */\n    async updateLocalFiles(_id: string, localFiles: LocalFiles) {\n        try {\n            const sample = await this.satelliteModel.findById(_id);\n            const remotes = sample.public.remoteModules;\n            let updated = false;\n            const updatedRemotes = remotes.map((remote) => {\n                const updatedRemote = { ...remote };\n                if (updatedRemote.moduleId === 'localfiles') {\n                    updatedRemote.path = localFiles.collection[0].path;\n                    updated = true;\n                }\n                return updatedRemote;\n            });\n            if (!updated) updatedRemotes.push({ moduleId: 'localfiles', path: localFiles.collection[0].path });\n\n            return this.satelliteModel.findOneAndUpdate(\n                { _id },\n                { $set: { 'public.showLocalFiles': localFiles.show, 'public.remoteModules': updatedRemotes } },\n                { useFindAndModify: false },\n            );\n        } catch (err) {\n            throw err;\n        }\n    }\n\n    /**\n     * Updates the expiry_time_ms of a satellite to a time two weeks from now\n     * @param _id satellite Id\n     * @param disconnect boolean for if the satellite is disconnecting\n     * @param timeToExpire number time in MS till expiration\n     */\n    async updateTime(_id: string, disconnect: boolean, timeToExpire?: number) {\n        try {\n            let expiryDate = Infinity;\n            if (disconnect) {\n                if (!!timeToExpire) {\n                    expiryDate = new Date().getTime() + timeToExpire;\n                } else {\n                    const twoWeeksMS = 14 * 24 * 60 * 60 * 1000;\n                    expiryDate = new Date().getTime() + twoWeeksMS;\n                }\n            }\n            const doc = await this.satelliteModel.findOneAndUpdate({ _id }, { $set: { 'public.expiry_time_ms': expiryDate } }, { useFindAndModify: false });\n            if (!doc) {\n                throw new Error('Satellite Not Found');\n            }\n            return new Date(expiryDate);\n        } catch (err) {\n            throw err;\n        }\n    }\n\n    async getUnusedSatellites(): Promise {\n        try {\n            const timeMS = new Date().getTime();\n            return await this.satelliteModel.find({ 'public.expiry_time_ms': { $lte: timeMS } }).exec();\n        } catch (err) {\n            throw err;\n        }\n    }\n\n    /**\n     * \n     * @param satId Id of Satellite to Update\n     * @param ips Local IP Address of Satellite (used to update Digital Ocean Record)\n     * @returns Updated Satellite\n     */\n    async updateIPs(satId: string, ips: string) {\n        try {\n            return this.satelliteModel.findOneAndUpdate({ _id: satId }, { $set: { 'public.localip': ips } }, { useFindAndModify: false });\n        } catch (err) {\n            throw err;\n        }\n    }\n\n    /**\n     * Updates the Connected Status of a Satellite and also set's the public IP address where it is conencting from\n     * @param satId Id of the Satellite\n     * @param connected Whether the Satellite is connected\n     * @param publicIP Public Facing IP Address of Satellite\n     * @returns \n     */\n    async updateConnectedStatus(satId: string, connected: boolean, publicIP?: string): Promise {\n        try {\n            if (publicIP) {\n                await this.satelliteModel.findByIdAndUpdate(satId, { $set: { 'public.connected': connected, 'public.publicIp': publicIP } }, { useFindAndModify: false });\n            }\n            await this.satelliteModel.findByIdAndUpdate(satId, { $set: { 'public.connected': connected } }, { useFindAndModify: false });\n            return true;\n        } catch (err) {\n            Log.error(`Failed to update connection status for ${satId}: ${err}`);\n            return false;\n        }\n    }\n\n    async updateNewAbsoluteUrl(satId: string, newUrl: string) {\n        try {\n            if (!newUrl.includes('https://')) {\n                newUrl = 'https://' + newUrl;\n            }\n            return this.satelliteModel.findByIdAndUpdate(satId, { $set: { 'public.newAbsoluteUrl': newUrl } }, { useFindAndModify: false });\n        } catch (err) {\n            throw err;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SatelliteTask.html":{"url":"classes/SatelliteTask.html","title":"class - SatelliteTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SatelliteTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/satelliteTask.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                command\n                            \n                            \n                                    Optional\n                                errorresponse\n                            \n                            \n                                inUse\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                options\n                            \n                            \n                                    Optional\n                                outresponse\n                            \n                            \n                                    Optional\n                                savelogs\n                            \n                            \n                                    Optional\n                                scriptstring\n                            \n                            \n                                    Optional\n                                streamresponse\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteTask.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        command\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteTask.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        errorresponse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteTask.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inUse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteTask.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteTask.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteTask.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        outresponse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteTask.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        savelogs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteTask.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        scriptstring\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteTask.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        streamresponse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteTask.schema.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SatelliteTaskDocument = SatelliteTask & Document;\n\n@Schema({ collection: 'satellite_tasks', minimize: false })\nexport class SatelliteTask {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    name: string;\n\n    @Prop()\n    command: string;\n\n    @Prop({ type: Object })\n    options?: any;\n\n    @Prop()\n    streamresponse?: boolean;\n\n    @Prop()\n    scriptstring?: string;\n\n    @Prop()\n    outresponse?: string;\n\n    @Prop()\n    errorresponse?: string;\n\n    @Prop()\n    savelogs?: boolean;\n}\n\nexport const SatelliteTaskSchema = SchemaFactory.createForClass(SatelliteTask);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SatelliteTasksService.html":{"url":"injectables/SatelliteTasksService.html","title":"injectable - SatelliteTasksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SatelliteTasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/satelliteTasks.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getInitialTasks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_satelliteTaskModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/mongoConnection/satelliteTasks.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _satelliteTaskModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getInitialTasks\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitialTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/satelliteTasks.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\nimport { SatelliteTask, SatelliteTaskDocument } from './schemas/satelliteTask.schema';\n\n@Injectable()\nexport class SatelliteTasksService {\n    constructor(\n        @InjectModel(SatelliteTask.name)\n        private _satelliteTaskModel: Model,\n    ) {}\n\n    async getInitialTasks(): Promise {\n        return await (await this._satelliteTaskModel.find({ inUse: true }).exec()).map((d) => d.toObject());\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SciDapDuplexStream.html":{"url":"interfaces/SciDapDuplexStream.html","title":"interface - SciDapDuplexStream","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SciDapDuplexStream\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/connection.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ClientDuplexStream\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            metadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         Metadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Metadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ClientDuplexStream, Metadata } from \"grpc\";\nimport { Satellite } from \"../mongoConnection/schemas/satellite.schema\";\nimport { Interpreter } from \"xstate\";\n\nimport { APISyncMessage, SatelliteMessage } from \".\";\n\n/**\n * representation of a satellites connection to the server\n */\nexport interface SatelliteConnection {\n    connected: boolean;\n    stream: SciDapDuplexStream;\n    stateMachines: { [key: string]: APISyncStateMachineObject };\n    tasks: string[];\n    priorityTasks: string[];\n    maxTasks: number;\n    satInformation: Satellite;\n    keepAliveTimer?: NodeJS.Timeout;\n    keepAlivePingTimer?: NodeJS.Timeout;\n    /** used for testing */\n    receievedResponse?: boolean;\n}\n\nexport interface APISyncStateMachineObject {\n    fsm: Interpreter;\n    logger: any;\n}\n\nexport interface SciDapDuplexStream extends ClientDuplexStream {\n    metadata: Metadata;\n}\n\nexport interface MessageToSatellite extends APISyncMessage {\n    satelliteId: string;\n}\n\nexport interface LocalFiles {\n    show: boolean;\n    collection: {\n        name: string;\n        path: string;\n    }[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendEvent.html":{"url":"interfaces/SendEvent.html","title":"interface - SendEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SendEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/stateMachines.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            delay\n                                        \n                                \n                                \n                                        \n                                            satelliteId\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        delay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        satelliteId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        satelliteId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    satellite that stateMachine exists on\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    id of stateMachine that should handle the event\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    type of event (eg: 'event', '')\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Interpreter } from \"xstate\";\n\nimport { SatelliteTask } from \".\";\n\nexport interface ProcessedStateMachine {\n    interpreted: Interpreter;\n    logger: any;\n}\n\n// export interface SendSatelliteTask {\n//     satelliteid: string;\n//     tasks: SatelliteTask[]; // Fix this\n// }\n\nexport interface SendEvent {\n    /** id of stateMachine that should handle the event */\n    to: string;\n    /** type of event (eg: 'event', '') */\n    type: string;\n    delay?: number;\n    /** satellite that stateMachine exists on */\n    satelliteId: string;\n}\n\nexport interface TriggerContext {\n    to: string;\n    satelliteId: string;\n    method: string;\n    args?: any;\n    callback?: (err: string) => void;\n}\n\nexport interface StoreKey {\n    to: string;\n    satelliteId: string;\n    key: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceCommand.html":{"url":"interfaces/ServiceCommand.html","title":"interface - ServiceCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ServiceCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bus\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            command\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stdin\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bus:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stdin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stdin:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    /** Target machine on API Sync */\n    apimachine?: string;\n    /** Method for stdout */\n    outresponse?: string;\n    /** Method for stderr maybe we don't use this. Only set error to true */\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    /** used for testing */\n    keepscript?: boolean;\n    /** Always use args as an array of strings instead of a string */\n    args?: string[];\n    /** Always use interpreter_args as an array of strings instead of a string */\n    interpreter_args?: string[];\n    /** Always use a number for max_memory_restart */\n    max_memory_restart?: number;\n    /** */\n    watch?: boolean;\n    /** We can't set a variable field so if watch array is set we use it instead of watch */\n    watch_array?: string[];\n\n    /** \n     * We can't set a gRPC field to any so we need to stringify them on API sync \n     * and parse them on the satellite */\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceTag.html":{"url":"classes/ServiceTag.html","title":"class - ServiceTag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceTag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/serviceTag.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                name\n                            \n                            \n                                order\n                            \n                            \n                                priority\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/serviceTag.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/serviceTag.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/serviceTag.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/serviceTag.schema.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type ServiceTagDocument = ServiceTag & Document;\n\n@Schema({ collection: 'service_tags' })\nexport class ServiceTag {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    name: string;\n\n    @Prop()\n    order: string;\n\n    @Prop()\n    priority: boolean;\n}\n\nexport const ServiceTagSchema = SchemaFactory.createForClass(ServiceTag);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StartOptions.html":{"url":"interfaces/StartOptions.html","title":"interface - StartOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StartOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PM2StartOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            autorestart\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            keepscript\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            namespace\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autorestart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autorestart:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepscript\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keepscript:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    /** Target machine on API Sync */\n    apimachine?: string;\n    /** Method for stdout */\n    outresponse?: string;\n    /** Method for stderr maybe we don't use this. Only set error to true */\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    /** used for testing */\n    keepscript?: boolean;\n    /** Always use args as an array of strings instead of a string */\n    args?: string[];\n    /** Always use interpreter_args as an array of strings instead of a string */\n    interpreter_args?: string[];\n    /** Always use a number for max_memory_restart */\n    max_memory_restart?: number;\n    /** */\n    watch?: boolean;\n    /** We can't set a variable field so if watch array is set we use it instead of watch */\n    watch_array?: string[];\n\n    /** \n     * We can't set a gRPC field to any so we need to stringify them on API sync \n     * and parse them on the satellite */\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/State.html":{"url":"classes/State.html","title":"class - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/apiSyncMachines.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                entry\n                            \n                            \n                                    Optional\n                                exit\n                            \n                            \n                                    Optional\n                                on\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        entry\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        exit\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        on\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, of: Type})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type ApiSyncMachineDocument = ApiSyncMachine & Document;\n\nclass Type {\n    @Prop()\n    target?: string;\n\n    @Prop()\n    cond?: string;\n\n    @Prop()\n    actions?: string[];\n}\n\nclass State {\n    @Prop()\n    entry?: string[];\n\n    @Prop()\n    exit?: string[];\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Config {\n    @Prop()\n    id: string;\n\n    @Prop()\n    initial: string;\n\n    @Prop({type: Object})\n    context: {\n        [key: string]: any;\n    };\n\n    @Prop({type: Object, of: State})\n    states: {\n        [key: string]: State;\n    }\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Options {\n    @Prop({type: Object, of: String})\n    actions?: {\n        [key: string]: string;\n    }\n\n    @Prop({type: Object, of: String})\n    guards?: {\n        [key: string]: string;\n    }\n}\n\nexport class MachineCommand {\n    @Prop()\n    target: string;\n\n    @Prop()\n    label: string;\n\n    @Prop()\n    args?: string;\n\n    @Prop()\n    style?: string;\n}\n\n@Schema({ collection: 'api_sync_machines', minimize: false })\nexport class ApiSyncMachine {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    applyTo: string[];\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    type: string;\n\n    @Prop()\n    commands?: MachineCommand[];\n\n    @Prop()\n    config: Config;\n    \n    @Prop()\n    options: Options;\n\n    @Prop({type: Object, of: String})\n    transitions: {\n        [key: string]: string;\n    };\n}\n\nexport const ApiSyncMachineSchema = SchemaFactory.createForClass(ApiSyncMachine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StateMachineModules.html":{"url":"modules/StateMachineModules.html","title":"module - StateMachineModules","body":"\n                   \n\n\n\n\n    Modules\n    StateMachineModules\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StateMachineModules\n\n\n\ncluster_StateMachineModules_providers\n\n\n\ncluster_StateMachineModules_imports\n\n\n\ncluster_StateMachineModules_exports\n\n\n\n\nMongoConnectionModule\n\nMongoConnectionModule\n\n\n\nStateMachineModules\n\nStateMachineModules\n\nStateMachineModules -->\n\nMongoConnectionModule->StateMachineModules\n\n\n\n\n\nStateMachinesService \n\nStateMachinesService \n\nStateMachinesService  -->\n\nStateMachineModules->StateMachinesService \n\n\n\n\n\nStateMachinesService\n\nStateMachinesService\n\nStateMachineModules -->\n\nStateMachinesService->StateMachineModules\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stateMachines/stateMachines.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StateMachinesService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MongoConnectionModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StateMachinesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { forwardRef, Module } from '@nestjs/common';\n\nimport { AppModule } from '../app.module';\nimport { MongoConnectionModule } from '../mongoConnection/mongoConnection.module';\nimport { StateMachinesService } from './stateMachines.service';\n\n@Module({\n    imports: [\n        HttpModule,\n        MongoConnectionModule,\n        forwardRef(() => AppModule),\n    ],\n    providers: [StateMachinesService],\n    exports: [StateMachinesService],\n})\nexport class StateMachineModules {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StateMachineOptions.html":{"url":"interfaces/StateMachineOptions.html","title":"interface - StateMachineOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StateMachineOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            actions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            guards\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            on\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            states\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guards\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        guards:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        on\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        on:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        states\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        states:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    /** Target machine on API Sync */\n    apimachine?: string;\n    /** Method for stdout */\n    outresponse?: string;\n    /** Method for stderr maybe we don't use this. Only set error to true */\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    /** used for testing */\n    keepscript?: boolean;\n    /** Always use args as an array of strings instead of a string */\n    args?: string[];\n    /** Always use interpreter_args as an array of strings instead of a string */\n    interpreter_args?: string[];\n    /** Always use a number for max_memory_restart */\n    max_memory_restart?: number;\n    /** */\n    watch?: boolean;\n    /** We can't set a variable field so if watch array is set we use it instead of watch */\n    watch_array?: string[];\n\n    /** \n     * We can't set a gRPC field to any so we need to stringify them on API sync \n     * and parse them on the satellite */\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateMachinesService.html":{"url":"injectables/StateMachinesService.html","title":"injectable - StateMachinesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StateMachinesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stateMachines/stateMachines.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _fs\n                            \n                            \n                                    Private\n                                _fsPromises\n                            \n                            \n                                    Private\n                                _path\n                            \n                            \n                                    Public\n                                dbStream$\n                            \n                            \n                                    Public\n                                satStream$\n                            \n                            \n                                    Public\n                                sendEvent$\n                            \n                            \n                                    Public\n                                storeValue$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createStateMachine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_cwlService: CWLService, _sampleService: SamplesService, _satelliteService: SatelliteService, _subDomainService: SubDomainService, _tasksQueueService: TasksQueueService, _labService: LabService, _httpService: HttpService, _configService: ConfigService, _appService: AppService)\n                    \n                \n                        \n                            \n                                Defined in src/stateMachines/stateMachines.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _cwlService\n                                                  \n                                                        \n                                                                        CWLService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _sampleService\n                                                  \n                                                        \n                                                                        SamplesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _satelliteService\n                                                  \n                                                        \n                                                                        SatelliteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _subDomainService\n                                                  \n                                                        \n                                                                        SubDomainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _tasksQueueService\n                                                  \n                                                        \n                                                                        TasksQueueService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _labService\n                                                  \n                                                        \n                                                                        LabService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _appService\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createStateMachine\n                        \n                    \n                \n            \n            \n                \n                    \n                    createStateMachine(config: any, options: any, transitions: any, satelliteId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/stateMachines/stateMachines.service.ts:57\n                \n            \n\n\n            \n                \n                    Create a State Machine and setup transitions for it\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains config setup for State Machine\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains Actions and Guards\n\n                                    \n                                \n                                \n                                    transitions\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Actions to perform on Transition States\n\n                                    \n                                \n                                \n                                    satelliteId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the relevant Satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Interpreted Finite State Machine and a specific Logger for this State Machine\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _fs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : fs\n                    \n                \n                    \n                        \n                                Defined in src/stateMachines/stateMachines.service.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _fsPromises\n                        \n                    \n                \n            \n                \n                    \n                        Default value : fs.promises\n                    \n                \n                    \n                        \n                                Defined in src/stateMachines/stateMachines.service.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _path\n                        \n                    \n                \n            \n                \n                    \n                        Default value : path\n                    \n                \n                    \n                        \n                                Defined in src/stateMachines/stateMachines.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dbStream$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/stateMachines/stateMachines.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        satStream$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/stateMachines/stateMachines.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendEvent$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/stateMachines/stateMachines.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        storeValue$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/stateMachines/stateMachines.service.ts:43\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { ConfigService } from '@nestjs/config';\nimport { Subject } from 'rxjs';\nimport { CWLService } from '../mongoConnection/cwl.service';\nimport { createMachine, interpret, Interpreter } from 'xstate';\nconst path = require('path');\nimport fs = require('fs');\n\nimport { ProcessedStateMachine, SendEvent, SatelliteTask, StoreKey, APISyncMessage, ServiceCommand } from '../interfaces';\nimport { stateLogger } from '../lib/logger';\nimport { SamplesService } from '../mongoConnection/samples.service';\nimport { SatelliteService } from '../mongoConnection/satellite.service';\nimport { SubDomainService } from '../mongoConnection/subDomain.service';\nimport { TasksQueueService } from '../mongoConnection/tasksQueue.service';\nimport { LabService } from '../mongoConnection/labs.service';\nimport { AppService } from '../app.service';\n\n@Injectable()\nexport class StateMachinesService {\n    constructor (\n        private _cwlService: CWLService,\n        private _sampleService: SamplesService,\n        private _satelliteService: SatelliteService,\n        private _subDomainService: SubDomainService,\n        private _tasksQueueService: TasksQueueService,\n        private _labService: LabService,\n        private _httpService: HttpService,\n        private _configService: ConfigService,\n        @Inject(forwardRef(() => AppService))\n        private _appService: AppService,\n    ) {}\n    // Currently does nothing real\n    public dbStream$ = new Subject();\n\n    // Subject that sends tasks to the appropriate Satellite\n    public satStream$ = new Subject();\n\n    // Subject that sends messages to other State Machines relevant to the same satellite\n    public sendEvent$ = new Subject();\n\n    // Subject that stores a key value pair on a state machien\n    public storeValue$ = new Subject();\n\n    private _path = path;\n    private _fs = fs;\n    private _fsPromises = fs.promises;\n\n    /**\n     * Create a State Machine and setup transitions for it\n     * @param config Contains config setup for State Machine\n     * @param options Contains Actions and Guards\n     * @param transitions Actions to perform on Transition States\n     * @param satelliteId Id of the relevant Satellite\n     * @returns Interpreted Finite State Machine and a specific Logger for this State Machine\n     */\n    public async createStateMachine(config: any, options: any, transitions: any, satelliteId: string): Promise {\n        const updatedOptions = { ...options };\n        const updatedConfig = { ...config };\n        const logger = await stateLogger(config.id, satelliteId);\n        \n        const AsyncFunction = Object.getPrototypeOf(async function(){}).constructor\n\n        // Update the config for any keys that are marked as functions\n        const updatedContext = {};\n        if (config.context) {\n            Object.keys(config.context).forEach((k) => {\n                const value = config.context[k];\n                if (typeof value === 'string' && value.includes('func::')) {\n                    updatedContext[k] = (args) => {\n                        try {\n                            const script = value.replace('func::', '');\n                            // Don't require the target if sending to itself\n                            const send = (type: string, target?: string | number, delay?: number) => {\n                                let to: string;\n                                if (!target || typeof target === 'number') {\n                                    to = config.id;\n                                    if (typeof target === 'number') {\n                                        delay = target;\n                                    }\n                                } else {\n                                    to = target;\n                                }\n                                this.sendEvent$.next({ to, type, delay, satelliteId });\n                            };\n                            const satTasks = (tasks: SatelliteTask[]) => this.satStream$.next({ satelliteid: satelliteId, tasks });\n                            const satCommands = (commands: ServiceCommand[]) => this.satStream$.next({ satelliteid: satelliteId, commands });\n                            // Don't require the target if storing on itself\n                            const store = (key: string, value: any, target?: string, func?: any) => {\n                                let to = target || config.id;\n                                this.storeValue$.next({ satelliteId, to, key, value })\n                            };\n                            const context = (key: string) => this._appService.satConnections[satelliteId].stateMachines[config.id].fsm.state.context[key];\n                            new AsyncFunction('logger', 'satelliteId', 'args', 'send', 'satTasks', 'satCommands', 'store', 'context', script).call(this, logger, satelliteId, args, send, satTasks, satCommands, store, context);\n                        } catch (err) {\n                            logger.error(`Failed to run context ${k}: ${err}`);\n                        }\n                    }\n                } else {\n                    updatedContext[k] = value;\n                }\n\n            });\n        }\n\n        // Update the actions to allow the functions to run correctly\n        const updatedActions = {};\n        if (updatedOptions.actions) {\n            const actions = updatedOptions.actions;\n            Object.keys(actions).forEach(\n                (k) => updatedActions[k] = (ctx) => {\n                        try {\n                            // Don't require the target if sending to itself\n                            const send = (type: string, target?: string | number, delay?: number) => {\n                                let to: string;\n                                if (!target || typeof target === 'number') {\n                                    to = config.id;\n                                    if (typeof target === 'number') {\n                                        delay = target;\n                                    }\n                                } else {\n                                    to = target;\n                                }\n                                this.sendEvent$.next({ to, type, delay, satelliteId });\n                            };\n                            new AsyncFunction('ctx', 'logger', 'satelliteId', 'send', actions[k]).call(this, ctx, logger, satelliteId, send);\n                        } catch (err) {\n                            logger.error(`Failed to run action ${k}: ${err}`);\n                        }\n                    }\n            );\n        }\n        \n        // Update teh guards to allow the functions to run correctly\n        const updatedGuards = {};\n        if (updatedOptions.guards) {\n            const guards = updatedOptions.guards;\n            Object.keys(guards).forEach(\n                (k) =>\n                    (updatedGuards[k] = (ctx) => {\n                        try {\n                            return new AsyncFunction('ctx', 'logger', 'satelliteId', guards[k]).call(this, ctx, logger, satelliteId);\n                        } catch (err) {\n                            logger.error(`Failed to run guard ${k}: ${err}`);\n                        }\n                    }),\n            );\n        }\n\n        updatedOptions.actions = updatedActions;\n        updatedOptions.guards = updatedGuards;\n        \n        updatedConfig.context = updatedContext;\n\n        const machine = createMachine(updatedConfig, updatedOptions);\n        const interpreted = interpret(machine);\n\n        // Correctly Parse the functions for Transitions\n        const updatedTransitions = {};\n        if (transitions) {\n            Object.keys(transitions).forEach(\n                (k) =>\n                    (updatedTransitions[k] = (state) => {\n                        try {\n                            new AsyncFunction('state', 'logger', 'satelliteId', transitions[k]).call(this, state, logger, satelliteId);\n                        } catch (err) {\n                            logger.error(`Failed to run transition ${k}: ${err}`);\n                        }\n                    }),\n            );\n        }\n\n        interpreted.start();\n\n        // Setup the Transitions for the StateMachine\n        interpreted.onTransition((state) => {\n            logger.info(`Current State is ${state.value}`);\n            if (typeof state.value !== 'string') {\n                logger.error(`Invalid state: ${state.value} - type ${typeof state.value}`);\n                return;\n            }\n            if (updatedTransitions[state.value]) {\n                try {\n                    updatedTransitions[state.value](state);\n                } catch (err) {\n                    logger.error(`Error with transition to ${state.value}: ${err}`);\n                }\n            } else {\n                logger.debug(`No custom action for ${state.value}`);\n            }\n        });\n\n        return { interpreted, logger };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StateOptions.html":{"url":"classes/StateOptions.html","title":"class - StateOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StateOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/satelliteMachines.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entry\n                            \n                            \n                                exit\n                            \n                            \n                                on\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        entry\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exit\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        on\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, of: OnOptions})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SatelliteMachineDocument = SatelliteMachine & Document;\n\nclass OnOptions {\n    @Prop()\n    target?: string;\n\n    @Prop()\n    actions?: string[];\n\n    @Prop()\n    cond?: string;\n}\n\nclass StateOptions {\n    @Prop()\n    entry: string[];\n\n    @Prop()\n    exit: string[];\n\n    @Prop({type: Object, of: OnOptions})\n    on: {\n        [key: string]: OnOptions;\n    }\n}\n\nclass UnProcessedStateMachine {\n    @Prop({ type: Object, of: StateOptions })\n    states?: {\n        [key: string]: StateOptions;\n    }\n\n    @Prop({ type: Object, of: OnOptions })\n    on?: {\n        [key: string]: OnOptions;\n    }\n\n    @Prop({ type: Object, of: String })\n    guards?: {\n        [key: string]: string;\n    }\n\n    @Prop({ type: Object, of: String })\n    actions?: {\n        [key: string]: string;\n    }\n}\n\n@Schema({ collection: 'satellite_machines', minimize: false })\nexport class SatelliteMachine {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    children?: SatelliteMachine[];\n\n    @Prop({ type: Object })\n    options?: any;\n    \n    @Prop()\n    statemachine?: UnProcessedStateMachine;\n\n    @Prop()\n    onlymachine?: boolean;\n}\n\nexport const SatelliteMachineSchema = SchemaFactory.createForClass(SatelliteMachine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoreKey.html":{"url":"interfaces/StoreKey.html","title":"interface - StoreKey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StoreKey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/stateMachines.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            satelliteId\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        satelliteId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        satelliteId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Interpreter } from \"xstate\";\n\nimport { SatelliteTask } from \".\";\n\nexport interface ProcessedStateMachine {\n    interpreted: Interpreter;\n    logger: any;\n}\n\n// export interface SendSatelliteTask {\n//     satelliteid: string;\n//     tasks: SatelliteTask[]; // Fix this\n// }\n\nexport interface SendEvent {\n    /** id of stateMachine that should handle the event */\n    to: string;\n    /** type of event (eg: 'event', '') */\n    type: string;\n    delay?: number;\n    /** satellite that stateMachine exists on */\n    satelliteId: string;\n}\n\nexport interface TriggerContext {\n    to: string;\n    satelliteId: string;\n    method: string;\n    args?: any;\n    callback?: (err: string) => void;\n}\n\nexport interface StoreKey {\n    to: string;\n    satelliteId: string;\n    key: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubDomain.html":{"url":"classes/SubDomain.html","title":"class - SubDomain","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubDomain\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/subdomain.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                absoluteUrl\n                            \n                            \n                                certs\n                            \n                            \n                                dnsRecordId\n                            \n                            \n                                inUse\n                            \n                            \n                                satellite_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/subdomain.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        absoluteUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/subdomain.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        certs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/subdomain.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dnsRecordId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/subdomain.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inUse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/subdomain.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        satellite_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/subdomain.schema.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SubDomainDocument = SubDomain & Document;\n\n@Schema({ collection: 'sub_domains' })\nexport class SubDomain {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    satellite_id: string;\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    absoluteUrl: string;\n\n    @Prop()\n    dnsRecordId: string;\n\n    @Prop({ type: Object })\n    certs: {\n        key: string;\n        ca: string;\n        cert: string;\n    };\n}\n\nexport const SubDomainSchema = SchemaFactory.createForClass(SubDomain);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubDomainService.html":{"url":"injectables/SubDomainService.html","title":"injectable - SubDomainService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubDomainService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/subDomain.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getBySatId\n                            \n                            \n                                    Async\n                                getDevInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subDomainModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/mongoConnection/subDomain.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subDomainModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBySatId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBySatId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/subDomain.service.ts:18\n                \n            \n\n\n            \n                \n                    Get a satellite by its token, if no subdomain is found, find an unused subdomain and assign it\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDevInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDevInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/subDomain.service.ts:29\n                \n            \n\n\n            \n                \n                    Gets information for certs for development satellite\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\nimport { SubDomain, SubDomainDocument } from './schemas/subdomain.schema';\n\n@Injectable()\nexport class SubDomainService {\n    constructor(\n        @InjectModel(SubDomain.name)\n        private subDomainModel: Model,\n    ) {}\n\n    /**\n     * Get a satellite by its token, if no subdomain is found, find an unused subdomain and assign it\n     * @param token unique JWT for satellite\n     */\n    async getBySatId(id: string): Promise {\n        let subDomain = await this.subDomainModel.findOne({ satellite_id: id }).exec();\n        if (!subDomain) {\n            subDomain = await this.subDomainModel.findOneAndUpdate({ inUse: false }, { $set: { satellite_id: id, inUse: true } }, { useFindAndModify: false }).exec();\n        }\n        return subDomain;\n    }\n\n    /**\n     * Gets information for certs for development satellite\n     */\n    async getDevInfo(): Promise {\n        return await this.subDomainModel.findOne({ satellite_id: 'test' }).exec();\n    }\n\n    // async clearOldSatellite(satellite_id: string): Promise {\n    //     try {\n    //         return this.subDomainModel.findOneAndUpdate({ satellite_id }, { $set: { satellite_id: '', inUse: false } }, { useFindAndModify: false });\n    //     } catch (err) {\n    //         throw err;\n    //     }\n    // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TasksQueue.html":{"url":"classes/TasksQueue.html","title":"class - TasksQueue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TasksQueue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/task.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                action\n                            \n                            \n                                date\n                            \n                            \n                                payload\n                            \n                            \n                                satellite_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/task.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/task.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/task.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/task.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        satellite_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/task.schema.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type TasksQueueDocument = TasksQueue & Document;\n\nclass Date {\n    @Prop()\n    modified: number;\n\n    @Prop()\n    created: number;\n}\n\n@Schema({ collection: 'tasks_queue' })\nexport class TasksQueue {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    satellite_id: string;\n\n    @Prop()\n    action: string;\n\n    @Prop()\n    payload: Map;\n\n    @Prop({ type: Date })\n    date: Date;\n}\n\nexport const TasksQueueSchema = SchemaFactory.createForClass(TasksQueue);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksQueueService.html":{"url":"injectables/TasksQueueService.html","title":"injectable - TasksQueueService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TasksQueueService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/tasksQueue.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findTaskBySampleId\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                getBySatId\n                            \n                            \n                                    Private\n                                nth\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateDownloadProgress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tasksQueueModel: Model, sampleService: SamplesService, serviceTagModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/mongoConnection/tasksQueue.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tasksQueueModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sampleService\n                                                  \n                                                        \n                                                                        SamplesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceTagModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(_id: string, satellite_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/tasksQueue.service.ts:63\n                \n            \n\n\n            \n                \n                    Delete a task by id and satellite id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo id of task\n\n                                    \n                                \n                                \n                                    satellite_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo id of satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findTaskBySampleId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTaskBySampleId(sampleId: string, satelliteId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/tasksQueue.service.ts:162\n                \n            \n\n\n            \n                \n                    Finds a Task Queue Object by Sample Id and Satellite Id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of sample to find task by\n\n                                    \n                                \n                                \n                                    satelliteId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Satellite Id that task belongs to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A Task Queue Object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(task_id: string, satellite_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/tasksQueue.service.ts:47\n                \n            \n\n\n            \n                \n                    Get task by id, must include matching satellite id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo id of task\n\n                                    \n                                \n                                \n                                    satellite_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo id of satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBySatId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBySatId(satellite_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/tasksQueue.service.ts:26\n                \n            \n\n\n            \n                \n                    Find all of the tasks for a given satellite\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    satellite_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo id of the satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        nth\n                        \n                    \n                \n            \n            \n                \n                    \n                    nth(n: number)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/tasksQueue.service.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(task_id: string, updatedInfo: any)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/tasksQueue.service.ts:103\n                \n            \n\n\n            \n                \n                    Update the progress of a given task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo id of task\n\n                                    \n                                \n                                \n                                    updatedInfo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        task info to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateDownloadProgress\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDownloadProgress(taskId: string, fileId: string, status: string, progress: number, satId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mongoConnection/tasksQueue.service.ts:127\n                \n            \n\n\n            \n                \n                    Update Download Progress by Task ID and File ID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    taskId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo id of task\n\n                                    \n                                \n                                \n                                    fileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id to find file to update\n\n                                    \n                                \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        status of download\n\n                                    \n                                \n                                \n                                    progress\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        0 to 100 represents download progress\n\n                                    \n                                \n                                \n                                    satId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo id of satellite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\n// import { updatedInfoTasksQueue } from '../interfaces';\nimport { TasksQueueDocument, TasksQueue } from './schemas/task.schema';\nimport { SamplesService } from './samples.service';\nimport Log from '../lib/logger';\nimport { ServiceTag, ServiceTagDocument } from './schemas/serviceTag.schema';\n\n@Injectable()\nexport class TasksQueueService {\n    constructor(\n        @InjectModel(TasksQueue.name)\n        private tasksQueueModel: Model,\n        @Inject(forwardRef(() => SamplesService))\n        private sampleService: SamplesService,\n        @InjectModel(ServiceTag.name)\n        private serviceTagModel: Model,\n    ) {}\n\n    /**\n     * Find all of the tasks for a given satellite\n     * @param satellite_id mongo id of the satellite\n     */\n    async getBySatId(satellite_id: string): Promise {\n        const priorityTag = await this.serviceTagModel.findOne({ priority: true }).exec();\n        const tasks = await this.tasksQueueModel.find({ satellite_id }).exec();\n        if (!priorityTag) return { queue: tasks, priorityQueue: [] };\n        return tasks.reduce(\n            (final, task) => {\n                const service_tags = task.payload.get('service_tags');\n                if (!service_tags) final.queue.push(task);\n                else if (task.payload.get('service_tags').includes(priorityTag._id)) final.priorityQueue.push(task);\n                else final.queue.push(task);\n                return final;\n            },\n            { queue: [], priorityQueue: [] },\n        );\n    }\n\n    /**\n     * Get task by id, must include matching satellite id\n     * @param task_id mongo id of task\n     * @param satellite_id mongo id of satellite\n     */\n    async getById(task_id: string, satellite_id: string): Promise {\n        try {\n            const task = await this.tasksQueueModel.findById(task_id).exec();\n            if (!task) throw Error(`Task ${task_id} not found`);\n            if (task.satellite_id === satellite_id) return task;\n            throw Error(`${satellite_id} attempted to access wrong task`);\n        } catch (err) {\n            throw err;\n        }\n    }\n\n    /**\n     * Delete a task by id and satellite id\n     * @param _id mongo id of task\n     * @param satellite_id mongo id of satellite\n     */\n    async delete(_id: string, satellite_id: string): Promise {\n        try {\n            const task = await this.tasksQueueModel.findById(_id).exec();\n            if (!task) throw Error(`Task ${_id} not found`);\n            if (task.satellite_id !== satellite_id) throw Error('Attempted to access wrong task');\n            const tasksBySat = await this.tasksQueueModel.find({ satellite_id: task.satellite_id });\n            tasksBySat.forEach(async (t) => {\n                if (t._id === task._id) return;\n                if (t.date.created  {\n    async update(task_id: string, updatedInfo: any): Promise {\n        const newUpdatedInfo = { ...updatedInfo };\n        const task = await this.tasksQueueModel.findById(task_id);\n        const updatedPayload = new Map();\n        task.payload.forEach((value, key) => {\n            updatedPayload.set(key, value);\n        });\n        if (newUpdatedInfo.payload) {\n            Object.keys(newUpdatedInfo.payload).forEach((key) => {\n                updatedPayload.set(key, newUpdatedInfo.payload[key]);\n            });\n            newUpdatedInfo.payload = updatedPayload;\n        }\n        return await this.tasksQueueModel.findByIdAndUpdate(task_id, { ...newUpdatedInfo }, { useFindAndModify: false }).exec();\n    }\n\n    /**\n     * Update Download Progress by Task ID and File ID\n     * @param taskId mongo id of task\n     * @param fileId id to find file to update\n     * @param status status of download\n     * @param progress 0 to 100 represents download progress\n     * @param satId mongo id of satellite\n     */\n    async updateDownloadProgress(taskId: string, fileId: string, status: string, progress: number, satId: string) {\n        try {\n            const task = await this.getById(taskId, satId);\n            const downloads = task.payload.get('downloads');\n            const download = { ...downloads[fileId] };\n            if (status === 'finished') {\n                download.downloaded = true;\n            } else {\n                download.progress = progress;\n            }\n            const toUpdate = `payload.downloads.${fileId}`;\n            await this.tasksQueueModel.findByIdAndUpdate(taskId, { $set: { [toUpdate]: download } }, { useFindAndModify: false });\n\n            const preview = {\n                state: status,\n                dagId: '',\n                runId: task.payload.get('sample_id'),\n                progress: progress,\n            };\n            await this.sampleService.updateProgress(preview);\n        } catch (err) {\n            throw err;\n        }\n    }\n\n    private nth(n: number): string {\n        return [, 'st', 'nd', 'rd'][(n / 10) % 10 ^ 1 && n % 10] || 'th';\n    }\n\n    /**\n     * Finds a Task Queue Object by Sample Id and Satellite Id\n     * @param sampleId Id of sample to find task by\n     * @param satelliteId Satellite Id that task belongs to\n     * @returns A Task Queue Object\n     */\n    async findTaskBySampleId(sampleId: string, satelliteId: string): Promise {\n        try {\n            const task = await this.tasksQueueModel.findOne({ satellite_id: satelliteId, 'payload.sample_id': sampleId }).exec();\n            if (!task) throw new Error(`No Task with sample: ${sampleId} for satellite: ${satelliteId}`);\n            return task;\n        } catch (err) {\n            throw err;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TriggerContext.html":{"url":"interfaces/TriggerContext.html","title":"interface - TriggerContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TriggerContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/stateMachines.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            args\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            callback\n                                        \n                                \n                                \n                                        \n                                            method\n                                        \n                                \n                                \n                                        \n                                            satelliteId\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        args\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        args:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        satelliteId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        satelliteId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Interpreter } from \"xstate\";\n\nimport { SatelliteTask } from \".\";\n\nexport interface ProcessedStateMachine {\n    interpreted: Interpreter;\n    logger: any;\n}\n\n// export interface SendSatelliteTask {\n//     satelliteid: string;\n//     tasks: SatelliteTask[]; // Fix this\n// }\n\nexport interface SendEvent {\n    /** id of stateMachine that should handle the event */\n    to: string;\n    /** type of event (eg: 'event', '') */\n    type: string;\n    delay?: number;\n    /** satellite that stateMachine exists on */\n    satelliteId: string;\n}\n\nexport interface TriggerContext {\n    to: string;\n    satelliteId: string;\n    method: string;\n    args?: any;\n    callback?: (err: string) => void;\n}\n\nexport interface StoreKey {\n    to: string;\n    satelliteId: string;\n    key: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Type.html":{"url":"classes/Type.html","title":"class - Type","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Type\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/apiSyncMachines.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                actions\n                            \n                            \n                                    Optional\n                                cond\n                            \n                            \n                                    Optional\n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        cond\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/apiSyncMachines.schema.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type ApiSyncMachineDocument = ApiSyncMachine & Document;\n\nclass Type {\n    @Prop()\n    target?: string;\n\n    @Prop()\n    cond?: string;\n\n    @Prop()\n    actions?: string[];\n}\n\nclass State {\n    @Prop()\n    entry?: string[];\n\n    @Prop()\n    exit?: string[];\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Config {\n    @Prop()\n    id: string;\n\n    @Prop()\n    initial: string;\n\n    @Prop({type: Object})\n    context: {\n        [key: string]: any;\n    };\n\n    @Prop({type: Object, of: State})\n    states: {\n        [key: string]: State;\n    }\n\n    @Prop({type: Object, of: Type})\n    on?: {\n        [key: string]: Type;\n    }\n}\n\nexport class Options {\n    @Prop({type: Object, of: String})\n    actions?: {\n        [key: string]: string;\n    }\n\n    @Prop({type: Object, of: String})\n    guards?: {\n        [key: string]: string;\n    }\n}\n\nexport class MachineCommand {\n    @Prop()\n    target: string;\n\n    @Prop()\n    label: string;\n\n    @Prop()\n    args?: string;\n\n    @Prop()\n    style?: string;\n}\n\n@Schema({ collection: 'api_sync_machines', minimize: false })\nexport class ApiSyncMachine {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    applyTo: string[];\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    type: string;\n\n    @Prop()\n    commands?: MachineCommand[];\n\n    @Prop()\n    config: Config;\n    \n    @Prop()\n    options: Options;\n\n    @Prop({type: Object, of: String})\n    transitions: {\n        [key: string]: string;\n    };\n}\n\nexport const ApiSyncMachineSchema = SchemaFactory.createForClass(ApiSyncMachine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnProcessedStateMachine.html":{"url":"classes/UnProcessedStateMachine.html","title":"class - UnProcessedStateMachine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnProcessedStateMachine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/satelliteMachines.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                actions\n                            \n                            \n                                    Optional\n                                guards\n                            \n                            \n                                    Optional\n                                on\n                            \n                            \n                                    Optional\n                                states\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, of: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        guards\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, of: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        on\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, of: OnOptions})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        states\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, of: StateOptions})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/satelliteMachines.schema.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type SatelliteMachineDocument = SatelliteMachine & Document;\n\nclass OnOptions {\n    @Prop()\n    target?: string;\n\n    @Prop()\n    actions?: string[];\n\n    @Prop()\n    cond?: string;\n}\n\nclass StateOptions {\n    @Prop()\n    entry: string[];\n\n    @Prop()\n    exit: string[];\n\n    @Prop({type: Object, of: OnOptions})\n    on: {\n        [key: string]: OnOptions;\n    }\n}\n\nclass UnProcessedStateMachine {\n    @Prop({ type: Object, of: StateOptions })\n    states?: {\n        [key: string]: StateOptions;\n    }\n\n    @Prop({ type: Object, of: OnOptions })\n    on?: {\n        [key: string]: OnOptions;\n    }\n\n    @Prop({ type: Object, of: String })\n    guards?: {\n        [key: string]: string;\n    }\n\n    @Prop({ type: Object, of: String })\n    actions?: {\n        [key: string]: string;\n    }\n}\n\n@Schema({ collection: 'satellite_machines', minimize: false })\nexport class SatelliteMachine {\n    @Prop()\n    _id: string;\n\n    @Prop()\n    inUse: boolean;\n\n    @Prop()\n    children?: SatelliteMachine[];\n\n    @Prop({ type: Object })\n    options?: any;\n    \n    @Prop()\n    statemachine?: UnProcessedStateMachine;\n\n    @Prop()\n    onlymachine?: boolean;\n}\n\nexport const SatelliteMachineSchema = SchemaFactory.createForClass(SatelliteMachine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UnProcessedStateMachineOptions.html":{"url":"interfaces/UnProcessedStateMachineOptions.html","title":"interface - UnProcessedStateMachineOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UnProcessedStateMachineOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            actions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            guards\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            on\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            states\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guards\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        guards:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        on\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        on:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        states\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        states:         OptionTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OptionTypes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\nimport { Config, Options } from '../mongoConnection/schemas/apiSyncMachines.schema';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId?: string;\n    satelliteid?: string;\n    tasks?: SatelliteTask[];\n    trees?: DependencyTree[];\n    commands?: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children?: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    /** Target machine on API Sync */\n    apimachine?: string;\n    /** Method for stdout */\n    outresponse?: string;\n    /** Method for stderr maybe we don't use this. Only set error to true */\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine?: StateMachineOptions;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes & { on?: OnOptions };\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: (ctx) => void };\n    actions?: { [key: string]: (ctx) => void };\n}\n\ninterface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\ninterface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    /** used for testing */\n    keepscript?: boolean;\n    /** Always use args as an array of strings instead of a string */\n    args?: string[];\n    /** Always use interpreter_args as an array of strings instead of a string */\n    interpreter_args?: string[];\n    /** Always use a number for max_memory_restart */\n    max_memory_restart?: number;\n    /** */\n    watch?: boolean;\n    /** We can't set a variable field so if watch array is set we use it instead of watch */\n    watch_array?: string[];\n\n    /** \n     * We can't set a gRPC field to any so we need to stringify them on API sync \n     * and parse them on the satellite */\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    taskid: string;\n    sender: string;\n    // type: string;\n    target: string;\n    messages?: { action: string; body: string; }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    satellite: string;\n    method: string;\n    output: string;\n    error?: boolean;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface CreateAPIMachine {\n    config: Config;\n    commands?: MachineCommand[];\n    options: Options;\n    transitions?: {\n        [key: string]: string;\n    };\n    satelliteId: string;\n    callback?: () => {};\n}\n\nexport interface MachineCommand {\n    label: string;\n    target: string;\n    args?: string;\n    style?: string;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            variable\n            crypto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            variable\n            fs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            variable\n            fsPromises\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            variable\n            path\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            variable\n            pingKillTimer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            variable\n            pingTimer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.guard.ts\n            \n            guard\n            AuthGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            variable\n            fs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            variable\n            path\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            APISyncComplete\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            APISyncMessage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            APISyncService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            CreateAPIMachine\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            CustomPm2StartOptions\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            DependencyTree\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            FileFromClient\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            MachineCommand\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            OnOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            OptionTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            ProcessedTree\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            SatelliteMessage\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            SatelliteOutput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            SatelliteTask\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            ServiceCommand\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            StartOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            StateMachineOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            StateOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            UnProcessedStateMachineOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/connection.interface.ts\n            \n            interface\n            APISyncStateMachineObject\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interfaces/connection.interface.ts\n            \n            interface\n            LocalFiles\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interfaces/connection.interface.ts\n            \n            interface\n            MessageToSatellite\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interfaces/connection.interface.ts\n            \n            interface\n            SatelliteConnection\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/interfaces/connection.interface.ts\n            \n            interface\n            SciDapDuplexStream\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interfaces/stateMachines.interface.ts\n            \n            interface\n            ProcessedStateMachine\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interfaces/stateMachines.interface.ts\n            \n            interface\n            SendEvent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/interfaces/stateMachines.interface.ts\n            \n            interface\n            StoreKey\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/stateMachines.interface.ts\n            \n            interface\n            TriggerContext\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/interfaces/tasksQueue.interface.ts\n            \n            interface\n            Output\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/lib/logger.ts\n            \n            variable\n            stateLogger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mongoConnection/apiSyncMachines.service.ts\n            \n            injectable\n            ApiSyncMachinesService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mongoConnection/cwl.service.ts\n            \n            injectable\n            CWLService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/mongoConnection/labs.service.ts\n            \n            injectable\n            LabService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/mongoConnection/samples.service.ts\n            \n            injectable\n            SamplesService\n            \n                68 %\n                (11/16)\n            \n        \n        \n            \n                \n                src/mongoConnection/satellite.service.ts\n            \n            injectable\n            SatelliteService\n            \n                42 %\n                (6/14)\n            \n        \n        \n            \n                \n                src/mongoConnection/satelliteMachines.service.ts\n            \n            injectable\n            SatelliteMachineService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mongoConnection/satelliteTasks.service.ts\n            \n            injectable\n            SatelliteTasksService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/apiSyncMachines.schema.ts\n            \n            class\n            ApiSyncMachine\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/apiSyncMachines.schema.ts\n            \n            class\n            Config\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/apiSyncMachines.schema.ts\n            \n            class\n            MachineCommand\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/apiSyncMachines.schema.ts\n            \n            class\n            Options\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/apiSyncMachines.schema.ts\n            \n            class\n            State\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/apiSyncMachines.schema.ts\n            \n            class\n            Type\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/apiSyncMachines.schema.ts\n            \n            variable\n            ApiSyncMachineSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/cwl.schema.ts\n            \n            class\n            CWL\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/cwl.schema.ts\n            \n            class\n            Date\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/cwl.schema.ts\n            \n            class\n            Description\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/cwl.schema.ts\n            \n            class\n            git\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/cwl.schema.ts\n            \n            class\n            Metadata\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/cwl.schema.ts\n            \n            variable\n            CWLSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/lab.schema.ts\n            \n            class\n            Lab\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/lab.schema.ts\n            \n            variable\n            LabSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/sample.schema.ts\n            \n            class\n            Date\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/sample.schema.ts\n            \n            class\n            Sample\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/sample.schema.ts\n            \n            variable\n            SampleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satellite.schema.ts\n            \n            class\n            AbsoluteUrlSettings\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satellite.schema.ts\n            \n            class\n            PublicInformation\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satellite.schema.ts\n            \n            class\n            Satellite\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satellite.schema.ts\n            \n            interface\n            RemoteModule\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satellite.schema.ts\n            \n            variable\n            SatelliteSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satelliteMachines.schema.ts\n            \n            class\n            OnOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satelliteMachines.schema.ts\n            \n            class\n            SatelliteMachine\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satelliteMachines.schema.ts\n            \n            class\n            StateOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satelliteMachines.schema.ts\n            \n            class\n            UnProcessedStateMachine\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satelliteMachines.schema.ts\n            \n            variable\n            SatelliteMachineSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satelliteTask.schema.ts\n            \n            class\n            SatelliteTask\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/satelliteTask.schema.ts\n            \n            variable\n            SatelliteTaskSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/serviceTag.schema.ts\n            \n            class\n            ServiceTag\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/serviceTag.schema.ts\n            \n            variable\n            ServiceTagSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/subdomain.schema.ts\n            \n            class\n            SubDomain\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/subdomain.schema.ts\n            \n            variable\n            SubDomainSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/task.schema.ts\n            \n            class\n            Date\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/task.schema.ts\n            \n            class\n            TasksQueue\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/mongoConnection/schemas/task.schema.ts\n            \n            variable\n            TasksQueueSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mongoConnection/subDomain.service.ts\n            \n            injectable\n            SubDomainService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/mongoConnection/tasksQueue.service.ts\n            \n            injectable\n            TasksQueueService\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/rpc-connection.filter.ts\n            \n            class\n            ExceptionFilter\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/satInterface/satInterface.controller.ts\n            \n            controller\n            SatInterfaceController\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/stateMachines/stateMachines.service.ts\n            \n            injectable\n            StateMachinesService\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/stateMachines/stateMachines.service.ts\n            \n            variable\n            path\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @grpc/proto-loader : 0.5.5\n        \n            @nestjs/axios : 0.0.4\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^1.1.6\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/microservices : 7.5.1\n        \n            @nestjs/mongoose : ^7.2.0\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/schedule : ^1.0.2\n        \n            bunyan : ^1.8.15\n        \n            crypto : ^1.0.1\n        \n            cwlts : ^1.23.2\n        \n            grpc : 1.24.4\n        \n            mongoose : ^5.11.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            uuid : ^8.3.2\n        \n            xstate : ^4.26.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/git.html":{"url":"classes/git.html","title":"class - git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  git\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongoConnection/schemas/cwl.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                local_path\n                            \n                            \n                                message\n                            \n                            \n                                path\n                            \n                            \n                                remote\n                            \n                            \n                                sha\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        local_path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remote\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sha\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mongoConnection/schemas/cwl.schema.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type CWLDocument = CWL & Document;\n\nclass Date {\n    @Prop()\n    modified: number;\n}\n\nclass Description {\n    @Prop()\n    author: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    info: string;\n\n    @Prop()\n    label: string;\n\n    @Prop()\n    url: string;\n\n    @Prop()\n    version: string;\n}\n\nclass git {\n    @Prop()\n    message: string;\n\n    @Prop()\n    path: string;\n\n    @Prop()\n    remote: string;\n\n    @Prop()\n    sha: string;\n\n    @Prop()\n    local_path: string;\n}\n\nclass Metadata {\n    @Prop()\n    path: string;\n\n    @Prop()\n    source: string;\n}\n\n@Schema({ collection: 'CWL' })\nexport class CWL {\n    @Prop()\n    _id: string;\n\n    @Prop({ type: Date })\n    date: Date;\n\n    @Prop()\n    description: Description;\n\n    @Prop()\n    git: git;\n\n    @Prop()\n    metadata: Metadata[];\n\n    @Prop()\n    servicetags: string[];\n\n    @Prop()\n    tags: string[];\n\n    @Prop({ type: Object })\n    upstream: any;\n\n    @Prop({ type: Object })\n    source: {\n        json: string;\n        packed: string;\n        source: string;\n    };\n}\n\nexport const CWLSchema = SchemaFactory.createForClass(CWL);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoConnectionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SatInterfaceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StateMachineModules\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_MongoConnectionModule\n\n\n\ncluster_MongoConnectionModule_exports\n\n\n\ncluster_MongoConnectionModule_providers\n\n\n\ncluster_StateMachineModules\n\n\n\ncluster_StateMachineModules_exports\n\n\n\ncluster_StateMachineModules_providers\n\n\n\n\nMongoConnectionModule\n\nMongoConnectionModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nMongoConnectionModule->AppModule\n\n\n\n\n\nApiSyncMachinesService \n\nApiSyncMachinesService \n\nApiSyncMachinesService  -->\n\nMongoConnectionModule->ApiSyncMachinesService \n\n\n\n\n\nCWLService \n\nCWLService \n\nCWLService  -->\n\nMongoConnectionModule->CWLService \n\n\n\n\n\nLabService \n\nLabService \n\nLabService  -->\n\nMongoConnectionModule->LabService \n\n\n\n\n\nSamplesService \n\nSamplesService \n\nSamplesService  -->\n\nMongoConnectionModule->SamplesService \n\n\n\n\n\nSatelliteMachineService \n\nSatelliteMachineService \n\nSatelliteMachineService  -->\n\nMongoConnectionModule->SatelliteMachineService \n\n\n\n\n\nSatelliteService \n\nSatelliteService \n\nSatelliteService  -->\n\nMongoConnectionModule->SatelliteService \n\n\n\n\n\nSatelliteTasksService \n\nSatelliteTasksService \n\nSatelliteTasksService  -->\n\nMongoConnectionModule->SatelliteTasksService \n\n\n\n\n\nSubDomainService \n\nSubDomainService \n\nSubDomainService  -->\n\nMongoConnectionModule->SubDomainService \n\n\n\n\n\nTasksQueueService \n\nTasksQueueService \n\nTasksQueueService  -->\n\nMongoConnectionModule->TasksQueueService \n\n\n\n\n\nStateMachineModules\n\nStateMachineModules\n\nStateMachineModules -->\n\nMongoConnectionModule->StateMachineModules\n\n\n\n\n\nAppService \n\nAppService \n\nAppService  -->\n\nAppModule->AppService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nApiSyncMachinesService\n\nApiSyncMachinesService\n\nMongoConnectionModule -->\n\nApiSyncMachinesService->MongoConnectionModule\n\n\n\n\n\nCWLService\n\nCWLService\n\nMongoConnectionModule -->\n\nCWLService->MongoConnectionModule\n\n\n\n\n\nLabService\n\nLabService\n\nMongoConnectionModule -->\n\nLabService->MongoConnectionModule\n\n\n\n\n\nSamplesService\n\nSamplesService\n\nMongoConnectionModule -->\n\nSamplesService->MongoConnectionModule\n\n\n\n\n\nSatelliteMachineService\n\nSatelliteMachineService\n\nMongoConnectionModule -->\n\nSatelliteMachineService->MongoConnectionModule\n\n\n\n\n\nSatelliteService\n\nSatelliteService\n\nMongoConnectionModule -->\n\nSatelliteService->MongoConnectionModule\n\n\n\n\n\nSatelliteTasksService\n\nSatelliteTasksService\n\nMongoConnectionModule -->\n\nSatelliteTasksService->MongoConnectionModule\n\n\n\n\n\nSubDomainService\n\nSubDomainService\n\nMongoConnectionModule -->\n\nSubDomainService->MongoConnectionModule\n\n\n\n\n\nTasksQueueService\n\nTasksQueueService\n\nMongoConnectionModule -->\n\nTasksQueueService->MongoConnectionModule\n\n\n\n\n\nStateMachinesService \n\nStateMachinesService \n\nStateMachinesService  -->\n\nStateMachineModules->StateMachinesService \n\n\n\n\n\nStateMachinesService\n\nStateMachinesService\n\nStateMachineModules -->\n\nStateMachinesService->StateMachineModules\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    27 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    30 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiSyncMachineDocument   (src/.../apiSyncMachines.schema.ts)\n                        \n                        \n                            CWLDocument   (src/.../cwl.schema.ts)\n                        \n                        \n                            LabDocument   (src/.../lab.schema.ts)\n                        \n                        \n                            SampleDocument   (src/.../sample.schema.ts)\n                        \n                        \n                            SatelliteDocument   (src/.../satellite.schema.ts)\n                        \n                        \n                            SatelliteMachineDocument   (src/.../satelliteMachines.schema.ts)\n                        \n                        \n                            SatelliteTaskDocument   (src/.../satelliteTask.schema.ts)\n                        \n                        \n                            ServiceTagDocument   (src/.../serviceTag.schema.ts)\n                        \n                        \n                            SubDomainDocument   (src/.../subdomain.schema.ts)\n                        \n                        \n                            TasksQueueDocument   (src/.../task.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/mongoConnection/schemas/apiSyncMachines.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ApiSyncMachineDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/mongoConnection/schemas/cwl.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CWLDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/mongoConnection/schemas/lab.schema.ts\n    \n    \n        \n            \n                \n                    \n                    LabDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/mongoConnection/schemas/sample.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SampleDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/mongoConnection/schemas/satellite.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SatelliteDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/mongoConnection/schemas/satelliteMachines.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SatelliteMachineDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/mongoConnection/schemas/satelliteTask.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SatelliteTaskDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/mongoConnection/schemas/serviceTag.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ServiceTagDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/mongoConnection/schemas/subdomain.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SubDomainDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/mongoConnection/schemas/task.schema.ts\n    \n    \n        \n            \n                \n                    \n                    TasksQueueDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiSyncMachineSchema   (src/.../apiSyncMachines.schema.ts)\n                        \n                        \n                            crypto   (src/.../app.controller.ts)\n                        \n                        \n                            CWLSchema   (src/.../cwl.schema.ts)\n                        \n                        \n                            fs   (src/.../app.controller.ts)\n                        \n                        \n                            fs   (src/.../app.service.ts)\n                        \n                        \n                            fsPromises   (src/.../app.controller.ts)\n                        \n                        \n                            LabSchema   (src/.../lab.schema.ts)\n                        \n                        \n                            path   (src/.../app.controller.ts)\n                        \n                        \n                            path   (src/.../app.service.ts)\n                        \n                        \n                            path   (src/.../stateMachines.service.ts)\n                        \n                        \n                            pingKillTimer   (src/.../app.controller.ts)\n                        \n                        \n                            pingTimer   (src/.../app.controller.ts)\n                        \n                        \n                            SampleSchema   (src/.../sample.schema.ts)\n                        \n                        \n                            SatelliteMachineSchema   (src/.../satelliteMachines.schema.ts)\n                        \n                        \n                            SatelliteSchema   (src/.../satellite.schema.ts)\n                        \n                        \n                            SatelliteTaskSchema   (src/.../satelliteTask.schema.ts)\n                        \n                        \n                            ServiceTagSchema   (src/.../serviceTag.schema.ts)\n                        \n                        \n                            stateLogger   (src/.../logger.ts)\n                        \n                        \n                            SubDomainSchema   (src/.../subdomain.schema.ts)\n                        \n                        \n                            TasksQueueSchema   (src/.../task.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/mongoConnection/schemas/apiSyncMachines.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiSyncMachineSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(ApiSyncMachine)\n                    \n                \n\n\n        \n    \n\n    src/app.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        crypto\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require(\"crypto\")\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('fs')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fsPromises\n                        \n                    \n                \n            \n                \n                    \n                        Default value : fs.promises\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('path')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pingKillTimer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60000\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pingTimer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30000\n                    \n                \n\n\n        \n    \n\n    src/mongoConnection/schemas/cwl.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CWLSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(CWL)\n                    \n                \n\n\n        \n    \n\n    src/app.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('fs')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('path')\n                    \n                \n\n\n        \n    \n\n    src/mongoConnection/schemas/lab.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LabSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Lab)\n                    \n                \n\n\n        \n    \n\n    src/stateMachines/stateMachines.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('path')\n                    \n                \n\n\n        \n    \n\n    src/mongoConnection/schemas/sample.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SampleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Sample)\n                    \n                \n\n\n        \n    \n\n    src/mongoConnection/schemas/satelliteMachines.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SatelliteMachineSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(SatelliteMachine)\n                    \n                \n\n\n        \n    \n\n    src/mongoConnection/schemas/satellite.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SatelliteSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Satellite)\n                    \n                \n\n\n        \n    \n\n    src/mongoConnection/schemas/satelliteTask.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SatelliteTaskSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(SatelliteTask)\n                    \n                \n\n\n        \n    \n\n    src/mongoConnection/schemas/serviceTag.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ServiceTagSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(ServiceTag)\n                    \n                \n\n\n        \n    \n\n    src/lib/logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        stateLogger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (name: string, satelliteId: string) => {\n    const logDir = resolve(__dirname, '../../satellite-logs', satelliteId);\n    try {\n        await fsPromises.access(logDir);\n    } catch (err) {\n        await fsPromises.mkdir(logDir);\n    }\n\n    return bunyan.createLogger({\n        name: `${satelliteId} State Machine ${name}`,\n        streams:\n            process.env.API_ENV === 'test' && !process.env.LOGS\n                ? []\n                : [\n                      {\n                          level: 'info',\n                          path: resolve(__dirname, logDir, 'statemachine.log'),\n                      },\n                      {\n                          level: process.env.LOG_LEVEL ? process.env.LOG_LEVEL : 'info',\n                          stream: process.stdout,\n                      },\n                  ],\n    });\n}\n                    \n                \n\n            \n                \n                    logger set to store logs in satellite id specific log folder\n\n                \n            \n\n        \n    \n\n    src/mongoConnection/schemas/subdomain.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SubDomainSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(SubDomain)\n                    \n                \n\n\n        \n    \n\n    src/mongoConnection/schemas/task.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TasksQueueSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(TasksQueue)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
